%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1902.w006.n001.80A.p25.80.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Albina Kondrateva
%%CreationDate: 2/27/2019
%%BoundingBox: 0 0 394 218
%%HiResBoundingBox: 0 0 393.6559 217.9850
%%CropBox: 0 0 393.6559 217.9850
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 72 8%%BeginData: 19765 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAF
%AFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFF
%AFFFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAF
%AFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFF
%AFAFAFFFAFAFAFFFAFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF
%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9
%AFA89A769B9A9A769B9A9B769B9A9B769B9AA8FD04AFA9AFAFAFA9AFAFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF
%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9FD35AFCA9ABC9ABD9ABC9ABD9ABD9A
%BD9ABD9A9BA2FD3CAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA2
%BDBCBD9ABDBCBD9FBDBCBD9ABDBCBD76A8AFAFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFAFFFAFAFAFFFAFAFAFFFAFAF
%AFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFF
%AFAFAFFFAFAFAFCBBCC3BCC3BDBDC2C8C2BDBCC3BDC3BCA1A2AFAFFFAFAF
%AFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFF
%AFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFA9AFAF
%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9
%AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA2BDBCBD9AC2C1C29AC8C1C29ABDBC
%BD9AA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9
%AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF
%AFA9FD33AFCABCC3C2C3C2C8BCBDC2C8C2C3C2C3BD9BA2FD3CAFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA2BC9FC2C1BD9FC29AC29AC3C1C2
%9FC39AA2AFAFA9AFA8AFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFFD04AFAECF
%A8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACABCC8BCC8BCC8
%C7C8C7C3C2C8BCC8C29B767D7D7D7C7D7CA1A8CFCACFA8CFCACFA8CFCACF
%A8CFCACFCACF7576757675765176517651765176A8FFAFAFAFFFAFAFAFFF
%AFAFAFFFAFAFAFFFAFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF
%AFA9AFAFAFA9CFC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7
%CFC3BD9AC8BCC29AC3BCC29AC3C2C29ABD9A76527C5276527C52A7C9CAC9
%CAA7CAC9CAA7CAC9CAA7CAC9CAA7754A4A4A6FFD094AA8FD04AFA9AFAFAF
%A9AFAFAFA9AFAFAFA9FD1CAFA8CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CF
%C9CAC9CFC9CAC9CABCC3BCC3BDBDBCC3BDC3BCC3BCC3BCA1767C527D767C
%527CA1CFC9CFC9CAC9CFC9CAC9CFC9CAC9CFCACA4A754A754A754A6F4A75
%4A4B4A4BA8FD14AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFAFAEA7CFC9CAA7CFC9CAA7CFC9CAA7CFC9CAA7CFC9CAA7CFC9CFA19A
%949A949A949A949A949A949A949A9A765276527C527652A7C9CAA7CFC9CA
%A7CFC9CAA7CFC9CAA7CFA76F4A6F4A4B4A4B4A4A4A4B4A4A4AA8AFAFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFAFFFAFAFAFFFAFAFAFFFAFAFAF
%FFAFAFAFFFAFAFAFFFAFAFAECAA1A7A1A8A1A7A1A8A1A7A1A8A1A7A1A7A1
%A7A1A8A1A7A1A1769B76A1769B76A1769B76A1769B76A1767D527D767D52
%7D7DA8A1A7A1A7A1A8A1A7A1A8A1A7A1A7A1A775754A754A754A754A754A
%4B4A75A8AFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFA9AFAFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF847D527D4C764B764B77
%52704B764B5252764B764B7652764B764B5252764B764B7652764B764B52
%52764B764B7652764B764B5252764B764B7652764B764B52527D527D4A6F
%4A4B4A6F4A4B4A4B4A4A4AA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF
%A9FD1BAFFFA87D7676FD046F52766F6F6F705276FD046F4C7DFD046F4C7D
%FD046F4C7DFD046F4C7DFD046F4B7DFD046F4B7DFD046F4B7D766F6F6F4B
%77767D76754A754A6F4A754A4B4A6F4A4B84FFFD13AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9CFA17D4B6F4B704B765270
%4B6F4B76526F4B704B5252704B6F4B7652704B764B5252764B704B765276
%4B764B7652764B704B7052764B704B4C52764B6F4B70527D527D4A4A4A6F
%4A4B4A4BFD054AA8AFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFFAF
%AFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFFFCAFFA87D76
%7D7D7D767D7D7D767D7D7D767D7D7D767D7D7D767D7C7D767D7C7D767D7C
%7D767D7C7D767D7C7D767D7C7D767D767D767D7D7D767D7D7D767D7D7D76
%7D76754A754A754A754A6F4A754A4BA8FFAFAFAFFFAFAFAFFFAFAFAFFFAF
%AFAFFFAFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9FD04AF
%CAA0C9A0C9A0A1A0C9A0A1A0A7A0A1A0A7A0A1A0A7A0A1A0A7A0A1A0A151
%76517651765176517651765176517651765176517651767CA1A0A7A0A1A0
%A7A0A1A0A7A0A1A0754A6F4A754A4B4A4B4A4B4A4B4AA8FD04AFA9AFAFAF
%A9AFAFAFA9AFAFAFA9FD1CAFA8A0275228524C52A0524C524C524CA17552
%4C524C5252A04B524C524C52515227524C522776514C2852285227764B52
%2752284C767627522852287776524C5228524CA16E7575A176A176A076A1
%76A1514BA8FD14AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFAFCA75272728272827A02728272827287C762128272827527C272728
%272827764B28274C27284B512728274C274C4B4B2828274C277C4B282728
%2728527C27282728274CA0754A769A9B769B9A9B769B9A7626A8AFAFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFAFFFAFAFAFFFAFAFAFFFAFAFAF
%FFAFAFAFFFAFAFAFFFAFAFA8A0275228522852A0522852285228A1754C28
%52285252A1275228522852765228522852287651522852285228764B5228
%52284C7C7627522852287776522852285228A16E7576A19AA19BA19AA19B
%A1754BA8AFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFA9AFAFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFCF7527284C274C28A0274C
%274C274C7C76274C274C2776A04B274C272827A04B28274C27284B512728
%274C274C4B52284C274C287C514C284C2728527C274C274C2752A0754A76
%9A9B769B9A9B769B9A764AA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF
%A9FD1AAFCA7C275228522852A0522852284C28A176282852284C52A1274C
%28522852A0762852285228524B522852285228762752285228527C762752
%285227777C4B2852284C28A16F6F75A19A9B9AA19A9B9AA1764B84FFFD13
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF8BCF752727
%4C272827A02728274C2728767C2728274C27527C4C2728274C27A04B2827
%2827284B51274C2728274C4B4B274C2728277D5128274C2728527C272827
%4C27287C754A76769B769B769B769B76764AA8AFAFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFF
%FD04AFCA7C275228522877A052285228524CA7764C2852285276A7275228
%522853A076285228522876515228522852527C2752285228537D76275228
%52287D7C4C2852285252A76F7576A19BA19AA19BA19AA1764BA8FFAFAFAF
%FFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFA9AFAFAFA8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8CA7527274C275277A02728274C2877A176274C
%274C4CA1A04C284C275277A74B4C274C2728767C274C2728287DA04B274C
%274C53A15128274C27527DA02728274C2877A0754A76769B9A9B769B9A9B
%9A764AA8A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A9FD06AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA7A0275228524C7DA05228522852
%53C9754C285227537DA02752284C287DA17627522852287D762828522853
%77A14B5228522877A1762752285252A1764C2852275277A16E7576A19AA1
%9A9B9AA19AA1754BA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FD04AFA9AF
%A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8CA752727282752
%77A0274C27282777A176274C272828A1A027274C274C53C94B28274C2752
%767C2728272828777C4B2728274C53A14B28272827537D7C274C27282777
%A0754A769A9B769B769B769B9A7626A8A8A9A8AFA8A9A8AFA8AFA8AFA8A9
%A8AFA9AFA9AFAFAFFFA9AFA8FFA8AFA8FFA8A8A8CFA8A8A8FFA8AFA8FFA8
%AFA8A0274C28524C7DA052284C285253C97528284C27537DA12752284C28
%7DA1522852284C4CA775282852285377A1274C28522877A176274C28524C
%A2764C284C275277C96E7576A19AA19BA19AA19BA1754BA8AFA8FFA8AFA8
%CFA8A8A8AFA8AFA8FFA8AFAFFFAFAFAFA9AFA8A9A8AFA8A9A8A8A1A7A1A8
%A1A8A8AFA8A9A8AFA8CA75524C52275277A04B524C524B7DA07C27524C52
%52A1A0524B524C5277C951524B524C77A1A027522852527DA0524C522852
%53A151524C5227537DA027524C524C7DA0754A769A9B769B9A9B769B9A76
%4AA8A8A9A8AFA8A8A1A8A1A77DA8A8A9A8AFAFAFA9FD04AFA8AFA8AFA8AF
%A8AFA7CAFD05A8AFA8AFA8AFA8AFA8C9A1C9C9C9A1C9C9C9A7FD07C9A7FD
%07C9A7C9C9C9A7C9C9C9A7C9C9C9A1C9C9C9A1C9C9C9A1C9C9C9A1C9C9C9
%A1C9C9C9A7C9C9C9A1C9C9C9A1C96F6F75A19A9B9AA19A9B9AA1764B84FF
%A8AFA8AFA8A8A7CAA8A8A8AFA8AFA8FD04AFA9AFA9A9A8AFA8A9A8AFA8A9
%A8A8A7A9A8AFA8A9A8AFA8A9A8CFCACAA8CACACAA8CACACAA8CACACAA8CA
%CACAA8CACACAA8CACACAA8CACACAA8CACACAA8CACACAA8CACACAA8CACACA
%A8CACACAA8CACACAA8CACACAA8CACACAA8CACACA4A6F4A76769B769B769B
%769B76764AA8A8AFA8A9A8AFA8A8A8AFA8A9A8AFA8A9A9AFA9AFFFAFAFA8
%FFA8AFA8FFA8AFA8FFA8A8A8FFA8AFA8FFA8AFA8FFA1766F766F766F766F
%766F766F766F766F766F766F766F766F766F766F766F766F766F766F766F
%766F766F766F766F766F766F766F766F766F766F766F766F766F9ACA754A
%7576A19BA19AA19BA19AA1764BA8FFA8AFA8FFA8AFA8AFA9AFA8FFA8AFA8
%FFAFAFAFA9AFAFAFA8AFA8A9A8AFA8A9A8A8A8A9A8AFA8A9A8AFA8A9A8A7
%4B764B6F52764B764B6F4B6F52764B764B70526F4B764B764B6F526F4B76
%4B76526F52764B764B76526F52764B764B76526F4B764B764B6F526F4B76
%4B764B6F76CA4A6F4A76769B9A9B769B9A9B9A764AA8A8AFA8A9A8AFA8A8
%A8AFA8A9A8AFA8A9A9FD06AFA8AFA8AFA8AFA8AFA8AFA8A8A8AFA8AFA8AF
%A8AFA8FFA16F76766F76707076766F766F76766F6F766F766F76766F7676
%6F766F76766F70766F766F70767070766F766F7076766F766F7676707676
%6F766F76767076764BA1CA754A7576A19AA19A9B9AA19AA1754BA8AFA8AF
%A8AFA8AFA8A8A8AFA8AFA8AFA8FD04AFA9AFA9AFA8A9A8AFA8A9A8AFA8A8
%A1AFA8A9A8AFA8A9A8AFA8A14B6F4B9A93BC94BC93BC94BC93BC94BC93BC
%93BC93BC94BC999A99A099BC9A9A99C299BC999A999A99C299BC93BC94BC
%93BC94BC93BC94BC93BC94BC93BC94BC9ACA4A6E4A769B9B76A19A9B76A1
%9B7626A8A8A9A8AFA8A9A8A8A8A9A8AFA8A9A8AFA9AFA9AFAFAFFFA9AFA8
%FFA8AFA8AFA8AFA8A8A8AFA8FFA8AFA8FFA8FFA1766F709AC3BCBDBCBDBC
%BDBCC3BCBDBCBDBCBDBCBDBCBDC1C79FC2C6C2C7C29FC2C7C2C1C79FCC9F
%C2C69FBCBDBCBDBCBDBCBDBCC3BCBDBCBDBCBDBCC3BCBDBCC3CA754A7575
%76757C7576757675764B4BA8AFA8FFA8AFA8FFA8A8A8FFA8AEA8AFA9AFAF
%FFAFAFAFA9AFA8A9A8AE83A782AD83A8A7AFA8A9A8AFA8A9A8AFA8A14B6F
%4BBCBCBC949A6F9A6F9A949A949A9AFD06BCC799C799C799C79EC19FA59A
%C79E9F9E9F9FC79E9AFD04BC709A6F9A6F9A949A6F9A6F9A94FD04BCCA4A
%6E4A6FFD0B4AA8A8A9A8AFA8A9A8A8A8AE83AD83A783AEA9AFA9FD04AFA8
%AFA8AD83AD83AD83AD83A8A8AFA8AFA8AFA8AFA8FFA16F6F769ABC9A9A6F
%9A6F9A709A6F769ABCBCBDFD04BCA4C2BCC2A5C29EC79FC1A4C2C1C79EC7
%9FC79FC79ABCBCBDBC9A709A709A709A6F9A709A709ABCBDBCC3CA754A75
%4A754A754A754A754A754A4B84FFA8AFA8AFA8AFA8A883AD83AD83AD8284
%AFAFAFA9AFA9A984AD83A782AD83A782A77DA9A8AFA8A9A8AFA8A9A8A74B
%6F4BBCBC9A6F766F706F9A6F706F9A9ABC94BCBCBC9AC799C199C79FC19E
%C19F9F94C79E9F9E9F9EC79E9ABCBC94BC949A6F9A6F9A6F9A6F9A6F9A9A
%BC94BCBCCA4A6F4A76527652765276527652764AA8A8AFA8A9A8AFA8A882
%AD83A782AD83A75884AFAFFFAFAFA8AE83AD83AD83AD83ADA78384FFA8AF
%A8FFA8AFA8FFA16F6F76BCBCBCBDFD07BCBDBCBCBCBDBCBCBCBDC1C79EC2
%C7C29FC29FC2A4C2C7C79EC79FC79FC799BDBCBDBCBCBCBDFD0BBCBDBCC3
%CA754A7576775253527752535277764BA8FFA8AFA8FFA8AFA7AD83AD83AD
%83AD83AD59AFAFA9AFAFAE82AD83A783AD83A783A77D83A8AFA8A9A8AFA8
%A9A8A74B7652BCCAC3BCCABCC3C9BCC3C3B6CABCC3C9BCC3CAB6BC999A9A
%C29ABC9AC2BCC299C299BC99C299BC99BCBCCABCC3CABCC3CAB6CABCBCCA
%BCC3CAB6CAC3BCCACA4A6F4A764C534C534C534C5352764AA8A8AFA8A9A8
%AFA8A783AD83A783AD83A7835F83FD04AFA8AD83AD83AD83AD83ADA7A758
%AEA8AFA8AFA8AFA8FFA16F76769ACABDBDC3BDC3C3BCC3C3BCC3C3BCCABC
%C3C3BCBCBDBCBCBCBDBCBCBCBDBCBCBCBDBCBDBCBDBCBDBCBDC3C3BCCABC
%C3C3BCC3C3BCCABCC3C3BCC3C3BCCACA754A7576774C7752535277527751
%4BA8AFA8AFA8AFA8AEA7A783AD83AD83AD83AD5883AFA9AFA9AE82A782AD
%83A782AD83A77D5F83AFA8AFA8A9A8AFA8CAA1CAA2CAC4FD05CAC4CAA2FD
%05CAC4CAC4FD1BCAA2FD07CAA1FD08CACF4A6E4A7652524C534C524C5352
%764AA8A8A9A8AFA8A883A783A782AD83A782AD838358AFAFAFFFA7AD83AD
%83AD83AD83ADA7A85884A9FFA6C8A5C8A5C8C8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8C9A0A17CA1A0754A757677
%5277527752775277514BA8AFA8FFA8AFA8ADA7A783AD83AD83AD83AD5F83
%84AFAFA9AD83A783AD83A783AD83A77D5F83AFA8C79EC69EC69EC69EC69E
%C69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69E
%C69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC69EC6746F4A
%6E4A6F4A6F4A7652534C534C534C5352764AA8A8A9A8AFA8A883A783A783
%AD83A783AD838358AEAFAFAF83AD83AD83AD83AD83ADA7A75884A9AFA5C7
%A7CFA7CF7D7C767D7C7C767D7C7C767D7C7C767D7C7C767D7C7C767D7C7C
%767D7C7D767D7C7D767D7C7D767D7C7D767D7C7D767D7C7D767D7C7D767D
%7C7D76A0C69F527D767D76764A7575775253527752534C77524B84FFA8AF
%A8AFA8ADA7A783AD83AD83AD83AD595F84A9AFA9A782AD83A782AD83A782
%A77D5883AFA8C79EA8A9A9A8CA7652527C5276527C5276527C5276527C52
%76527C5276527C5276527C5276527C5276527C5276527C5276527C527652
%7C5276527C5276527C52527BC67552527C527D516E4A764C534C524C534C
%524C764AA8A8AFA8A9A8AF83A783AD83A782AD83A7825F58A8FFAFAFA7AD
%83AD83AD83AD83AD838358AFA9AFC6C7A8AFA8FFCACA52765276527C5276
%527C5276527C527C52524C5227524C524C524C52275228524C524C522752
%4C5227524C522752527652765276527C527652A0C69F5276527D52764A75
%76775277527752775277764BA8FFA8AFA8FFA8AEA7AE83AD83AD83AD8383
%5883AFA9AFAFAE82AD83A783AD83AD82837D5FA8AFA8C79EA8A8A9A8CAA7
%A1527D527D527D525252595252527D525200270005000505280027000500
%054B2800270005002827050027000500285276527D5276527D52537BC67B
%535252527D516F4A7652534C534C534C5352764AA8A8AFA8A9A8AF83A783
%AD83A783AD8383585F59FD04AFA8AD83AD83AD83AD83837D8383AFA8AFC7
%C783AFA8AFA8CAA8CA4B767575767D52592E592E59527D52280005050500
%282705000505050052270500050505274C05050005050527527D7D767670
%764C764CA0C69F767D527D76764A7576774C77525352775277514BA8AFA8
%AFA8AFA8AFA7A783AD83AD83AD595F58AFAFA9AFA9AF838382AD83A78283
%58837DA8A8A9A8C79EA8A8AFA8CAA7A8C99F5075517C52522E522E522E52
%5252000500050005004C0005000500052728000500050027270500050005
%00284C7D52764B704B4C4B4C75C675765352527D516E4A7652524C534C52
%4C5352764AA8A8A9A8AFA8A9A8A883AD82AD8383585F5883A9AFAFAFFFA9
%AFFD04835F83595F7DCAA9AFA8FFC7C7A7FFA8AFA8CFA8CE58352D2E517D
%52522E532E52527D52280006050500282827000605050052270500060505
%275205050006052727777D7D75766F764B764CA0C69F767D527D7C764A75
%76775277527752775277514BA8AFA8FFA8AFA8FFA8835E83838358835883
%A9FFAFAFAFA9AFA8A97D5F5859585F59A8A8AFA8A9A8C79EA8A8AFA8CAA7
%A8A635132F065252764C524B764C765252050500050005004C0005000500
%0527280005000500282705000500050028527D76764B764B4C4B4C75C675
%765952527D516E4A7652534C534C534C5352764AA8A8A9A8AFA8A9A8A8A8
%83585F5859588384AFA9FD04AFA8AFA8AF84847D8383AFA8A8A8AFA9AFA4
%C7A8AFA8AFCACAA8CE34363535517D52766F764B76767C4C280505000505
%282728050500050052270505050005274C0005050500272852537D76764B
%764B4C4BA0C69F527D527C52764A7575775253527752534C77524B84FFA8
%AFA8AFA8AFA8AFA9A87D837DA8A8FFAFAFAFA9AFAFAFA8AFA8AFA8A1A1AF
%A8A8A8A9A8AFA8C79EA8A8A9A8CAA7A8A635353513585276527D527D527D
%525200050005000500280005000500052727000500050028270500050005
%0028527D52764B704B4C4B4C75C775765252527C516E4A764C534C524C53
%4C524C764AA8A8AFA8A9A8AFA8A8A8AFA9A87CA8A9A9A9AFAFAFCFA7AEA7
%CFA7ADA7CEA6A7A7CFA7A8A7CFA7CEC6C7A7CFA7CFCACAA8CE3436353B82
%7D527D527D527D527C5228050505280528272805050528055227FD040506
%274C05280505002828527D7D75764B764B4C4BA0C69F527D527D52764A75
%767D537752775377527D764BA6CFA7ADA7CFA7ADA7CFA7ADA7C9A7ADA7CF
%A7AEA7FD09A6ACA6A6A6A7A7FD04A6C79EFD04A6CAA7A8A7A6A6A782CEA8
%2E000500050028525221282727272827282728FD04274B4C212827272728
%272727282727274C517D537D767D527D52777BC67B7D5976527C516F4A75
%517651765176517651754AFD08A6A7A6ACA6A6A6ACFD06A6ADA6CEA6ADA6
%CEA6ADA6CEA6ACA6A7A6ADA6CEC6C7A0CEA6ADA7CAA7FFCAFFCFFFCACF7D
%28272E2728287C522827282728274C272827282728275227282728272827
%4C2728272827282752527D527D597D527D53A0C69F537D527D76764A754A
%6F4A754A6F4A6F4A4B4A4BA6CEA6CEA6ADA6CEA7A7A6CEA6ADA6CEA6ADA6
%CEFD0EA6A7A0FD04A6C79EFD04A6CAA7A77CA17CA17CA17CA77C52515251
%525152272721FD042728272721FD04274C272721272728FD042721272728
%4B524B524B524B524B5275C675524B52527D516E4A6F4A4A4A4B4A4A4A4B
%4A4A4AFD08A6A7FD0CA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7C9A6CEA6CEC6
%C7A0CEA6CECACFA1A7A1A7A1A7A1A7A1C97C765276517C5228274C272827
%4C2728274C272827522828274C272827522728274C272827765276527652
%76527652A0C69F5276527D7C764A754A754A754A6F4A754A4B4A6FA6CEA6
%CEA6CEA6CEA7A7A6CEA6CEA6CEA6CEA6CEA67D7D77A17D7D77A17D7D77A1
%7DA17DA17D7D7CC79E7C527D76A17D7D767D767D767D767D527627522752
%2752272727282727274C2727272827272752272727282727272827272728
%27282752275227522752275275C675522752275251514B514B514B514B51
%4B514B512776527D7DA17D7D76A77D7D77A17D7D77A17D7D77A1A1777D77
%A1777D77A1777D777D7DA177A1777DA4C77DA17DA77DA17DA77DA17DA77D
%A17DFD2F52287CC69F275252522752525227525252275252524B52525227
%52777D77A1777D7DA2777D77A1777D77A1777D77777D777D777D777D777D
%777D777D777D777D77C79EA8A8A8A7A8A7A8A7A8A7A8A7A8A7A876765276
%527D5276527D5276527D5276527D5276527D5276527D5276527D5276527D
%5276527D5276527D5276527D525375C77552527D52522752275227522752
%2752275227522752277D777D777D777D777D777D777D777D777D777DA27D
%A177A27DA177A27DA177A27DA177A27DA17DA17DA27DA27DA27DA27DA27D
%A27DA27DA27DA177A27DA177A27DA177A27DA177A27DA177A27DA177A27D
%A177A27DA177A27DA177A27DA177A27DA177A27DA177A17DA177A27D7D77
%A17D7D77A17D7D77A17D7D77A17D7D77A17DA177A27DA177A27DA177A27D
%A177A27DA177A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA
%A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA
%A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA
%A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA
%A8CAA8CAA8CAA8CAA8CAA8CAA8CAA27DA27DA27DA27DA27DA27DA27DA27D
%A27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27D
%A27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27D
%A27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27D
%A27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27D777D777D777D777D
%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D
%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D
%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D
%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D
%A177A2A1A8A1A87DA177A2A1A8A1A87DA177A2A2A8A1A87DA177A2A2A8A1
%A277A177A8A2A8A1A27DA177A8A1A8A1A27D7D7DA8A1A8A1A27D7D7DA8A1
%A87DA27D7D7DA8A1A87DA17DA1A1A8A1A87DA27DA1A1A8A1A877A27DA2A1
%A8A2A277A277A2A1A8A2A277A27DA2A1A8A1A277A27DA8A1A8A1A177A27D
%A8A1A8A1A177A17D777D777D777D777D777D777D777D777D777D777D777D
%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D
%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D
%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D
%777D777D777D777D777D777D777D777DA27DA177A27DA177A27DA177A27D
%A177A27DA177A27DA177A27DA177A27DA17DA27DA177A27DA177A27DA177
%A27DA177A27DA177A27DA177A27DA177A27DA177A27DA177A27DA177A27D
%A177A27DA177A27DA177A27DA177A27DA177A27DA17DA27DA177A27DA177
%A27DA177A27DA177A27DA177A27DA177A27DA177A27DA177A8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-02-27T18:29:02+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-02-27T18:29:02+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-02-27T18:29:02+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>144</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAkAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9H5mundirsVdirsVdirsVdirsVdirsVdiqQ+c9S1HT9HE+nyLFcmVFDuoccT&#xA;UsKH5ZRqJmMbDuOxNHDUZuCYscJP3MD/AMY+eaf8dC3r4/Vl60Pv45hfmpvV/wCh3Tfzftl+tePN&#xA;vn1o2db6DglAzfVhQFhQd/EHIHXEERJ3KP8AQ/pbqvtl+tafOXniu1/b/wDSOvj8/DJfmpp/0O6b&#xA;+b9sv1ovSfOPmt9UsoLu7iliuLmKJgkKp8LvRvHscuw55SO7gdodi6fFjMojfhkeZ6D3vTsz3i3Y&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWNefv+OGv/GdP&#xA;1NmLrPo+L0Psz/jJ/qn9DBhZCNucrBo0VWmQHi45U2oR1+LOeOqMhURUiSInmNr3+x7rxL5fBGFx&#xA;FKlpbwq1pPQmpPxerTgWNPhIpmAI8cTlnIjJC+g24edDrbTVjiJ9Q/QhprO2kmP1dhHAjCN3kbev&#xA;iBSvyzLxanJGH7wcUyLAA/Hx6NschA33KjYxtHr+mIwIZb2AEHb/AHYM2+jmJURyNOu7XN4Sf6Ev&#xA;uew5uHzZ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVBXpPqj/V/ic1GvPrHu&#xA;/W7rs4Dwz7/1Iep8cwuIufwh1T448RXhDqnxx4ivCHVPjjxFeEOqfHHiK8ISDzrcLBoyyvJ6YSZP&#xA;jJpQmoG/zwgcWx3DsuywPF+DCJPMmmvGQJoKyIBNIWFWPXl7fZrlMNHRuzUT6R3fj7nfARvmu/xZ&#xA;GChW+jRUUBEDLxoqg9O+2R/kzCQbjZPXqjw8bUfmPTQ7CWSB43kMkicqGtabGvYnJT0ZocMiJCNB&#xA;kQOh3pL9V1KO8hMkdwJXRl3Vq8RWgpTp0NMzdPijAERFOB2jw+HQ7ilf1m4/36//AARy23k6Tfyp&#xA;f3sfmGxCTyKJJUjkHI0ZWO4I7jIz5Mojd7FU+OYnEXI4Q6p8ceIrwh1T448RXhDqnxx4ivCHzv8A&#xA;mldXKeetVVJnVQ0VFViBvAnhmPkkeJzsMRwDZh7317/y0Sf8G39cAkWZgO5DvfXv/LRL/wAG39cm&#xA;JFiYjuZV+Ul3dv8AmPoivNIymWSqliQf3L9icytGT4gcLtCI8GX46vqvOgeUdirsVdirsVdirsVd&#xA;irsVdirsVS3X9Kk1LT3hguJLS5HxQzxOyEMOgbid1PfMbUQjVkObopS4+EHZ4b5o1/zdormBry5S&#xA;5SThIjSymmxNRRu/Y5hyjGtgHfaXGJyIkSklp5883y3tvC99OI5ZArkSSg0IP+VjCIJ3AcjUaeMY&#xA;Egm/e3d+fPN8V1NEl9OUR2VSZJTsCQP2siQL5Bnj0sDEEk7jvVU87+bDpTXRv7j1hP6YHqS048Qe&#xA;nLxycoRABoNEcMTl4bNV3qEHn7zg9xBG19OFkljRv3kvRnCn9rwORhEE8g25tNCMSQT83ax5w8yt&#xA;cS2r3Ms0CP8ACsjysNuh+1gIAPIM9NhHCJCRBPmh7fW9Sk026uG/vYZVSMfHShC125e+WEDhulM5&#xA;+KI8cq96Hj8xau0sakfC7orfb6MwB/a8MjCieTdl4oxJE5f6ZE6prep219LDDUxrx4k8yd1BO/Lx&#xA;wS2PJhp5SnAEzlf9Zu31a/n067ml3eErwX46bnuK5MfTbTmJOQQMpGJ80vOuajQ/u1+5/wDmrIxN&#xA;lM9FjAJs/NMNR1fUNO1EfUxxMYV0kHPkG61BBGM/c1aXTQnGyd0dp/nbzXPBfPLf3Aa3jR4qSSip&#xA;bnWvxf5IxEI8N0EZsMYziATRQUn5hec1jZhez1AJH7ybw/18jEAnkHJOkhXM/NH6t51812s8SQ31&#xA;wVeJXassp3JI7N7YZxAPIOPpcEZxJkTz71+iecvNN5cSR3F/cBVTkKSyjetO7ZKEIkcgw1eIY64S&#xA;Up86s0ssFzKTJcTF/VmY8nfiEC8mO5oPHMDWxAIoM9FIkG2KPmIHMKg+SDEsr/KD/wAmVof/ABlk&#xA;/wCTL5l6P+9Dg9of3Mvx1fWGdC8m7FXYq7FXYq7FXYq7FXYq7FXYqwX8zvPl55Qt7a6hh+spM6RG&#xA;HkEoWWRuXIpJ/vulM1mqlOWUYwaBHd5u67PxwGM5CLkJV9jyjV/zittXlSa+0ISSxjirrc8Dx60P&#xA;GIVyQ0eQfx/7H9rlHNA/w/avvvNuiWmj6XqJ0Zn/AEks7ekLphw9CX0/tcPi5degyiMMpyShxfT5&#xA;M5cAiJcPPzS7/lY2h/8AVhb/AKS2/wCqeZH5TL/P/wBi1+Jj/m/amvmLzTomjXVtAdHaf6zaxXXL&#xA;6yycfVr8P2WrTj1zG08cuS/VXCa5NuTgjW3Md6WwfmDocs8cX6CYeoyrX62xpyNP5MyJaXKBfH/s&#xA;WsZMf837UZr/AJx0PSdZu9NOitMbV+Hq/WmXl8INePBqdfHKdPjy5IcXFXwZ5DCMq4ftSiXznb39&#xA;3FFZWLWQIIcNL6wJAJruqkZbPDkhEkyv4NXFEnYUgZfOFxHIyenXiSK1Hb6MshgnIA39jEyj3L4P&#xA;NlxMsxCU9GJpdyN+PbpleaE4C7ZRo9FD/Gl1/vkf8EP+actjp5EXxfYw4h3Ksfm26e3ll9MD0yi8&#xA;ajfmafy9srywlEgXz8mUSCCaUv8AGl1/vkf8EP8AmnLvy0v532MeMdyc2vmZLTR4dXvLP65FczyW&#xA;q2wlMRRo1V+fMK1a8qUpmLOE/E4BLpzr3tseHh4iGv8AlY2jf9S+f+kxv+qeXflMn8//AGP7UeJD&#xA;+b9qYar5x0awh06X9CGT9IWwuafWmXhV2Tj9g1+z1zHx48kpmPFy8vc2SMAAeHn5pf8A8rG0b/qX&#xA;z/0mN/1TzI/KZP5/+x/a1+JD+b9qn5uh+s+aRpkVIbcGEQg/Fx9aKN2qep3OaOc5ZJUS7SEIwjYU&#xA;W8jk/wDH6P8AkWf+asyPycu9u4J932qbeQif+P4f8ij/AM1ZL8oe9Hhz7vtTL8v9DOkfmj5eiMwm&#xA;9VpHDBeNP3Ugp1Phlmnhw5Yh13aF+DIF9O5vXlHYq7FXYq7FXYq7FXYq7FXYq7FXjn/ORf8Axx7D&#xA;/mJj/wCTVxmszf41H+r+l3ei/wAXP9f9AeDZtFZJr3/KIeVv+Md//wBRQzXYf8Zn8PuDk5P7uPxY&#xA;3mxcZlf5jf8AHU0z/tlWv/G+azs7nP8ArOVqf4fcxuw/3utv+Mqf8SGbCf0lxhzTjz9/ymWrf8Zh&#xA;/wAQXMTs7+6DdqfrKzyRbQ3XmnT7eZeUUrsjj2KMMs1prFIscAuYSm9XjeTr/K7D7jluD6AwlzVd&#xA;P+xef8wsv8Mo1v0j3s8XNCHrmTj+ke5rKLt/94Lr/Xh/4kcxdT9cPf8AqbIcihMzWpP73/lBNN/7&#xA;aNx/yajzXz/xkf1R+lyB/d/H9SQZsHHT/wA1f7xeXf8Atmj/AJPSZr9P/fT/AB3ORk+iP470gzYO&#xA;OzzXv+U/j/1rT/kxHnJQ+v4u+P0J9m6c52KqPl//AMmx5Y/1ZP8AiEuUw/vw6XtP+7n8P0PojNw8&#xA;k7FXYq7FXYqpzsVhYg0I6HBLkzgLKB+sTfznKuIuRwB31ib+c48RXgDvrE385x4ivAHfWJv5zjxF&#xA;eAO+sTfznHiK8AeUf85AOz6HYljU/W4/+TU+YEz/AITH+r+l2mmAGA/1v0PD7cAzxgioLKCPpzbN&#xA;bMPPUUUOieXY4lCIsd5RVFAKzqc1+P8Axmfw+4OVl/u4/FjOjRRy6nBHIodGJ5KdwfhObAc3GHNk&#xA;v5rIqeY7VEAVF0+AKo6ABpABmr7N/j/rOVquY9yVeSreCfXYkmjWRBxIVhUV9RBmxn9J9xcfGN13&#xA;n7/lMtW/4zD/AIguYnZ390GzU/WU4/Kq3gk1+OSSNWeNiUYipH7t+mT139xL8dU6YesMQ1D/AHvu&#xA;P+MjfrOW4PoHuaZc078pWSSQ6zLNGHjGk3rREitJI1Ug/MVzF7RJEI/1g36cbn3Fjh65m4/pHucc&#xA;syFhZDyHeXIhQXAay/e0HL4pDXf3zD1h/eY/j+hyYAeHL4MNzPcVmfm2CGHyfpKxIEU3kzEKKCpj&#xA;XfMDJ/jI/qj9Lkn+7+P6mJ2CK99bI4DK0qBlPQgsKjM8OOGS/mFFHFNokcahEXTl4qNgP3r5r8H9&#xA;/P8AHc5Gb6Y/jvSPQYYptTjjlQOhDVVhUbKc2I5tEebLvMYA/MQAbAPa0H/PCPOQh9fxd7L6E8zd&#xA;ua7FUNo7FfzS8tEGhCyUP+xlzHH98HUdoC4T+H6HvP1ib+c5tOIvNcAd9Ym/nOPEV4A76xN/OceI&#xA;rwB31ib+c48RXgCZZc4ilc/3D/598jLkzx/Ul2VOUsm9T0z6X2+1cjK62Zwq9+SXtFe+oIzI3JgS&#xA;KMRsPlmNwzurcvjx1dfYi7FbtIilyeTA/A1akr75kQut3FyGN+lEZNrYt+YHkK5822VvarN9Xjik&#xA;Wb1AFYkqsi8aFl/35mtzmQzCURdD9Lt9LAeFRNWb+xhMf/OPNykiv+kmPEg09NOxr/vzLvz2T+Z/&#xA;sv2Mvy8f532Jzrn5N3OrWlhbvdNELBZVVlCHl6zhzWrbU45jjPkGSU+H6vNuljiYgXy8kusPyCe0&#xA;u47j67I/pknjxjFagjryOX/nsv8ANHzaxgh/O+xMPNP5NXGv6jHeyXLQGOFIAihGFELGtSw/mzF0&#xA;+XJiv03Z72zLCE63UNC/I6XSr9bsXbzFQKIQi7hg3Wp/lzIlrcpBHCN/NhHDAG7+xbrn5GT6tq91&#xA;qT3jxNdPzMYVCBsB1Le2VafUZMceHhB+KcmKEjd/YjvK35PzeX7v6zHcPcPWoDcFH2SvYn+bDn1O&#xA;XJAx4Rv5pxY4RN2k0/8Azj7JNNJKb+QGRixHFNqmv82ThrMsQBwj5sDggf4vsTfSPydm03S76xS4&#xA;aRr23mtzKwT4BOoUsFB6injlWoz5coAMQKN82zHCEb35pF/0Ltc/9XJv+Raf9VMyI63IBXB/sv2N&#xA;X5eP877E7P5O3n+HptHF0eMpgJm4rUegxb7PLvXxynNqMk5Rlw/T5tkccREi+fkkn/Qu1z/1cm/5&#xA;Fp/1Uy/89k/mf7L9jV+Xj/O+xOtY/Ju81LSrTTzdmJbWVpRJxVi3NQtKcxTplEtRkOTj4ene2nHH&#xA;hq/sSm2/5x8uYbiKb9Is3pOr8fTQV4mtPt5kfn8n8z/Zfsa/y8f532Jl5i/JW81mWzdrwwfVLcW4&#xA;AVW5AMW5fbFPtZj48+SM5S4fq82yeOMgBfLyQWm/kHdWV2twL9pOII48EHUU68zmQNfk/mf7L9jW&#xA;MER/F9jCNXv7K/8APa3dlJ61tJLbiOTiy14Roh2YA9VzR4jch73aTFRZHm8cx2KoXSP/ACaPlv8A&#xA;1ZP+Iy5jj++DqO0Ppn8P0Pds2bziCukvSzuG4xrUgA02GY+QT59HLxHHQHVTgi1BZ45A5aFv7xWa&#xA;ux7iuMBMFGSWMjbmmOZDiptl7hKVz/cP/n3yMuTPH9SXZU5TsVUH/wB7Y/8AUb9eVn6m0fQfer5Y&#xA;1OxV47+evpf4j0b1qmL6p+84/a4+qa0r3zAn9Reh7PutufCwS10c3UdzNBbTSQtUWTAoNwafHU5W&#xA;ZxDuIabPIRIA8/2LpPLl96EHp2kvrjl9YJZOJ3+Hjv4YPEi2R0efiNjbouTy7dc7jlaT8CrfVfij&#xA;qG/Z57/fTD4kUHR6ihsL6/sUv8Oal6cf+iS+pyPq/ElOO1OO/Xrg8SLP8pms7bdEQfLsv1qcizn+&#xA;rFD9XHKPkHoKct+la4fEi1/k9TwjYcV7+5Sfy5frYq/1SUThyJJCyenxpsK165E5obC91OnzCe9c&#xA;P2okeVrr64W/R919TdCYR8HMsAN+tCK4PzGKyOIbNRwZ+GvTx9d1AeVtVazAFhObwvUEceBjp869&#xA;cTngOradPlE+nD7+qI/wpdi6DnTrv6iFCufg5c6U61p1yJ1WESriHzavBz8Nenj96ivlLWPq7RHT&#xA;rj6/yDKoC8fT6VpWvXIjWYeG+KPzZnFk4r9PB7xzXHy5MLyINZXAt1XjcKWTn6gBBpv/ADZcMsDu&#xA;DssdLqDAkAE9O6lFfLl79WlBtJfrPIeieScePflv1x8SLYdHn4ht6eqoPLs/r21bOf0Qo+tDlHUv&#xA;3479MPiRY/k9TwnYX0WDy7d+lc1tJvUJH1U8koFrvz38MHiRZfk9Rcdtuv7F3+Hbjna/6HPxAH1v&#xA;4o6k134b4fEix/J6mpbDy/azD8o9GmtvPMU01tKiBZvqzMUICmNx8dD1pTpiJxLj6zT5o4wZDbr+&#xA;x5/ov/HZsv8AjMn681eL6g15PpLPM3jluxVC6R/5NHy3/qyf8RlzHH98HUdofTP4foe7Zs3nFlx/&#xA;cSf6rfqyM/pLPH9Q97oP7mP/AFR+rCOSJc1+Fim2XuEpXP8AcP8A598jLkzx/Uktzd8DwTdu58M1&#xA;Wq1nAeGPNyJSQ31qeteZzA/N5O9hxF1teNLfhJQFYKQhHRgRX79jmz02fxNzzb4SuB96ZZmMXYq8&#xA;a/Pv/jvaT/zBH/k6cwMn1F6Ps3/epV5WNNCjPgXP/DHMSf1PYaQ1hv3oMa/qJLN+7oI1egU0HMJ7&#xA;9ueWeGGj83Nc+u6gIE2TmyCQuFPQsqjvTryxGMInqp8KY6Nf3F36xmKhlI/dqCChJIKmvyyvJEDk&#xA;5emyynd/jmmWVOWnNrLLHFpqxo0iutwXhU8Q9GA+KuxoD3zmdVihky5+M8PDwVKr4eXL3uk1ERLN&#xA;KzWw/Qq6YyJb6Q3Lki2TnkBSoCx70OYutFy1A/pQ+9wZcz1V3EUc5MTmOIWUjJIBUqvIEED2zG45&#xA;5IEyFy8WAI79pBmSTCV94+6SlC0lxp0MZbk01yQsrf8AFTNKjU36+kNst1/7vPdcPDjGw6XtX2st&#xA;SKnVcPk2ks07SX0QpcPp8TRqATR5S7Db2IymMIiAxSPp8bf3Db9LVE7cPeR+PtSXUYxHql6g6CXk&#xA;P+eiLIfxY51PZE+LTQPlXyJDuuzpXiruP7Uq1e4mgt42if0yXKk0BqPTdqb+6jNrjALbqZyiBRSu&#xA;DXL5gis0dQ9CzKfiACfCKV3PM5YcYcSGqnQU49dv3l9QunACUqgWisUQMO9e+Hwwj81O0y0vULu5&#xA;nMUnpvGicjKgYVYsQKV7beGVziAHJ0+aUpUeTNfIf/KS2/8Aqyf8QODFzaO2P8XPvH3vDYFuGuY1&#xA;tiRcFgIip4nl2odqZgxu9nRSqt+SYMnm3tdTf9JQ/wCa8yvBzd0nG48XkpNF5x7XU/8A0lj/AKqZ&#xA;IYcvcWPHi8k2/L+PV0/MjQv0m8kkjNIY2kk9X4fTkGxq3fLcEZDILadSYnFKn0jm4dAsuP7iT/Vb&#xA;9WRn9JZ4/qHvQP1yQxoqfCAoFe52zU5tbK6jsGqcty0Lu4WpDVPYN0yqGsyA87YcRTrSdVg1K2Ms&#xA;Y4SRsY54T1Rx1Hy8DnQYsomLDjgq98/C0kbwFcGefDAnuZw5sZJJJJ6nrnLk3u2OwKlWu3Elslvc&#xA;xmkkUqsPort9OZulNbspmsd/0mVRSLLEki/ZdQy/IiubkFsBtdhV5t+bXk/zBrmuaVcafp8l5aQ2&#xA;3C4aNkUg+oSV+Jl3pmBP6i7/AEUuGPOjwrfK3kjUrXSLqG90m5WYh/qCiSL4GLkgyfFvt/n3zHnG&#xA;yXodPrhGEBxxFH1bH7EybyhdfV7ADS7j10Y/pEl4uLpy2EfxbHjXrkOA9zkfyjG5+uNfw7Hb37d6&#xA;ofKJNxf/AO4i5+qvGw01OcVUk/YMnxdPpP048Hkw/lAcMB4kOIH1bHceWyi3lC9+o2qpplwL0SMb&#xA;1+cXB0r8PD4jQ08ceA9zYO0occjxx4K9Oxu/NEnyof0lduNJu/0e0TCyj9SL1FlIHEuedONa+P04&#xA;8G/Jr/lH93EeJDjv1bGq8tkCnl3zfHCscdmVKV9KT90XTl9riWJpXNfm7Kx5J8Ugd+e+xrlfuZ5d&#xA;RpJy4jLf4/qXr5f82JHBGun0W3jaFN1+wwANav8A5OMuyoSMiQfWQTv3NZyaOyePn+O5dHofm9GR&#xA;hY1KR+iORQ1TY7/F7ZGfZGKV2D6pcXPrv+tlLNpDfq5m+v6vNv8AQnm+iUsKem7SLQqKFlZP5vBj&#xA;kJ9i45Ek8W4rn52wM9Gf4z+Pgpjy95sW3MC6eVUwxwAqyghIq8afH1+LEdi4+Li3PqMvif7ECWju&#xA;+P8AHyVbbyxq82sLd6rpkr2rCk8cDIGPFSFpV/Gld8zNJohghwRvhZnV4ceMjFMcR7/7Gk8pX36P&#xA;ulbTLj680im0k9SPgsdfiD/EKmntmTwGuTYe0occTxx4K9Wxu/LZWHlH/TbBjpN0bSONfr6c4ubS&#xA;gHkY/j6dPD6MeDyaz2gOCXrhxX6djsPPZRXyfci2vg2l3H1hnB05ucXFF5Et6nxCp4+Ax4D3Mz2j&#xA;Dih648P8Wx+zbvVB5SkEmncdJuRFGoGpL6kVXavxel8W34fxx4PJiO0ABP8AeR/obHb37Jr5U8vy&#xA;WWt3FxPYTwx8m+oOzIQiHlUSUYknjQbZOEaLh9o6wZMMYxlEn+LnufLZ87aR/wAda1/4yr+vMDD9&#xA;Q97hZvpKMzsHSuxVOfJ3/kwfK/ym/VLmoz/4wPx0bZf3En0Lma6dDX7lYeI/a/UMxNXkoAd5ZQPq&#xA;HvS9PsL8hmklzaJcyuwIQei3hs/N7QA0ivkAZe3MLVT/AMLT6c3HZ86od7jy2ky/VP8AeCX5D9Yz&#xA;M1v91JnHmxzObbXYqkvmgj6og78wfwOZmm5Fcv8AdH3p9HyXy9b7kMIIanv0XB29Ix0MyDR9P+6i&#xA;7DswXkiD+NkNYwXF2kjLKVEblNyTWihq/wDDZzGh7E1GpxDJHLQl33+t22fWY8cuExSvzFrupaDJ&#xA;GsiSy28gpHOkhC1HVSOxzNHYGoGx1ErH9b/ikDWQIvg/HySb/lY0v++5v+Rp/ph/kHUf8pE/t/4p&#xA;fzkf5g/Hwd/ysaX/AH3N/wAjT/TH+QdR/wApE/t/4pfzkf5g/Hwd/wArGl/33N/yNP8ATH+QdR/y&#xA;kT+3/il/OR/mD8fB3/Kxpf8Afc3/ACNP9Mf5B1H/ACkT+3/il/OR/mD8fB3/ACsaX/fc3/I0/wBM&#xA;f5B1H/KRP7f+KX85H+YPx8Hf8rGl/wB9zf8AI0/0x/kHUf8AKRP7f+KX85H+YPx8G/8AlY8v++5/&#xA;+Rpx/kHUf8pE/t/4pfzkf5g/Hwd/yseX/fc//I04/wAg6j/lIn9v/FL+cj/MH4+Dv+Vjy/77n/5G&#xA;nH+QdR/ykT+3/il/OR/mD8fB3/Kx5f8Afc//ACNOP8g6j/lIn9v/ABS/nI/zB+Pg7/lY8v8Avuf/&#xA;AJGnH+QdR/ykT+3/AIpfzkf5g/Hwd/yseX/fc/8AyNOP8g6j/lIn9v8AxS/nI/zB+Pg7/lY8v++5&#xA;/wDkacf5B1H/ACkT+3/il/OR/mD8fB3/ACseX/fc/wDyNOP8g6j/AJSJ/b/xS/nI/wAwfj4KXm/W&#xA;tWudDsZba+uLI3Eqv6kUr8uPpseJ4lPHxzE7Ljl/NTxHJKXCDzvvHm5MskYwEuEb/juYa115lP8A&#xA;00eof8jZf+qudN+Vn/PP4+LjfnI/zB+Pgxixh9DX4oa8vSuOHLpXi1K5iY41kA83MnK8d94RGde6&#xA;d2Kpz5O/8mD5X+U36pc1Gf8Axgfjo2y/uJPoXM106D1GtE8KH+Ga7XfVD8dyY/XH3oJPsL8hmqlz&#xA;aZcyuwISGGUzec7X0/2JkXb/ACftfxzaaMVwuLM3J6LeKGtpFPQimbbLHiiR3t0ObGGFGKnqpofn&#xA;nLyiYmi2KVxcw28RlmcIg8e/sMYxJNBBICQL62tScFBAknVVH8sYUkn7t82WHFVBEbnjP9YMx1FV&#xA;XT3VRRVCgD2DDMb2k/xHJ/m/7qLtezv76Px+4oXy/wD3Fz/xnP8AxBMPs7/icPj96e0f70t+YrG3&#xA;v9JuLW4XlFJxBpsQeQoQexGZWY1kLbgHoDxvzRoc2gaxcWEtpJLFHI6wXH1qNRIisVDcanidt1O4&#xA;yj8/j4iBXpNfXFvGn2BMuY/mlL0iikt/VMUkJWQKVM4kqOJPVenTMrBkjkFjv7wfucfMODkb27qQ&#xA;v1iH+Q/8jj/XMvwQ4H5mfctvJB+j55YyyMEkG0hbooIPtkfDAkG/FkMgbeU3PmDVo53Rbh+Kmgqz&#xA;f1zNGMEOPk1EhIhX0vXNUnuGR7h6CNzszdafPBLGAyw5pSNFCv5j1cOwFw9ASPtN/XJDFFrOplaa&#xA;6JrOoz2ervJO5aG05x/E2zeqm/XKskACPe24sxkCT0Sj/Emsf8tD/wDBN/XLfCi0/mZJhHrWpnSH&#xA;nNxJzDinxtT9eR8MXTeMp4OLql/+JNY/5aH/AOCb+uS8KLR+Zkzz8v7i51BQtxNIwkYA/Edtz0rX&#xA;MbPAbBy8cyY2yK9urG1l9P05367+tToafynMMEOxxaQzF39iA/T1j/yzz/8AI/8A5syzgDH8ue/7&#xA;HoHmAxHyno5YP6Z4bBqNT0jT4qZxnZkh/KOb/O+9zMsD4QDHjAtvdzwozMi8KczU7iudhIUXUxNh&#xA;j0f/ACk//R23/EzmnH97/nfpd1/kv81fnWupdiqc+Tv/ACYPlf5TfqlzUZ/8YH46Nsv7iT6FzNdO&#xA;h76PnASOq7/R3zG1WPiAPcWUB6h70uT7C/IZopc2iXMoLVdUisoTQhrhh+7j/ifbLMWMyPk1TnQQ&#xA;/kHTpbnVn1CQVjtgfjPeVxT9RJzc6WFm+5x4De2f3P8AcP8A598zpcnIx/UxrVtE+uH1reZrW7Ap&#xA;6ik8WA6BwP15iZcAm25Md7jYsU/QOqXWotayzq8qVBkZmYUHhUVzFji9XCGMtFk4eIkUyfSNGh0u&#xA;RIkcyO6s0kh2qdhsOwzJhDhk5GLGI4z70fqf+8Mn+x/4kM1XtJ/iOT/N/wB1FzOzv76Px+4oTy//&#xA;AHFz/wAZz/xBMPs7/icPj96e0f70onUv95H+a/8AEhmVn+stun+gPKvzRsYr3zPqkEjFf3zFGB+y&#xA;3j9oZl9i4oywyuN/vcnT+nL+ifveS7WyGOqJH82H+4ixHSrK4g0uS2mWsnrkDfZgUYAg16HIzHDl&#xA;mB04fu+DuuzZCWIHpv8AoQn6CuP+WUf8H/zfj42R2vgafvP4+C64spLXSrhXiERZJCADWvwj3OSj&#xA;OUpC2uUIR+h45e/71S/62bKPJ1Ob6iidE/3rf/jE/wCrIz5Nml+r4IGT+8f5n9eTDRLmnXl3/jn6&#xA;5/zBf8zUynLzj73IwfTL3JHlzjJrF/xwZf8AjJkD9TlR/uilWTcV6Z+V3WP/AFh+s5iZ+Ydji+hN&#xA;9b/3r+//AIkc18er0Ol+lIsyGp6xr/8Ayh2i/KP/AJNHOH7N/wCNDN/nfe3ZPoCTXX/HSuf9h/xH&#xA;O1yc3Rw5Maj/AOUo/wCjtv8AiZzSj+9/zv0u7/yX+avzrXUuxVOfJ3/kwfK/ym/VLmoz/wCMD8dG&#xA;2X9xJ9C5munWXH9xJ/qt+rIz+ks8f1D3sc1Hy/diE3Gn3bQqU5vAWYL0qeBHT5Zi5NNE7uPkwEy9&#xA;J5lKtK8r3WoM0ssypEGo7bs5PXauRxYuL3MJ6KcT6i9I0+wtbC1S1tU4RJ95Pck9yc2cYiIoNQFJ&#xA;EZ5yKGRiPCpzgfzOX+dL5l3vhx7gt9ST+Y/ecH5jJ/Ol8ynhHctCqHMgADnq46/fg8ef84/NPSmm&#xA;d/WQ8jWh3rmVHPPwieI3xd68IpbdO5gYFiRttX3GantLNOWCQMiRt18w36SI8QfjohtJdwtyAxA9&#xA;Y9/8hMnoc044IAEjbv8AMp1cR4hR969NMd2PTiSfk4zo9LInGCTZ/axxjZK9W0ryJqmo3F/cXN0J&#xA;rhy7BVIAr2FDmRi8TFYhkqJlKX0RP1G+ZcDP2Zjyy4px9W38XcKSvzJoXlmXyvJp+izyLqSO01nc&#xA;zKfhcxsArHf4S3H5ZbhlwzMpy4jIi9gOXkG3HoxjhwwFDfre75/uLf8AMy3meCbVIkljJV1IGxH/&#xA;ADyzZjLh7nGOHN3phYPrv6KvE1i6W6m4u0TJ0C8AKfZTvkJSiZDhbsUJgHiYG9jau5dkqx3Jqf65&#xA;lCRYnDEmyFW0tLeGUtGnFijAmpO3E+Jx4iUxxRibCidPsySTHudzu39cPGWPgQ7ky0i0t47bVFRK&#xA;K9pRxU7j1o/f3yucjY97KOKIBA6pb+jrP/ff4t/XLOMsfAh3IhbaAWLQhf3ZcVWp8Dg4jzZ+HGq6&#xA;If8AR1n/AL7/ABb+uHjLDwIdzMvIckNnIXIIijYEgbmm/jmNnlyPm2xhtQZVct5duJOcgn5e1B3r&#xA;mP6HKhqMsRQpC/UPKnhc/eMlxxY+Nk8mba/JZL5W0d3DfVfgoB9qhiPHOM7Lr+Us3d6vvc/NKXgg&#xA;9dmNi7iurueaKvBuAHLY7CmdhKVl1YFBjF1ctba1NcKAzRXDsFPQ0c9aZpDKpk+bvIRvGB5ObXYx&#xA;/wAeUX/BSf8ANWZ47Sy+Tj/lIqbeYlH/AB4xf8FL/wA1Yf5Ryo/KRTfyLqj33n/Qz6SwiFpERULH&#xA;qkjVqxJ75hazPKQMr3Y5MYjjIfQnqSfzH7zmo/MZP50vmXX8I7mndyjAseh75bgz5DkiDI8x1URF&#xA;tI7GJQSSCoBFfbI5M+TiPqPzXhDkAjFI/gB3IXb9WQGfIP4j80kXzVPrFx/v1/8Agjh/M5f50vmW&#xA;Hhx7gwP/ABTrP+/V/wCAX+mdR/JGn7vtLk8Ad/inWf8Afq/8Av8ATH+SNP3faV4A7/FOs/79X/gF&#xA;/pj/ACRp+77SvAFQeZ9Q+rFjKPrIf4fgFOFN+1OuH+TMNcNen3rwhV03X9Tu72O3nkDRPy5AKo6K&#xA;SNwPEZp+3+zsOPRzlEbjh6/0g36aI8QI1bPzS8s8mnTRpbPISFZFY1ACnc/LKux9JinpYGQ3rz7y&#xA;16r+8KJaDzs9kbWT6q6nrIY2DnevaQL+GbmOCERQ5NIkQgv0D5q8Lf8A4Bv+a8l4cWXiFptC81cT&#xA;QW9abfA//NePhxXxC8u1w+Yr27P1qKBJoSULLG6MQDsGBfLo4wGmWQlLW03WDG6fu6SKUbY9D/ss&#xA;nEAG2JkUo/wPc/zn8Mu8UsW18k3KmofsR27imPilWv8AA9z/ADn8MfFKq0HlC8hSdUYETx+k9ew5&#xA;K23vVcByEqo/4Huf5z+GHxSq7/BV1w4c9q17Y+KVW/4Huf5z+GPilUbYeXdRsVdYirB+vIV6fIjI&#xA;Tlxc0g0iv0drHhH9x/5qyvgDLjLv0drHhH9x/wCaseALxlmvmeG7byPo0UYU3H7sEGvGojNc4/su&#xA;P+uWb/O+92WY/uB8GFBtbsVLv6KxsQDsxJ9hvnYcIdZxEpfcD15pJX2aRi7U6VY1OYp0kCb3cqOs&#xA;mBWykbWI+OP5SHmn87PyWGwgP8334fysEfnJ+SL0eSTSNTg1Kzal1bktGWoy1KlTUfI4DpIEUeTC&#xA;WplIUXqWj+dNfu9OhuJZU9R+XLiigbMR4e2Sj2VgIuvtKxAITCDzRqZnjE8o9Esvq0Rfs1+LoPDJ&#xA;DsrDHcDceZZcIWN5o1cMQko4A/D8C9O3bH+ScB3I+0rwB3+KdZ/36v8AwC/0wfyRp+77SvAHf4p1&#xA;n/fq/wDAL/TH+SNP3faV4Ar/AKR8of8AVnm/6ST/AM05n1LvWi79I+UP+rPN/wBJJ/5pxqXetF36&#xA;R8of9Web/pJP/NONS71ou/SPlD/qzzf9JJ/5pxqXetF36R8of9Web/pJP/NONS71ou/SPlD/AKs8&#xA;3/SSf+acal3rRd+kfKH/AFZ5v+kk/wDNONS71ou/SPlD/qzzf9JJ/wCacal3rRd+kfKH/Vnm/wCk&#xA;k/8ANONS71ou/SPlD/qzzf8ASSf+acal3rRd+kfKH/Vnm/6ST/zTjUu9aLv0j5Q/6s83/SSf+aca&#xA;l3rRd+kfKH/Vnm/6ST/zTjUu9aLv0j5Q/wCrPN/0kn/mnGpd60XfpHyh/wBWeb/pJP8AzTjUu9aL&#xA;v0j5Q/6s83/SSf8AmnGpd60XfpHyh/1Z5v8ApJP/ADTjUu9aLv0j5Q/6s83/AEkn/mnGpd60XfpH&#xA;yh/1Z5v+kk/8041LvWi79I+UP+rPN/0kn/mnGpd60XfpHyh/1Z5v+kk/8041LvWi79I+UP8Aqzzf&#xA;9JJ/5pxqXetF36R8of8AVnm/6ST/AM041LvWi79I+UP+rPN/0kn/AJpxqXetF36R8of9Web/AKST&#xA;/wA041LvWi79I+UP+rPN/wBJJ/5pxqXetF36R8of9Web/pJP/NONS71ou/SPlD/qzzf9JJ/5pxqX&#xA;etF36R8of9Web/pJP/NONS71ou/SPlD/AKs83/SSf+acal3rRd+kfKH/AFZ5v+kk/wDNONS71ou/&#xA;SPlD/qzzf9JJ/wCacal3rRRUX5e+dopBImngMvQmW3I+4uRkuIMfFirS+SvP0sZjewUq3UB7UH7w&#xA;wOC4r4kVGH8v/O8Mgkj08Bh0Jlt2G/sXIwmQXxYq03kjz7NGY5LBSp6gPaqdvcMDgBC+JFSg8gee&#xA;IH5x6eA1Kby27bfJnOJkF8WKpP5I8+zx+nJYKV67Par091YHEEL4kVkHkHzxA5eLTwGIoayWzbde&#xA;jOcTIL4sV0/kbz5OgSWwUqDUUe1Xfp1VhiCF8SK238heebckxWABbY1ktm/4k5xMgviRXXHkXz3c&#xA;ACWwBC7iklsv/EWGIIXxItW/kPz1b8vSsAOVOVZLZun+s58cTIFfEi648h+erjj6tgDxrxpJbL1/&#xA;1XHhiJAL4kW7fyL57twRFYABtzWS2b/iTHEkL4kWrjyH56uCplsAePSklsvX/VcYiQC+JFu38jee&#xA;7dSsVgoBNTV7Zt/9kxxJC+JFbceQfPNwwaXTwSBQUktl2/2LjESC+JFfB5H8+QJwjsFC1ru9q2/z&#xA;ZjiSF8SKnP5A88Tvzk08FqU2lt12+SuMRIL4sVWHyR59hjEcdgoUdAXtWO/uWJxJC+JFRm/L/wA7&#xA;zSGSTTwWPUiW3UbewcDCJBfFirReSvP0UYjSwUKvQF7Un7yxOC4r4kVGX8vfO0shkfTwWbqRLbgf&#xA;cHAw8QXxYq8fkrz9HGsaWChV2FXtT+JauC4r4kUPJ+XvnaSRpH0+rNuaS24/APTDxBfFiiE8mef0&#xA;RUWxXioAFWtDsNupbBcV8SKHf8u/Oruztp/xMSTSW3G536B8PEF8WKJXyb+YCgAWK0Gw+K0/5qyN&#xA;xXxIoVvy686MSTp+53P76D/mvJcQXxYov/B/5g/8sKf8Faf81ZG4r4kUGPy585g1Gn9P+LoP+a8l&#xA;xBfFijD5O/MEin1FN/8AKtP+asjcV8SKEX8uvOisGGn7qaj99Adx83yXEF8WL//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:09f4a3f6-277a-4b42-aba6-40208e49b30d</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:09f4a3f6-277a-4b42-aba6-40208e49b30d</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:c79713d2-21eb-d342-89a1-266fab2f5212</stRef:instanceID>
            <stRef:documentID>xmp.did:c79713d2-21eb-d342-89a1-266fab2f5212</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27bfbb28-7646-2941-b11f-b92b7251523f</stEvt:instanceID>
                  <stEvt:when>2019-02-27T01:56:09+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:09f4a3f6-277a-4b42-aba6-40208e49b30d</stEvt:instanceID>
                  <stEvt:when>2019-02-27T18:29:02+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>400.000000</stDim:w>
            <stDim:h>223.800000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -217.985 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 217.985 li
393.656 217.985 li
393.656 0 li
cp
clp
393.652 -.000197095 mo
393.652 186.465 li
.00423755 186.465 li
.00423755 -.000197095 li
393.652 -.000197095 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[2.74954e-11 -265.568 265.568 2.74954e-11 196.828 204.264 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.447059 .321569 .411765 ]
/C1 [1 .815686 .419608 ]
/N 1.05735 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.215686 .188235 .301961 ]
/C1 [.447059 .321569 .411765 ]
/N 1.04146 
>>
]
/Bounds [.432642 ]
/Encode [1 0 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.74954e-11 -265.568 265.568 2.74954e-11 196.828 204.264 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rr)ckq=s[Vo^_PAmd9B+l0.9kjPo.VhVHu@g"=m+eC2glccs\WaiMNA`5BF,^V7@m]"#5X['R'CYHG".
Wi;qoV50iZTV%dFS!o_2QBdYsOcYT_N/NRLLPCM8Jq8H%I=-BfH$FOUFE;JBEH,r:Df9N2DJa6,Chmg%
C2.HsBkV0mB4bafAS#C_A7K+Y@UW\R?sm>K?=$rD?!LW>>?b97>$5!1=BAR*<`W4#<E)pr;c6Lk;,L.d
:esk^:/4MX9MA,Q91hfK8P)HD84Q0>7Rfg86psF16UF++5s[b$5X.Is5!D+m4?P_f4$,Ja3B9)Z3&iiU
~>
<~d*Bn[bK7iG`l5m5_8*h"]Xtbc\@/fPZa-g=Y-"e+WMl_lV5'cYTV%gGS!ob4Q^*f!P*(idNJrdQM26n?
KS+l-J:;ooH[9s^G'.nJEcH&:DJX*'BkV-kARo:[?sd5G>[(B7=BAO'<)Z[l;,L1e:f'ta:JXb^:/4PZ
9he>V9MA,R91qoN8kM]J8P)KF84Z9B84Q0?7n,s;7R]a7779O36pj=/6UF++6:*t(5s[b$5X7Ou5<h=q
5!D.n4Ztqj4?P_f4$,Mb3]];_3B9)[3&ilW2`EZS2`<QP2Dm?L2)I-H1c.!E1G^dA1,:U>0ekC;0JG17
~>
<~CMIU!C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.HsBk_9qBk_9q
Bk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9pBP;'mB4kjiB4bafAnGUc
AS#F`A7T4]@q0"Y@q&nV@U`bS@:<SP?smAM?XI/I?X@&F?=$rD?!U`A>[1N=>[(E:>?b97>$>*4=]nm1
=BJ[-=BAR*='&F'<`W7%<E3%!<E)ps<)cdp;c?Um;GpCj;Gg:g;,L.d:f'ta:JXb^:JOY[:/4PY9he>V
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
393.652 -.000197095 mo
393.652 186.465 li
.00423755 186.465 li
.00423755 -.000197095 li
393.652 -.000197095 li
.807843 .964706 1 rgb
f
381.112 76.3816 mo
284.094 76.3816 li
284.094 173.4 li
381.112 173.4 li
381.112 76.3816 li
.807843 .878431 .894118 rgb
f
81.5672 76.3816 mo
9.78352 76.3816 li
9.78352 173.4 li
81.5672 173.4 li
81.5672 76.3816 li
f
32.8314 187.757 mo
27.117 187.757 li
27.117 136.157 li
32.8314 136.157 li
32.8314 187.757 li
cp
.780392 .658824 .596078 rgb
f
44.5975 134.505 mo
44.5975 149.665 35.4271 161.957 24.1131 161.957 cv
20.8626 161.957 17.7869 160.94 15.0555 159.135 cv
11.6902 154.243 9.63605 147.713 9.63605 140.536 cv
9.63605 125.374 18.8084 113.085 30.1224 113.085 cv
33.3748 113.085 36.4485 114.1 39.18 115.907 cv
42.5438 120.799 44.5975 127.33 44.5975 134.505 cv
cp
.705882 .870588 .588235 rgb
f
50.6072 140.536 mo
50.6072 155.696 41.4349 167.988 30.1224 167.988 cv
24.1644 167.988 18.7977 164.577 15.0555 159.135 cv
17.7869 160.94 20.8626 161.957 24.1131 161.957 cv
35.4271 161.957 44.5975 149.665 44.5975 134.505 cv
44.5975 127.33 42.5438 120.799 39.18 115.907 cv
45.951 120.387 50.6072 129.732 50.6072 140.536 cv
cp
.443137 .690196 .521569 rgb
f
373.754 187.757 mo
368.039 187.757 li
368.039 136.157 li
373.754 136.157 li
373.754 187.757 li
cp
.780392 .658824 .596078 rgb
f
385.52 134.505 mo
385.52 149.665 376.349 161.957 365.035 161.957 cv
361.785 161.957 358.709 160.94 355.977 159.135 cv
352.612 154.243 350.558 147.713 350.558 140.536 cv
350.558 125.374 359.73 113.085 371.045 113.085 cv
374.297 113.085 377.371 114.1 380.102 115.907 cv
383.466 120.799 385.52 127.33 385.52 134.505 cv
cp
.705882 .870588 .588235 rgb
f
391.529 140.536 mo
391.529 155.696 382.357 167.988 371.045 167.988 cv
365.087 167.988 359.72 164.577 355.977 159.135 cv
358.709 160.94 361.785 161.957 365.035 161.957 cv
376.349 161.957 385.52 149.665 385.52 134.505 cv
385.52 127.33 383.466 120.799 380.102 115.907 cv
386.873 120.387 391.529 129.732 391.529 140.536 cv
cp
.443137 .690196 .521569 rgb
f
158.012 28.3816 mo
86.2283 28.3816 li
86.2283 173.4 li
158.012 173.4 li
158.012 28.3816 li
.807843 .878431 .894118 rgb
f
393.652 186.465 mo
393.652 200.822 li
-.000197095 200.822 li
-.000197095 186.465 li
393.652 186.465 li
.639216 .521569 .615686 rgb
f
393.652 173.4 mo
393.652 187.757 li
-.000197095 187.757 li
-.000197095 173.4 li
393.652 173.4 li
.835294 .85098 .45098 rgb
f
393.652 205.141 mo
.00420952 205.141 li
.00420952 200.822 li
393.652 200.822 li
393.652 205.141 li
cp
.984314 .929412 .886275 rgb
f
393.656 203.629 mo
393.656 217.985 li
.00420952 217.985 li
.00420952 203.629 li
393.656 203.629 li
cp
.639216 .521569 .615686 rgb
f
21.7474 211.319 mo
9.78351 211.319 li
9.78351 210.294 li
21.7474 210.294 li
21.7474 211.319 li
cp
45.6756 211.319 mo
33.7117 211.319 li
33.7117 210.294 li
45.6756 210.294 li
45.6756 211.319 li
cp
69.6038 211.319 mo
57.6395 211.319 li
57.6395 210.294 li
69.6038 210.294 li
69.6038 211.319 li
cp
93.5311 211.319 mo
81.5672 211.319 li
81.5672 210.294 li
93.5311 210.294 li
93.5311 211.319 li
cp
117.459 211.319 mo
105.495 211.319 li
105.495 210.294 li
117.459 210.294 li
117.459 211.319 li
cp
141.388 211.319 mo
129.423 211.319 li
129.423 210.294 li
141.388 210.294 li
141.388 211.319 li
cp
165.315 211.319 mo
153.351 211.319 li
153.351 210.294 li
165.315 210.294 li
165.315 211.319 li
cp
189.243 211.319 mo
177.279 211.319 li
177.279 210.294 li
189.243 210.294 li
189.243 211.319 li
cp
213.171 211.319 mo
201.207 211.319 li
201.207 210.294 li
213.171 210.294 li
213.171 211.319 li
cp
237.098 211.319 mo
225.135 211.319 li
225.135 210.294 li
237.098 210.294 li
237.098 211.319 li
cp
261.026 211.319 mo
249.063 211.319 li
249.063 210.294 li
261.026 210.294 li
261.026 211.319 li
cp
284.955 211.319 mo
272.99 211.319 li
272.99 210.294 li
284.955 210.294 li
284.955 211.319 li
cp
308.883 211.319 mo
296.918 211.319 li
296.918 210.294 li
308.883 210.294 li
308.883 211.319 li
cp
332.81 211.319 mo
320.846 211.319 li
320.846 210.294 li
332.81 210.294 li
332.81 211.319 li
cp
356.738 211.319 mo
344.774 211.319 li
344.774 210.294 li
356.738 210.294 li
356.738 211.319 li
cp
380.666 211.319 mo
368.702 211.319 li
368.702 210.294 li
380.666 210.294 li
380.666 211.319 li
cp
.984314 .929412 .886275 rgb
f
393.656 210.294 mo
393.656 211.319 li
392.631 211.319 li
392.631 210.294 li
393.656 210.294 li
cp
f
106.735 91.8495 mo
104.56 91.8495 li
104.56 55.5135 li
106.735 55.5135 li
106.735 91.8495 li
.54902 .392157 .254902 rgb
f
106.735 91.8495 mo
106.735 55.5135 li
124.136 55.5135 li
124.136 91.8495 li
106.735 91.8495 li
.521569 .435294 .592157 rgb
f
129.456 91.8495 mo
127.282 91.8495 li
127.282 55.5135 li
129.456 55.5135 li
129.456 91.8495 li
.54902 .392157 .254902 rgb
f
129.456 55.5135 mo
146.857 55.5135 li
146.857 91.8495 li
129.456 91.8495 li
129.456 55.5135 li
.521569 .435294 .592157 rgb
f
152.177 91.8495 mo
150.003 91.8495 li
150.003 55.5135 li
152.177 55.5135 li
152.177 91.8495 li
.54902 .392157 .254902 rgb
f
152.177 55.5135 mo
169.577 55.5135 li
169.577 91.8495 li
152.177 91.8495 li
152.177 55.5135 li
.521569 .435294 .592157 rgb
f
174.898 91.8495 mo
172.724 91.8495 li
172.724 55.5135 li
174.898 55.5135 li
174.898 91.8495 li
.54902 .392157 .254902 rgb
f
174.898 55.5135 mo
192.299 55.5135 li
192.299 91.8495 li
174.898 91.8495 li
174.898 55.5135 li
.521569 .435294 .592157 rgb
f
156.325 117.336 mo
156.325 114.331 li
156.187 112.697 li
155.959 112.45 li
155.849 112.431 li
155.576 112.377 li
155.128 112.469 li
154.891 112.769 li
154.744 114.477 li
154.744 122.505 li
154.891 124.148 li
155.128 124.431 li
155.539 124.532 li
155.795 124.468 li
155.941 124.431 li
156.179 124.148 li
156.325 122.34 li
156.325 120.167 li
160.671 120.167 li
160.671 120.843 li
160.58 123.135 li
160.306 124.641 li
159.713 125.701 li
158.68 126.614 li
157.284 127.244 li
155.594 127.454 li
153.85 127.28 li
152.443 126.742 li
151.411 125.892 li
150.8 124.76 li
150.498 123.181 li
150.398 120.952 li
150.398 115.902 li
150.526 113.107 li
150.772 112.185 li
151.265 111.308 li
151.996 110.532 li
152.964 109.948 li
154.133 109.574 li
155.466 109.446 li
157.22 109.638 li
158.635 110.213 li
159.676 111.08 li
160.279 112.131 li
160.571 113.592 li
160.671 115.692 li
160.671 117.336 li
156.325 117.336 li
cp
.941176 .768627 .0980392 rgb
f
172.482 109.811 mo
174.39 115.907 li
174.39 117.593 li
171.954 109.811 li
172.482 109.811 li
cp
.509804 .203922 .235294 rgb
f
168.32 127.093 mo
168.32 109.811 li
171.954 109.811 li
174.39 117.593 li
174.39 115.907 li
174.39 109.811 li
178.024 109.811 li
178.024 127.093 li
174.215 127.093 li
172.482 121.07 li
171.954 119.236 li
171.954 127.093 li
168.32 127.093 li
cp
.941176 .768627 .0980392 rgb
f
178.024 127.093 mo
178.024 109.811 li
178.552 109.811 li
178.552 127.093 li
178.024 127.093 li
cp
.509804 .203922 .235294 rgb
f
171.954 127.093 mo
171.954 119.236 li
172.482 121.07 li
172.482 127.093 li
171.954 127.093 li
cp
f
187.543 109.811 mo
187.543 113.269 li
187.015 113.269 li
187.015 109.811 li
187.543 109.811 li
cp
f
179.768 109.811 mo
187.015 109.811 li
187.015 113.269 li
184.642 113.269 li
184.115 113.269 li
184.115 116.547 li
184.642 116.547 li
186.829 116.547 li
186.829 119.834 li
184.642 119.834 li
184.115 119.834 li
184.115 123.635 li
184.642 123.635 li
187.304 123.635 li
187.304 127.093 li
179.768 127.093 li
179.768 109.811 li
cp
.941176 .768627 .0980392 rgb
f
184.115 116.547 mo
184.115 113.269 li
184.642 113.269 li
184.642 116.547 li
184.115 116.547 li
cp
.509804 .203922 .235294 rgb
f
186.829 119.834 mo
186.829 116.547 li
187.357 116.547 li
187.357 119.834 li
186.829 119.834 li
cp
f
184.115 123.635 mo
184.115 119.834 li
184.642 119.834 li
184.642 123.635 li
184.115 123.635 li
cp
f
187.304 127.093 mo
187.304 123.635 li
187.832 123.635 li
187.832 127.093 li
187.304 127.093 li
cp
f
201.967 109.811 mo
201.967 127.089 li
198.168 127.089 li
198.158 119.481 li
198.158 115.428 li
196.642 127.089 li
193.949 127.089 li
192.88 119.454 li
192.36 115.692 li
192.35 127.089 li
188.552 127.089 li
188.552 109.811 li
194.177 109.811 li
194.688 113.482 li
195.309 117.884 li
195.556 115.884 li
196.305 109.811 li
201.967 109.811 li
cp
.917647 .709804 .505882 rgb
f
265.239 114.71 mo
265.184 115.32 li
264.888 115.839 li
264.988 114.71 li
265.239 114.71 li
cp
.509804 .203922 .235294 rgb
f
266.484 114.551 mo
266.484 117.573 li
265.882 117.628 li
265.462 117.774 li
265.197 118.003 li
265.06 118.312 li
264.987 119.902 li
264.987 123.299 li
262.458 123.299 li
262.458 114.706 li
264.987 114.706 li
264.887 115.838 li
265.188 115.317 li
265.197 115.3 li
265.562 114.916 li
265.991 114.66 li
266.484 114.551 li
cp
.627451 .25098 .305882 rgb
f
266.731 114.551 mo
266.731 117.573 li
266.484 117.573 li
266.484 114.551 li
266.731 114.551 li
cp
.509804 .203922 .235294 rgb
f
258.366 117.126 mo
258.421 116.24 li
258.54 116.112 li
258.75 116.075 li
258.85 116.102 li
258.924 116.121 li
259.033 116.267 li
259.096 117.126 li
259.096 117.756 li
258.366 117.756 li
258.366 117.126 li
cp
261.636 119.153 mo
261.636 118.012 li
261.562 116.906 li
261.352 116.075 li
260.978 115.455 li
260.385 114.971 li
259.599 114.66 li
258.631 114.551 li
257.809 114.641 li
257.096 114.897 li
256.521 115.327 li
256.129 115.892 li
255.91 116.669 li
255.837 117.674 li
255.837 120.176 li
255.864 121.015 li
255.965 121.637 li
256.147 122.112 li
256.439 122.55 li
256.85 122.925 li
257.389 123.208 li
258.055 123.39 li
258.805 123.454 li
259.562 123.39 li
260.183 123.208 li
260.677 122.906 li
261.088 122.477 li
261.38 122.012 li
261.535 121.564 li
261.636 120.34 li
261.636 119.71 li
259.243 119.71 li
259.243 120.843 li
259.142 121.71 li
258.996 121.874 li
258.878 121.902 li
258.759 121.93 li
258.567 121.884 li
258.448 121.764 li
258.366 121.007 li
258.366 119.153 li
261.636 119.153 li
cp
.627451 .25098 .305882 rgb
f
255.709 121.911 mo
255.709 123.299 li
255.462 123.299 li
255.462 121.911 li
255.709 121.911 li
cp
.509804 .203922 .235294 rgb
f
254.924 113.564 mo
254.924 114.916 li
254.668 114.916 li
254.668 113.564 li
254.924 113.564 li
cp
f
255.608 114.916 mo
255.608 116.276 li
255.352 116.276 li
255.352 114.916 li
255.608 114.916 li
cp
f
259.096 117.126 mo
259.096 117.756 li
258.613 117.756 li
258.613 117.126 li
258.677 116.24 li
258.786 116.112 li
258.85 116.102 li
258.924 116.121 li
259.033 116.267 li
259.096 117.126 li
cp
.984314 .392157 .423529 rgb
f
248.613 120.979 mo
248.54 121.774 li
248.422 121.892 li
248.367 121.902 li
248.229 121.93 li
248.019 121.884 li
247.891 121.737 li
247.809 120.879 li
247.91 119.984 li
248.129 119.637 li
248.613 119.217 li
248.613 120.979 li
cp
251.106 117.217 mo
251.006 116.176 li
250.741 115.546 li
250.221 115.025 li
249.855 114.815 li
249.417 114.669 li
248.294 114.551 li
247.316 114.66 li
246.55 114.971 li
245.992 115.418 li
245.664 115.92 li
245.49 116.578 li
245.435 117.464 li
245.435 118.039 li
247.809 118.039 li
247.809 117.135 li
247.874 116.249 li
247.983 116.121 li
248.193 116.075 li
248.303 116.102 li
248.385 116.131 li
248.513 116.276 li
248.613 117.153 li
248.522 117.865 li
248.147 118.121 li
247.188 118.551 li
246.239 118.979 li
245.727 119.363 li
245.509 119.865 li
245.435 120.678 li
245.435 121.382 li
245.471 121.974 li
245.572 122.45 li
245.746 122.815 li
245.992 123.061 li
246.577 123.353 li
247.207 123.454 li
247.681 123.39 li
248.084 123.217 li
248.412 122.933 li
248.677 122.532 li
248.677 123.299 li
251.134 123.299 li
251.134 118.989 li
251.106 117.217 li
cp
.627451 .25098 .305882 rgb
f
248.613 119.436 mo
248.613 120.979 li
248.54 121.774 li
248.422 121.892 li
248.367 121.902 li
248.266 121.884 li
248.147 121.737 li
248.056 120.879 li
248.156 119.984 li
248.385 119.637 li
248.613 119.436 li
cp
.984314 .392157 .423529 rgb
f
241.454 117.126 mo
241.517 116.24 li
241.627 116.112 li
241.837 116.075 li
241.947 116.102 li
242.019 116.121 li
242.12 116.267 li
242.193 117.126 li
242.193 117.756 li
241.454 117.756 li
241.454 117.126 li
cp
244.722 119.153 mo
244.722 118.012 li
244.659 116.906 li
244.449 116.075 li
244.065 115.455 li
243.471 114.971 li
242.695 114.66 li
241.719 114.551 li
240.906 114.641 li
240.184 114.897 li
239.609 115.327 li
239.217 115.892 li
238.997 116.669 li
238.924 117.674 li
238.924 120.176 li
238.961 121.015 li
239.052 121.637 li
239.244 122.112 li
239.527 122.55 li
239.937 122.925 li
240.485 123.208 li
241.143 123.39 li
241.901 123.454 li
242.65 123.39 li
243.271 123.208 li
243.773 122.906 li
244.175 122.477 li
244.468 122.012 li
244.632 121.564 li
244.722 120.34 li
244.722 119.71 li
242.33 119.71 li
242.33 120.843 li
242.23 121.71 li
242.084 121.874 li
241.965 121.902 li
241.846 121.93 li
241.654 121.884 li
241.536 121.764 li
241.454 121.007 li
241.454 119.153 li
244.722 119.153 li
cp
.627451 .25098 .305882 rgb
f
231.838 121.911 mo
231.838 123.299 li
230.814 123.299 li
229.582 123.217 li
229.235 123.098 li
228.933 122.879 li
228.705 122.587 li
228.587 122.267 li
228.513 120.633 li
228.513 116.276 li
227.974 116.276 li
227.974 114.916 li
228.513 114.916 li
228.513 113.564 li
231.053 113.564 li
231.053 114.916 li
231.728 114.916 li
231.728 116.276 li
231.053 116.276 li
231.053 120.87 li
231.135 121.81 li
231.353 121.884 li
231.838 121.911 li
cp
f
232.084 121.911 mo
232.084 123.299 li
231.838 123.299 li
231.838 121.911 li
232.084 121.911 li
cp
.509804 .203922 .235294 rgb
f
242.193 117.126 mo
242.193 117.756 li
241.7 117.756 li
241.7 117.126 li
241.764 116.24 li
241.883 116.112 li
241.947 116.102 li
242.019 116.121 li
242.12 116.267 li
242.193 117.126 li
cp
.984314 .392157 .423529 rgb
f
238.13 117.372 mo
238.13 123.299 li
235.6 123.299 li
235.6 117.254 li
235.527 116.286 li
235.418 116.131 li
235.335 116.112 li
235.207 116.075 li
235.015 116.131 li
234.897 116.295 li
234.814 117.172 li
234.814 123.299 li
232.285 123.299 li
232.285 112.824 li
234.814 112.824 li
234.814 115.181 li
235.061 114.979 li
235.152 114.906 li
235.517 114.715 li
235.91 114.597 li
236.331 114.551 li
236.942 114.641 li
237.454 114.906 li
237.838 115.281 li
238.029 115.71 li
238.13 117.372 li
cp
.627451 .25098 .305882 rgb
f
234.814 115.178 mo
234.814 112.821 li
235.065 112.821 li
235.065 114.975 li
234.814 115.178 li
cp
.509804 .203922 .235294 rgb
f
125.476 117.034 mo
125.54 116.139 li
125.659 116.02 li
125.869 115.975 li
125.988 116.012 li
126.043 116.02 li
126.152 116.167 li
126.216 117.034 li
126.216 117.655 li
125.476 117.655 li
125.476 117.034 li
cp
128.755 119.053 mo
128.755 117.92 li
128.682 116.806 li
128.471 115.975 li
128.088 115.354 li
127.504 114.87 li
126.719 114.559 li
125.75 114.459 li
124.929 114.541 li
124.207 114.797 li
123.632 115.226 li
123.248 115.802 li
123.029 116.568 li
122.956 117.573 li
122.956 120.075 li
122.983 120.925 li
123.084 121.536 li
123.266 122.02 li
123.559 122.459 li
123.96 122.824 li
124.509 123.107 li
125.166 123.29 li
125.924 123.353 li
126.682 123.29 li
127.294 123.107 li
127.796 122.806 li
128.198 122.377 li
128.49 121.911 li
128.654 121.464 li
128.755 120.249 li
128.755 119.609 li
126.353 119.609 li
126.353 120.742 li
126.262 121.609 li
126.116 121.774 li
126.015 121.802 li
125.878 121.829 li
125.677 121.792 li
125.558 121.664 li
125.476 120.916 li
125.476 119.053 li
128.755 119.053 li
cp
.627451 .25098 .305882 rgb
f
110.555 120.933 mo
110.491 121.664 li
110.372 121.792 li
110.345 121.792 li
110.189 121.829 li
110.007 121.783 li
109.897 121.646 li
109.824 120.851 li
109.824 116.979 li
109.897 116.148 li
110.007 116.02 li
110.199 115.975 li
110.335 116.012 li
110.381 116.02 li
110.491 116.148 li
110.555 116.979 li
110.555 120.933 li
cp
113.057 116.834 mo
112.966 116.267 li
112.792 115.829 li
112.509 115.399 li
112.107 115.016 li
111.568 114.715 li
110.902 114.523 li
110.107 114.459 li
109.185 114.559 li
108.445 114.861 li
107.897 115.336 li
107.541 115.948 li
107.358 116.751 li
107.294 117.81 li
107.294 120.012 li
107.331 120.971 li
107.431 121.655 li
107.614 122.157 li
107.888 122.587 li
108.281 122.925 li
108.792 123.162 li
109.441 123.299 li
110.217 123.353 li
110.92 123.299 li
111.541 123.126 li
112.071 122.843 li
112.491 122.431 li
112.801 121.947 li
112.974 121.427 li
113.057 120.733 li
113.084 119.728 li
113.084 117.628 li
113.057 116.834 li
cp
f
100.272 114.61 mo
100.25 115.021 li
99.9422 115.428 li
99.9857 114.61 li
100.272 114.61 li
cp
.509804 .203922 .235294 rgb
f
106.5 117.098 mo
106.5 123.198 li
104.043 123.198 li
104.043 117.6 li
103.971 116.24 li
103.852 116.039 li
103.779 116.02 li
103.641 115.975 li
103.423 116.039 li
103.295 116.23 li
103.212 117.6 li
103.212 123.198 li
100.765 123.198 li
100.765 117.737 li
100.701 116.23 li
100.592 116.039 li
100.546 116.03 li
100.372 115.975 li
100.089 116.112 li
99.9525 116.431 li
99.9432 117.244 li
99.9432 123.198 li
97.4866 123.198 li
97.4866 114.614 li
99.9886 114.614 li
99.9432 115.428 li
100.254 115.025 li
100.263 114.998 li
100.646 114.696 li
101.076 114.514 li
101.569 114.459 li
102.053 114.514 li
102.473 114.696 li
102.847 114.998 li
103.167 115.428 li
103.313 115.244 li
103.505 114.998 li
103.879 114.696 li
104.308 114.514 li
104.774 114.459 li
105.358 114.532 li
105.843 114.779 li
106.18 115.135 li
106.381 115.573 li
106.472 116.185 li
106.5 117.098 li
cp
.627451 .25098 .305882 rgb
f
119.434 114.61 mo
118.252 123.195 li
117.966 123.195 li
119.148 114.61 li
119.434 114.61 li
cp
.509804 .203922 .235294 rgb
f
115.936 114.61 mo
116.483 119.434 li
116.361 120.879 li
115.65 114.61 li
115.936 114.61 li
cp
f
119.148 114.61 mo
117.966 123.195 li
114.663 123.195 li
113.393 114.61 li
115.65 114.61 li
116.361 120.879 li
116.483 119.434 li
116.891 114.61 li
119.148 114.61 li
cp
.627451 .25098 .305882 rgb
f
110.555 116.979 mo
110.555 120.933 li
110.491 121.664 li
110.372 121.792 li
110.345 121.792 li
110.29 121.783 li
110.18 121.646 li
110.107 120.851 li
110.107 116.979 li
110.18 116.148 li
110.29 116.02 li
110.335 116.012 li
110.381 116.02 li
110.491 116.148 li
110.555 116.979 li
cp
.984314 .392157 .423529 rgb
f
126.216 117.034 mo
126.216 117.655 li
125.769 117.655 li
125.769 117.034 li
125.832 116.139 li
125.942 116.02 li
125.988 116.012 li
126.043 116.02 li
126.152 116.167 li
126.216 117.034 li
cp
f
122.406 112.722 mo
122.406 114.087 li
122.12 114.087 li
122.12 112.722 li
122.406 112.722 li
cp
.509804 .203922 .235294 rgb
f
122.12 112.722 mo
122.12 114.087 li
119.517 114.087 li
119.517 112.722 li
122.12 112.722 li
cp
.627451 .25098 .305882 rgb
f
129.765 103.902 mo
129.825 104.368 li
129.765 104.833 li
129.591 105.267 li
129.315 105.639 li
128.954 105.926 li
128.535 106.105 li
128.085 106.166 li
127.635 106.105 li
127.215 105.926 li
126.855 105.639 li
126.578 105.267 li
126.405 104.833 li
126.345 104.368 li
126.405 103.902 li
126.578 103.468 li
126.855 103.096 li
127.215 102.81 li
127.635 102.63 li
128.085 102.569 li
128.535 102.63 li
128.954 102.81 li
129.315 103.096 li
129.591 103.468 li
129.765 103.902 li
1 .956863 .878431 rgb
f
111.341 106.166 mo
110.891 106.105 li
110.471 105.926 li
110.111 105.639 li
109.835 105.267 li
109.661 104.833 li
109.602 104.368 li
109.661 103.902 li
109.835 103.468 li
110.111 103.096 li
110.471 102.81 li
110.891 102.63 li
111.341 102.569 li
111.791 102.63 li
112.211 102.81 li
112.572 103.096 li
112.848 103.468 li
113.022 103.902 li
113.081 104.368 li
113.022 104.833 li
112.848 105.267 li
112.572 105.639 li
112.211 105.926 li
111.791 106.105 li
111.341 106.166 li
f
329.273 188.889 mo
284.082 188.889 li
284.082 141.951 li
267.025 141.951 li
265.673 141.951 li
265.673 136.151 li
282.894 136.151 li
282.894 95.014 li
285.735 95.014 li
285.735 52.3489 li
288.114 52.3489 li
288.114 38.6893 li
285.568 38.6893 li
285.568 25.0296 li
329.273 25.0296 li
329.273 76.3816 li
329.273 173.4 li
329.273 187.757 li
329.273 188.889 li
level3{
gsave
clp
[68.7949 .608804 -.608804 68.7949 261.51 106.559 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.396078 .203922 .0823529 ]
/C1 [.580392 .313726 .113725 ]
/N 1.05735 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.7949 .608804 -.608804 68.7949 261.51 106.559 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~P`q;pPEV/mP*1ujOcbcgOH>QcOH5H`O,o<]NfK-[NK&pWNJrgTN/W[QMi3LNMMd:KM2@(GM2@%ELkpkB
LPLY?L5(G;L4t>8KnY56KS5#3K7ef/K7\],JqAQ)JUrB'J:N0#J:E&uIt)orIXZ`pI=6NlI=-EiI!g9f
H[C*dH?sm`H?jd]H$OXZG^+IXGB\7TGBS.QG'8%OF`hhLFEDVHFEDSFF)uDCEcQ2@EcH)=EH,r:E,]c8
Df9Q4Df0H1DJj?/D/F-,D/=$)Ci!m&CMR^$C2.KuC2.HsBk_9qBP;'mBP;$kB4kjiAnGXeAnGUcAS#Fa
~>
<~:esk_:JXb^:JOY[:/4PZ:/4MX9he>V9he>U9MA,R9MA,Q91qoN91qoN8kM]J8kM]J8kDTG8P)KF8OuBC
84Z9B84Z6@7n6'>7n6'=7Rfj:7Rfj:77BX677BX6779O36psF26psC06UO4.6UO4-6:+"*6:+"*5s[e&
5s[e&5sR\#5X7S"5X7Ou5<h@s5<h@r5!D.o5!D.o4Ztqk4Ztqk4Zkhh4?P_g4?P\e4$,Mc4$,Mc3]];_
3]];_3]T2\3B9)[3B9&Y3&ilW3&ilW2`EZS2`EZS2`EWQ2E!HO2E!HN2)R6K2)R6K2)R3I1c.$G1c.$G
~>
<~*?6%=*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq;)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]BV5
)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0(`4),
(`4),(`4),(`4),(`4),(`4),(`4),(`4)+(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(()@Z$
()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
265.673 141.951 mo
260.532 141.951 li
77.1258 141.951 li
65.2113 141.951 li
63.8582 141.951 li
58.7171 141.951 li
58.7171 136.151 li
75.9388 136.151 li
265.673 136.151 li
265.673 141.951 li
.941176 .768627 .0980392 rgb
f
65.2112 196.476 mo
63.8582 196.476 li
63.8582 141.951 li
65.2112 141.951 li
65.2112 191.473 li
65.2112 193.947 li
65.2112 196.476 li
cp
.54902 .392157 .254902 rgb
f
58.7171 196.476 mo
58.7171 141.951 li
63.8582 141.951 li
63.8582 196.476 li
58.7171 196.476 li
cp
.941176 .768627 .0980392 rgb
f
334.938 188.889 mo
334.938 196.476 li
278.125 196.476 li
278.125 193.947 li
279.986 193.947 li
279.986 191.474 li
281.994 191.474 li
281.994 188.889 li
284.082 188.889 li
329.273 188.889 li
334.938 188.889 li
.364706 .345098 .321569 rgb
f
278.125 193.947 mo
278.125 196.476 li
267.025 196.476 li
267.025 193.947 li
278.125 193.947 li
.898039 .843137 .792157 rgb
f
278.125 193.947 mo
267.025 193.947 li
267.025 191.474 li
279.986 191.474 li
279.986 193.947 li
278.125 193.947 li
.74902 .701961 .658824 rgb
f
285.735 95.014 mo
282.894 95.014 li
78.7791 95.014 li
78.7791 52.3489 li
81.1585 52.3489 li
285.735 52.3489 li
285.735 95.014 li
104.56 91.8495 mo
106.735 91.8495 li
124.136 91.8495 li
124.136 55.5135 li
106.735 55.5135 li
104.56 55.5135 li
104.56 91.8495 li
127.282 91.8495 mo
129.456 91.8495 li
146.857 91.8495 li
146.857 55.5135 li
129.456 55.5135 li
127.282 55.5135 li
127.282 91.8495 li
150.003 91.8495 mo
152.177 91.8495 li
169.577 91.8495 li
169.577 55.5135 li
152.177 55.5135 li
150.003 55.5135 li
150.003 91.8495 li
172.724 91.8495 mo
174.898 91.8495 li
192.299 91.8495 li
192.299 55.5135 li
174.898 55.5135 li
172.724 55.5135 li
172.724 91.8495 li
101.414 55.5135 mo
84.0135 55.5135 li
81.8396 55.5135 li
81.8396 91.8495 li
84.0135 91.8495 li
101.414 91.8495 li
101.414 55.5135 li
215.02 55.5135 mo
197.619 55.5135 li
195.445 55.5135 li
195.445 91.8495 li
197.619 91.8495 li
215.02 91.8495 li
215.02 55.5135 li
237.741 55.5135 mo
220.34 55.5135 li
218.166 55.5135 li
218.166 91.8495 li
220.34 91.8495 li
237.741 91.8495 li
237.741 55.5135 li
260.462 55.5135 mo
243.061 55.5135 li
240.887 55.5135 li
240.887 91.8495 li
243.061 91.8495 li
260.462 91.8495 li
260.462 55.5135 li
283.183 55.513 mo
265.782 55.5135 li
263.608 55.513 li
263.608 91.8495 li
265.782 91.8495 li
283.183 91.8495 li
283.183 55.513 li
.917647 .709804 .505882 rgb
f
282.894 136.151 mo
265.673 136.151 li
75.9388 136.151 li
75.9388 95.014 li
78.7791 95.014 li
282.894 95.014 li
282.894 136.151 li
279.298 98.7327 mo
80.7225 98.7327 li
79.5355 98.7327 li
79.5355 132.432 li
80.7225 132.432 li
279.298 132.432 li
279.298 130.363 li
279.298 126.949 li
279.298 106.075 li
279.298 102.661 li
279.298 98.7327 li
.996078 .886275 .843137 rgb
f
284.082 141.951 mo
284.082 188.889 li
281.994 188.889 li
276.302 188.889 li
276.302 154.731 li
276.302 148.801 li
267.025 148.801 li
267.025 141.951 li
284.082 141.951 li
.921569 .835294 .741176 rgb
f
281.994 188.889 mo
281.994 191.474 li
279.986 191.474 li
267.025 191.474 li
267.025 188.889 li
276.302 188.889 li
281.994 188.889 li
.498039 .466667 .439216 rgb
f
66.0686 191.474 mo
66.0686 188.889 li
77.1258 188.889 li
83.6653 188.889 li
131.824 188.889 li
133.589 188.889 li
148.745 188.889 li
179.983 188.889 li
181.606 188.889 li
211.738 188.889 li
228.142 188.889 li
229.739 188.889 li
260.532 188.889 li
260.532 191.474 li
66.0686 191.474 li
f
77.1258 188.889 mo
77.1258 141.951 li
260.532 141.951 li
260.532 148.801 li
229.739 148.801 li
228.142 148.801 li
181.606 148.801 li
179.983 148.801 li
133.589 148.801 li
131.824 148.801 li
83.6653 148.801 li
83.6653 154.731 li
83.6653 188.889 li
77.1258 188.889 li
.921569 .835294 .741176 rgb
f
83.6653 148.801 mo
83.6653 154.731 li
83.6653 188.889 li
131.824 188.889 li
131.824 154.731 li
131.824 148.801 li
83.6653 148.801 li
.772549 .654902 .560784 rgb
f
228.142 148.801 mo
229.739 148.801 li
229.739 154.731 li
229.739 188.889 li
228.142 188.889 li
228.142 154.731 li
228.142 148.801 li
.921569 .835294 .741176 rgb
f
131.824 148.801 mo
133.589 148.801 li
133.589 154.731 li
133.589 188.889 li
131.824 188.889 li
131.824 154.731 li
131.824 148.801 li
f
133.589 154.731 mo
133.589 188.889 li
179.983 188.889 li
179.983 159.94 li
179.983 154.731 li
179.983 148.801 li
133.589 148.801 li
133.589 154.731 li
.521569 .435294 .592157 rgb
f
181.606 148.801 mo
181.606 154.731 li
181.606 159.94 li
181.606 188.889 li
228.142 188.889 li
228.142 154.731 li
228.142 148.801 li
181.606 148.801 li
f
267.025 148.801 mo
267.025 154.731 li
267.025 156.946 li
273.952 156.946 li
273.952 180.05 li
267.025 180.05 li
267.025 188.889 li
276.302 188.889 li
276.302 154.731 li
276.302 148.801 li
267.025 148.801 li
.772549 .654902 .560784 rgb
f
229.739 154.731 mo
229.739 188.889 li
260.532 188.889 li
260.532 180.05 li
231.766 180.05 li
231.766 156.946 li
260.532 156.946 li
260.532 154.731 li
260.532 148.801 li
229.739 148.801 li
229.739 154.731 li
f
158.711 188.889 mo
158.711 148.801 li
179.983 148.801 li
179.983 188.889 li
158.711 188.889 li
.392157 .329412 .447059 rgb
f
202.126 148.801 mo
202.126 188.889 li
181.606 188.889 li
181.606 148.801 li
202.126 148.801 li
f
200.554 151.871 mo
200.554 175.226 li
183.178 175.226 li
183.178 151.871 li
200.554 151.871 li
.00392157 .223529 .360784 rgb
f
225.394 148.801 mo
225.394 188.889 li
204.875 188.889 li
204.875 148.801 li
225.394 148.801 li
.392157 .329412 .447059 rgb
f
223.822 151.871 mo
223.822 175.226 li
206.446 175.226 li
206.446 151.871 li
223.822 151.871 li
.00392157 .223529 .360784 rgb
f
160.887 151.871 mo
160.887 175.226 li
178.263 175.226 li
178.263 151.871 li
160.887 151.871 li
f
135.514 188.889 mo
135.514 148.801 li
156.786 148.801 li
156.786 188.889 li
135.514 188.889 li
.392157 .329412 .447059 rgb
f
137.69 151.871 mo
137.69 175.226 li
155.067 175.226 li
155.067 151.871 li
137.69 151.871 li
.00392157 .223529 .360784 rgb
f
231.766 180.05 mo
231.766 151.871 li
260.532 151.871 li
260.532 180.05 li
231.766 180.05 li
1 1 1 rgb
f
267.025 151.871 mo
273.952 151.871 li
273.952 180.05 li
267.025 180.05 li
267.025 151.871 li
f
82.9266 52.3489 mo
82.9266 38.6893 li
285.59 38.6893 li
288.114 38.6893 li
288.114 52.3489 li
285.756 52.3489 li
82.9266 52.3489 li
.996078 .886275 .843137 rgb
f
106.369 41.2933 mo
108.068 41.3031 li
108.068 48.6527 li
106.369 48.6434 li
106.369 41.2933 li
.698039 .270588 .482353 rgb
f
106.369 41.2933 mo
106.369 48.6434 li
93.5609 48.6507 li
93.5609 41.3011 li
94.0897 41.3006 li
106.369 41.2933 li
.984314 .392157 .423529 rgb
f
125.193 41.2933 mo
126.892 41.3031 li
126.892 48.6527 li
125.193 48.6434 li
125.193 41.2933 li
.698039 .270588 .482353 rgb
f
125.193 41.2933 mo
125.193 48.6434 li
112.385 48.6507 li
112.385 41.3011 li
112.913 41.3006 li
125.193 41.2933 li
.984314 .392157 .423529 rgb
f
144.016 41.2933 mo
145.715 41.3031 li
145.715 48.6527 li
144.016 48.6434 li
144.016 41.2933 li
.698039 .270588 .482353 rgb
f
144.016 41.2933 mo
144.016 48.6434 li
131.208 48.6507 li
131.208 41.3011 li
131.737 41.3006 li
144.016 41.2933 li
.984314 .392157 .423529 rgb
f
162.84 41.2933 mo
164.539 41.3031 li
164.539 48.6527 li
162.84 48.6434 li
162.84 41.2933 li
.698039 .270588 .482353 rgb
f
162.84 41.2933 mo
162.84 48.6434 li
150.032 48.6507 li
150.032 41.3011 li
150.56 41.3006 li
162.84 41.2933 li
.984314 .392157 .423529 rgb
f
181.663 41.2933 mo
183.362 41.3031 li
183.362 48.6527 li
181.663 48.6434 li
181.663 41.2933 li
.698039 .270588 .482353 rgb
f
181.663 41.2933 mo
181.663 48.6434 li
168.855 48.6507 li
168.855 41.3011 li
169.384 41.3006 li
181.663 41.2933 li
.984314 .392157 .423529 rgb
f
200.486 41.2933 mo
202.185 41.3031 li
202.185 48.6527 li
200.486 48.6434 li
200.486 41.2933 li
.698039 .270588 .482353 rgb
f
200.486 41.2933 mo
200.486 48.6434 li
187.679 48.6507 li
187.679 41.3011 li
188.207 41.3006 li
200.486 41.2933 li
.984314 .392157 .423529 rgb
f
219.31 41.2933 mo
221.01 41.3031 li
221.01 48.6527 li
219.31 48.6434 li
219.31 41.2933 li
.698039 .270588 .482353 rgb
f
219.31 41.2933 mo
219.31 48.6434 li
206.502 48.6507 li
206.502 41.3011 li
207.031 41.3006 li
219.31 41.2933 li
.984314 .392157 .423529 rgb
f
238.134 41.2933 mo
239.833 41.3031 li
239.833 48.6527 li
238.134 48.6434 li
238.134 41.2933 li
.698039 .270588 .482353 rgb
f
238.134 41.2933 mo
238.134 48.6434 li
225.325 48.6507 li
225.325 41.3011 li
225.854 41.3006 li
238.134 41.2933 li
.984314 .392157 .423529 rgb
f
256.957 41.2933 mo
258.656 41.3031 li
258.656 48.6527 li
256.957 48.6434 li
256.957 41.2933 li
.698039 .270588 .482353 rgb
f
256.957 41.2933 mo
256.957 48.6434 li
244.149 48.6507 li
244.149 41.3011 li
244.678 41.3006 li
256.957 41.2933 li
.984314 .392157 .423529 rgb
f
275.78 41.2933 mo
277.479 41.3031 li
277.479 48.6527 li
275.78 48.6434 li
275.78 41.2933 li
.698039 .270588 .482353 rgb
f
275.78 41.2933 mo
275.78 48.6434 li
262.973 48.6507 li
262.973 41.3011 li
263.501 41.3006 li
275.78 41.2933 li
.984314 .392157 .423529 rgb
f
78.6126 38.6893 mo
78.6126 25.0296 li
285.568 25.0296 li
285.568 38.6893 li
81.1585 38.6893 li
78.6126 38.6893 li
.94902 .843137 .713726 rgb
f
260.532 193.947 mo
260.532 196.476 li
65.2113 196.476 li
65.2113 193.947 li
260.532 193.947 li
.898039 .843137 .792157 rgb
f
260.532 193.947 mo
65.2113 193.947 li
65.2113 191.474 li
66.0686 191.474 li
260.532 191.474 li
260.532 193.947 li
.74902 .701961 .658824 rgb
f
272.083 104.834 mo
271.909 105.263 li
271.635 105.637 li
271.269 105.929 li
270.849 106.103 li
270.402 106.167 li
269.955 106.103 li
269.535 105.929 li
269.17 105.637 li
268.895 105.263 li
268.721 104.834 li
268.667 104.368 li
268.721 103.903 li
268.895 103.464 li
269.17 103.099 li
269.535 102.807 li
269.955 102.633 li
270.402 102.569 li
270.849 102.633 li
271.269 102.807 li
271.635 103.099 li
271.909 103.464 li
272.083 103.903 li
272.146 104.368 li
272.083 104.834 li
272.083 129.125 mo
271.909 129.555 li
271.635 129.929 li
271.269 130.212 li
270.849 130.394 li
270.402 130.459 li
269.955 130.394 li
269.535 130.212 li
269.17 129.929 li
268.895 129.555 li
268.721 129.125 li
268.667 128.659 li
268.721 128.194 li
268.895 127.756 li
269.17 127.381 li
269.535 127.098 li
269.955 126.915 li
270.402 126.86 li
270.849 126.915 li
271.269 127.098 li
271.635 127.381 li
271.909 127.756 li
272.083 128.194 li
272.146 128.659 li
272.083 129.125 li
266.731 117.573 mo
266.129 117.628 li
265.718 117.774 li
265.453 118.003 li
265.315 118.312 li
265.243 119.902 li
265.243 123.299 li
262.458 123.299 li
262.458 114.706 li
265.243 114.706 li
265.188 115.317 li
265.197 115.3 li
265.562 114.916 li
265.991 114.66 li
266.484 114.551 li
266.731 114.551 li
266.731 117.573 li
263.709 129.125 mo
263.535 129.555 li
263.261 129.929 li
262.905 130.212 li
262.485 130.394 li
262.028 130.459 li
261.581 130.394 li
261.161 130.212 li
260.804 129.929 li
260.521 129.555 li
260.348 129.125 li
260.293 128.659 li
260.348 128.194 li
260.521 127.756 li
260.804 127.381 li
261.161 127.098 li
261.581 126.915 li
262.028 126.86 li
262.485 126.915 li
262.905 127.098 li
263.261 127.381 li
263.535 127.756 li
263.709 128.194 li
263.772 128.659 li
263.709 129.125 li
259.06 123.454 mo
258.805 123.454 li
258.055 123.39 li
257.389 123.208 li
256.85 122.925 li
256.439 122.55 li
256.147 122.112 li
255.965 121.637 li
255.864 121.015 li
255.837 120.176 li
255.837 117.674 li
255.91 116.669 li
256.129 115.892 li
256.521 115.327 li
257.096 114.897 li
257.809 114.641 li
258.631 114.551 li
258.887 114.551 li
259.854 114.66 li
260.64 114.971 li
261.224 115.455 li
261.608 116.075 li
261.818 116.906 li
261.882 118.012 li
261.882 119.153 li
258.613 119.153 li
258.613 121.007 li
258.695 121.765 li
258.813 121.884 li
258.878 121.902 li
258.996 121.874 li
259.142 121.71 li
259.243 120.843 li
259.243 119.71 li
261.882 119.71 li
261.882 120.34 li
261.791 121.564 li
261.627 122.012 li
261.334 122.477 li
260.932 122.906 li
260.43 123.208 li
259.818 123.39 li
259.06 123.454 li
255.709 123.299 mo
254.439 123.299 li
253.207 123.217 li
252.859 123.098 li
252.558 122.879 li
252.33 122.587 li
252.211 122.267 li
252.138 120.633 li
252.138 116.276 li
251.591 116.276 li
251.591 114.916 li
252.138 114.916 li
252.138 113.564 li
254.924 113.564 li
254.924 114.916 li
255.608 114.916 li
255.608 116.276 li
254.924 116.276 li
254.924 120.87 li
255.006 121.81 li
255.224 121.884 li
255.709 121.911 li
255.709 123.299 li
255.344 129.125 mo
255.17 129.555 li
254.887 129.929 li
254.531 130.212 li
254.11 130.394 li
253.663 130.459 li
253.207 130.394 li
252.787 130.212 li
252.43 129.929 li
252.156 129.555 li
251.983 129.125 li
251.919 128.659 li
251.983 128.194 li
252.156 127.756 li
252.43 127.381 li
252.787 127.098 li
253.207 126.915 li
253.663 126.86 li
254.11 126.915 li
254.531 127.098 li
254.887 127.381 li
255.17 127.756 li
255.344 128.194 li
255.398 128.659 li
255.344 129.125 li
251.389 123.299 mo
248.677 123.299 li
248.677 122.906 li
248.668 122.933 li
248.33 123.217 li
247.929 123.39 li
247.463 123.454 li
247.207 123.454 li
246.577 123.353 li
245.992 123.061 li
245.746 122.815 li
245.572 122.45 li
245.472 121.974 li
245.435 121.382 li
245.435 120.678 li
245.509 119.865 li
245.727 119.363 li
246.239 118.979 li
247.188 118.551 li
248.147 118.121 li
248.522 117.865 li
248.613 117.153 li
248.513 116.276 li
248.385 116.131 li
248.303 116.102 li
248.229 116.121 li
248.12 116.249 li
248.056 117.135 li
248.056 118.039 li
245.435 118.039 li
245.435 117.464 li
245.49 116.578 li
245.664 115.92 li
245.992 115.418 li
246.55 114.971 li
247.316 114.66 li
248.294 114.551 li
248.54 114.551 li
249.663 114.669 li
250.111 114.815 li
250.476 115.025 li
250.997 115.546 li
251.253 116.176 li
251.352 117.217 li
251.389 118.989 li
251.389 123.299 li
246.97 129.125 mo
246.796 129.555 li
246.522 129.929 li
246.157 130.212 li
245.736 130.394 li
245.289 130.459 li
244.842 130.394 li
244.422 130.212 li
244.056 129.929 li
243.782 129.555 li
243.609 129.125 li
243.545 128.659 li
243.609 128.194 li
243.782 127.756 li
244.056 127.381 li
244.422 127.098 li
244.842 126.915 li
245.289 126.86 li
245.736 126.915 li
246.157 127.098 li
246.522 127.381 li
246.796 127.756 li
246.97 128.194 li
247.024 128.659 li
246.97 129.125 li
242.905 123.39 mo
242.147 123.454 li
241.901 123.454 li
241.143 123.39 li
240.485 123.208 li
239.937 122.925 li
239.527 122.55 li
239.244 122.112 li
239.052 121.637 li
238.961 121.015 li
238.924 120.176 li
238.924 117.674 li
238.997 116.669 li
239.217 115.892 li
239.609 115.327 li
240.184 114.897 li
240.906 114.641 li
241.719 114.551 li
241.974 114.551 li
242.942 114.66 li
243.727 114.971 li
244.312 115.455 li
244.695 116.075 li
244.905 116.906 li
244.978 118.012 li
244.978 119.153 li
241.7 119.153 li
241.7 121.007 li
241.782 121.765 li
241.901 121.884 li
241.965 121.902 li
242.084 121.874 li
242.23 121.71 li
242.33 120.843 li
242.33 119.71 li
244.978 119.71 li
244.978 120.34 li
244.878 121.564 li
244.714 122.012 li
244.422 122.477 li
244.019 122.906 li
243.517 123.208 li
242.905 123.39 li
238.596 104.834 mo
238.422 105.263 li
238.148 105.637 li
237.782 105.929 li
237.372 106.103 li
236.915 106.167 li
236.468 106.103 li
236.048 105.929 li
235.691 105.637 li
235.408 105.263 li
235.234 104.834 li
235.18 104.368 li
235.234 103.903 li
235.408 103.464 li
235.691 103.099 li
236.048 102.807 li
236.468 102.633 li
236.915 102.569 li
237.372 102.633 li
237.782 102.807 li
238.148 103.099 li
238.422 103.464 li
238.596 103.903 li
238.659 104.368 li
238.596 104.834 li
238.596 129.125 mo
238.422 129.555 li
238.148 129.929 li
237.782 130.212 li
237.372 130.394 li
236.915 130.459 li
236.468 130.394 li
236.048 130.212 li
235.691 129.929 li
235.408 129.555 li
235.234 129.125 li
235.18 128.659 li
235.234 128.194 li
235.408 127.756 li
235.691 127.381 li
236.048 127.098 li
236.468 126.915 li
236.915 126.86 li
237.372 126.915 li
237.782 127.098 li
238.148 127.381 li
238.422 127.756 li
238.596 128.194 li
238.659 128.659 li
238.596 129.125 li
235.061 117.172 mo
235.061 123.299 li
232.285 123.299 li
232.285 112.824 li
235.061 112.824 li
235.061 114.979 li
235.152 114.906 li
235.517 114.715 li
235.91 114.597 li
236.331 114.551 li
236.577 114.551 li
237.189 114.641 li
237.71 114.906 li
238.084 115.281 li
238.275 115.71 li
238.386 117.372 li
238.386 123.299 li
235.6 123.299 li
235.6 117.254 li
235.527 116.286 li
235.418 116.131 li
235.335 116.112 li
235.262 116.131 li
235.143 116.295 li
235.061 117.172 li
232.084 123.299 mo
230.814 123.299 li
229.582 123.217 li
229.235 123.098 li
228.933 122.879 li
228.705 122.587 li
228.587 122.267 li
228.513 120.633 li
228.513 116.276 li
227.974 116.276 li
227.974 114.916 li
228.513 114.916 li
228.513 113.564 li
231.299 113.564 li
231.299 114.916 li
231.983 114.916 li
231.983 116.276 li
231.299 116.276 li
231.299 120.87 li
231.381 121.81 li
231.6 121.884 li
232.084 121.911 li
232.084 123.299 li
230.221 129.125 mo
230.048 129.555 li
229.773 129.929 li
229.418 130.212 li
228.998 130.394 li
228.55 130.459 li
228.094 130.394 li
227.674 130.212 li
227.317 129.929 li
227.043 129.555 li
226.86 129.125 li
226.806 128.659 li
226.86 128.194 li
227.043 127.756 li
227.317 127.381 li
227.674 127.098 li
228.094 126.915 li
228.55 126.86 li
228.998 126.915 li
229.418 127.098 li
229.773 127.381 li
230.048 127.756 li
230.221 128.194 li
230.285 128.659 li
230.221 129.125 li
221.856 104.834 mo
221.682 105.263 li
221.399 105.637 li
221.044 105.929 li
220.624 106.103 li
220.176 106.167 li
219.72 106.103 li
219.308 105.929 li
218.943 105.637 li
218.669 105.263 li
218.496 104.834 li
218.431 104.368 li
218.496 103.903 li
218.669 103.464 li
218.943 103.099 li
219.308 102.807 li
219.72 102.633 li
220.176 102.569 li
220.624 102.633 li
221.044 102.807 li
221.399 103.099 li
221.682 103.464 li
221.856 103.903 li
221.911 104.368 li
221.856 104.834 li
221.856 129.125 mo
221.682 129.555 li
221.399 129.929 li
221.044 130.212 li
220.624 130.394 li
220.176 130.459 li
219.72 130.394 li
219.308 130.212 li
218.943 129.929 li
218.669 129.555 li
218.496 129.125 li
218.431 128.659 li
218.496 128.194 li
218.669 127.756 li
218.943 127.381 li
219.308 127.098 li
219.72 126.915 li
220.176 126.86 li
220.624 126.915 li
221.044 127.098 li
221.399 127.381 li
221.682 127.756 li
221.856 128.194 li
221.911 128.659 li
221.856 129.125 li
209.263 127.089 mo
209.035 123.984 li
208.003 123.984 li
207.738 127.089 li
202.724 127.089 li
204.934 109.811 li
211.747 109.811 li
214.231 127.089 li
209.263 127.089 li
202.204 105.637 mo
201.921 105.263 li
201.748 104.834 li
201.692 104.368 li
201.748 103.903 li
201.921 103.464 li
202.204 103.099 li
202.56 102.807 li
202.98 102.633 li
203.428 102.569 li
203.885 102.633 li
204.305 102.807 li
204.661 103.099 li
204.934 103.464 li
205.108 103.903 li
205.172 104.368 li
205.108 104.834 li
204.934 105.263 li
204.661 105.637 li
204.305 105.929 li
203.885 106.103 li
203.428 106.167 li
202.98 106.103 li
202.56 105.929 li
202.204 105.637 li
202.487 127.089 mo
198.168 127.089 li
198.158 119.481 li
197.172 127.089 li
193.949 127.089 li
192.88 119.454 li
192.88 127.089 li
188.552 127.089 li
188.552 109.811 li
194.706 109.811 li
195.218 113.482 li
195.556 115.884 li
196.305 109.811 li
202.487 109.811 li
202.487 127.089 li
188.369 104.834 mo
188.196 105.263 li
187.922 105.637 li
187.556 105.929 li
187.136 106.103 li
186.689 106.167 li
186.232 106.103 li
185.821 105.929 li
185.456 105.637 li
185.182 105.263 li
185.008 104.834 li
184.944 104.368 li
185.008 103.903 li
185.182 103.464 li
185.456 103.099 li
185.821 102.807 li
186.232 102.633 li
186.689 102.569 li
187.136 102.633 li
187.556 102.807 li
187.922 103.099 li
188.196 103.464 li
188.369 103.903 li
188.424 104.368 li
188.369 104.834 li
187.83 127.089 mo
179.766 127.089 li
179.766 109.811 li
187.547 109.811 li
187.547 113.272 li
184.643 113.272 li
184.643 116.551 li
187.355 116.551 li
187.355 119.838 li
184.643 119.838 li
184.643 123.637 li
187.83 123.637 li
187.83 127.089 li
179.182 105.929 mo
178.762 106.103 li
178.314 106.167 li
177.867 106.103 li
177.447 105.929 li
177.082 105.637 li
176.808 105.263 li
176.634 104.834 li
176.579 104.368 li
176.634 103.903 li
176.808 103.464 li
177.082 103.099 li
177.447 102.807 li
177.867 102.633 li
178.314 102.569 li
178.762 102.633 li
179.182 102.807 li
179.547 103.099 li
179.821 103.464 li
179.995 103.903 li
180.059 104.368 li
179.995 104.834 li
179.821 105.263 li
179.547 105.637 li
179.182 105.929 li
178.552 127.089 mo
174.214 127.089 li
172.479 121.071 li
172.479 127.089 li
168.324 127.089 li
168.324 109.811 li
172.479 109.811 li
174.388 115.911 li
174.388 109.811 li
178.552 109.811 li
178.552 127.089 li
168.205 104.368 mo
168.26 103.903 li
168.433 103.464 li
168.717 103.099 li
169.073 102.807 li
169.493 102.633 li
169.94 102.569 li
170.397 102.633 li
170.817 102.807 li
171.173 103.099 li
171.447 103.464 li
171.621 103.903 li
171.684 104.368 li
171.621 104.834 li
171.447 105.263 li
171.173 105.637 li
170.817 105.929 li
170.397 106.103 li
169.94 106.167 li
169.493 106.103 li
169.073 105.929 li
168.717 105.637 li
168.433 105.263 li
168.26 104.834 li
168.205 104.368 li
167.1 127.089 mo
162.233 127.089 li
162.233 109.811 li
167.1 109.811 li
167.1 127.089 li
161.576 106.167 mo
161.119 106.103 li
160.699 105.929 li
160.343 105.637 li
160.069 105.263 li
159.895 104.834 li
159.831 104.368 li
159.895 103.903 li
160.069 103.464 li
160.343 103.099 li
160.699 102.807 li
161.119 102.633 li
161.576 102.569 li
162.023 102.633 li
162.443 102.807 li
162.799 103.099 li
163.082 103.464 li
163.256 103.903 li
163.31 104.368 li
163.256 104.834 li
163.082 105.263 li
162.799 105.637 li
162.443 105.929 li
162.023 106.103 li
161.576 106.167 li
161.201 117.336 mo
156.325 117.336 li
156.325 114.331 li
156.187 112.697 li
155.959 112.45 li
155.849 112.431 li
155.658 112.469 li
155.42 112.769 li
155.274 114.477 li
155.274 122.505 li
155.42 124.148 li
155.649 124.432 li
155.795 124.468 li
155.941 124.432 li
156.179 124.148 li
156.325 122.34 li
156.325 120.167 li
161.201 120.167 li
161.201 120.843 li
161.11 123.135 li
160.836 124.641 li
160.242 125.701 li
159.21 126.614 li
157.813 127.244 li
156.124 127.454 li
155.594 127.454 li
153.85 127.28 li
152.443 126.742 li
151.411 125.892 li
150.8 124.76 li
150.498 123.18 li
150.398 120.952 li
150.398 115.902 li
150.526 113.107 li
150.772 112.185 li
151.265 111.308 li
151.996 110.532 li
152.964 109.948 li
154.133 109.574 li
155.466 109.446 li
155.996 109.446 li
157.749 109.638 li
159.164 110.213 li
160.197 111.08 li
160.808 112.131 li
161.1 113.592 li
161.201 115.692 li
161.201 117.336 li
146.508 104.834 mo
146.334 105.263 li
146.06 105.637 li
145.695 105.929 li
145.275 106.103 li
144.827 106.167 li
144.38 106.103 li
143.96 105.929 li
143.595 105.637 li
143.321 105.263 li
143.147 104.834 li
143.092 104.368 li
143.147 103.903 li
143.321 103.464 li
143.595 103.099 li
143.96 102.807 li
144.38 102.633 li
144.827 102.569 li
145.275 102.633 li
145.695 102.807 li
146.06 103.099 li
146.334 103.464 li
146.508 103.903 li
146.572 104.368 li
146.508 104.834 li
146.508 129.125 mo
146.334 129.555 li
146.06 129.929 li
145.695 130.212 li
145.275 130.394 li
144.827 130.459 li
144.38 130.394 li
143.96 130.212 li
143.595 129.929 li
143.321 129.555 li
143.147 129.125 li
143.092 128.659 li
143.147 128.194 li
143.321 127.756 li
143.595 127.381 li
143.96 127.098 li
144.38 126.915 li
144.827 126.86 li
145.275 126.915 li
145.695 127.098 li
146.06 127.381 li
146.334 127.756 li
146.508 128.194 li
146.572 128.659 li
146.508 129.125 li
138.134 104.834 mo
137.96 105.263 li
137.686 105.637 li
137.33 105.929 li
136.91 106.103 li
136.453 106.167 li
136.006 106.103 li
135.586 105.929 li
135.229 105.637 li
134.946 105.263 li
134.773 104.834 li
134.718 104.368 li
134.773 103.903 li
134.946 103.464 li
135.229 103.099 li
135.586 102.807 li
136.006 102.633 li
136.453 102.569 li
136.91 102.633 li
137.33 102.807 li
137.686 103.099 li
137.96 103.464 li
138.134 103.903 li
138.198 104.368 li
138.134 104.834 li
138.134 129.125 mo
137.96 129.555 li
137.686 129.929 li
137.33 130.212 li
136.91 130.394 li
136.453 130.459 li
136.006 130.394 li
135.586 130.212 li
135.229 129.929 li
134.946 129.555 li
134.773 129.125 li
134.718 128.659 li
134.773 128.194 li
134.946 127.756 li
135.229 127.381 li
135.586 127.098 li
136.006 126.915 li
136.453 126.86 li
136.91 126.915 li
137.33 127.098 li
137.686 127.381 li
137.96 127.756 li
138.134 128.194 li
138.198 128.659 li
138.134 129.125 li
129.887 104.834 mo
129.714 105.263 li
129.44 105.637 li
129.074 105.929 li
128.654 106.103 li
128.207 106.167 li
127.76 106.103 li
127.339 105.929 li
126.974 105.637 li
126.7 105.263 li
126.527 104.834 li
126.472 104.368 li
126.527 103.903 li
126.7 103.464 li
126.974 103.099 li
127.339 102.807 li
127.76 102.633 li
128.207 102.569 li
128.654 102.633 li
129.074 102.807 li
129.44 103.099 li
129.714 103.464 li
129.887 103.903 li
129.951 104.368 li
129.887 104.834 li
129.768 129.125 mo
129.595 129.555 li
129.312 129.929 li
128.956 130.212 li
128.535 130.394 li
128.088 130.459 li
127.632 130.394 li
127.212 130.212 li
126.855 129.929 li
126.581 129.555 li
126.408 129.125 li
126.344 128.659 li
126.408 128.194 li
126.581 127.756 li
126.855 127.381 li
127.212 127.098 li
127.632 126.915 li
128.088 126.86 li
128.535 126.915 li
128.956 127.098 li
129.312 127.381 li
129.595 127.756 li
129.768 128.194 li
129.823 128.659 li
129.768 129.125 li
125.924 123.353 mo
125.166 123.29 li
124.509 123.107 li
123.96 122.824 li
123.559 122.459 li
123.266 122.02 li
123.084 121.536 li
122.983 120.925 li
122.956 120.075 li
122.956 117.573 li
123.029 116.568 li
123.248 115.802 li
123.632 115.226 li
124.207 114.797 li
124.928 114.541 li
125.75 114.459 li
126.034 114.459 li
127.001 114.559 li
127.787 114.87 li
128.38 115.354 li
128.755 115.975 li
128.965 116.806 li
129.038 117.92 li
129.038 119.053 li
125.769 119.053 li
125.769 120.916 li
125.851 121.664 li
125.97 121.792 li
126.015 121.802 li
126.116 121.774 li
126.262 121.609 li
126.353 120.742 li
126.353 119.609 li
129.038 119.609 li
129.038 120.249 li
128.937 121.464 li
128.782 121.911 li
128.49 122.377 li
128.079 122.805 li
127.586 123.107 li
126.965 123.29 li
126.207 123.353 li
125.924 123.353 li
122.408 114.085 mo
119.513 114.085 li
119.513 112.724 li
122.408 112.724 li
122.408 114.085 li
122.408 123.198 mo
119.513 123.198 li
119.513 114.614 li
122.408 114.614 li
122.408 123.198 li
121.394 129.125 mo
121.221 129.555 li
120.947 129.929 li
120.582 130.212 li
120.161 130.394 li
119.714 130.459 li
119.266 130.394 li
118.847 130.212 li
118.481 129.929 li
118.207 129.555 li
118.034 129.125 li
117.97 128.659 li
118.034 128.194 li
118.207 127.756 li
118.481 127.381 li
118.847 127.098 li
119.266 126.915 li
119.714 126.86 li
120.161 126.915 li
120.582 127.098 li
120.947 127.381 li
121.221 127.756 li
121.394 128.194 li
121.449 128.659 li
121.394 129.125 li
113.395 114.614 mo
115.933 114.614 li
116.481 119.436 li
116.892 114.614 li
119.431 114.614 li
118.253 123.198 li
114.664 123.198 li
113.395 114.614 li
113.376 119.728 mo
113.34 120.733 li
113.258 121.427 li
113.084 121.947 li
112.774 122.431 li
112.354 122.843 li
111.833 123.126 li
111.212 123.299 li
110.5 123.353 li
110.217 123.353 li
109.441 123.299 li
108.792 123.162 li
108.281 122.925 li
107.888 122.587 li
107.614 122.157 li
107.431 121.655 li
107.331 120.971 li
107.294 120.012 li
107.294 117.81 li
107.358 116.751 li
107.541 115.948 li
107.897 115.336 li
108.445 114.861 li
109.185 114.559 li
110.107 114.459 li
110.39 114.459 li
111.185 114.523 li
111.851 114.715 li
112.399 115.016 li
112.801 115.399 li
113.075 115.829 li
113.248 116.267 li
113.34 116.834 li
113.376 117.628 li
113.376 119.728 li
113.02 129.125 mo
112.846 129.555 li
112.573 129.929 li
112.207 130.212 li
111.787 130.394 li
111.34 130.459 li
110.892 130.394 li
110.472 130.212 li
110.107 129.929 li
109.833 129.555 li
109.66 129.125 li
109.605 128.659 li
109.66 128.194 li
109.833 127.756 li
110.107 127.381 li
110.472 127.098 li
110.892 126.915 li
111.34 126.86 li
111.787 126.915 li
112.207 127.098 li
112.573 127.381 li
112.846 127.756 li
113.02 128.194 li
113.084 128.659 li
113.02 129.125 li
106.783 123.198 mo
104.043 123.198 li
104.043 117.6 li
103.971 116.24 li
103.852 116.039 li
103.779 116.02 li
103.705 116.039 li
103.578 116.23 li
103.495 117.6 li
103.495 123.198 li
100.765 123.198 li
100.765 117.737 li
100.701 116.23 li
100.592 116.039 li
100.546 116.03 li
100.372 116.112 li
100.244 116.432 li
100.226 117.244 li
100.226 123.198 li
97.4866 123.198 li
97.4866 114.614 li
100.272 114.614 li
100.254 115.025 li
100.263 114.998 li
100.646 114.696 li
101.076 114.513 li
101.569 114.459 li
101.852 114.459 li
102.336 114.513 li
102.756 114.696 li
103.13 114.998 li
103.313 115.244 li
103.505 114.998 li
103.879 114.696 li
104.308 114.513 li
104.774 114.459 li
105.057 114.459 li
105.651 114.532 li
106.126 114.779 li
106.472 115.135 li
106.664 115.573 li
106.756 116.185 li
106.783 117.098 li
106.783 123.198 li
104.646 129.125 mo
104.472 129.555 li
104.199 129.929 li
103.843 130.212 li
103.423 130.394 li
102.966 130.459 li
102.518 130.394 li
102.098 130.212 li
101.742 129.929 li
101.459 129.555 li
101.285 129.125 li
101.231 128.659 li
101.285 128.194 li
101.459 127.756 li
101.742 127.381 li
102.098 127.098 li
102.518 126.915 li
102.966 126.86 li
103.423 126.915 li
103.843 127.098 li
104.199 127.381 li
104.472 127.756 li
104.646 128.194 li
104.71 128.659 li
104.646 129.125 li
96.2811 104.834 mo
96.1077 105.263 li
95.8245 105.637 li
95.4686 105.929 li
95.0481 106.103 li
94.6008 106.167 li
94.1444 106.103 li
93.7245 105.929 li
93.368 105.637 li
93.094 105.263 li
92.9207 104.834 li
92.8568 104.368 li
92.9207 103.903 li
93.094 103.464 li
93.368 103.099 li
93.7245 102.807 li
94.1444 102.633 li
94.6008 102.569 li
95.0481 102.633 li
95.4686 102.807 li
95.8245 103.099 li
96.1077 103.464 li
96.2811 103.903 li
96.3358 104.368 li
96.2811 104.834 li
96.2811 129.125 mo
96.1077 129.555 li
95.8245 129.929 li
95.4686 130.212 li
95.0481 130.394 li
94.6008 130.459 li
94.1444 130.394 li
93.7245 130.212 li
93.368 129.929 li
93.094 129.555 li
92.9207 129.125 li
92.8568 128.659 li
92.9207 128.194 li
93.094 127.756 li
93.368 127.381 li
93.7245 127.098 li
94.1444 126.915 li
94.6008 126.86 li
95.0481 126.915 li
95.4686 127.098 li
95.8245 127.381 li
96.1077 127.756 li
96.2811 128.194 li
96.3358 128.659 li
96.2811 129.125 li
87.907 104.834 mo
87.7337 105.263 li
87.4598 105.637 li
87.0946 105.929 li
86.6742 106.103 li
86.2269 106.167 li
85.7792 106.103 li
85.3591 105.929 li
84.9939 105.637 li
84.7201 105.263 li
84.5467 104.834 li
84.4828 104.368 li
84.5467 103.903 li
84.7201 103.464 li
84.9939 103.099 li
85.3591 102.807 li
85.7792 102.633 li
86.2269 102.569 li
86.6742 102.633 li
87.0946 102.807 li
87.4598 103.099 li
87.7337 103.464 li
87.907 103.903 li
87.9617 104.368 li
87.907 104.834 li
87.907 129.125 mo
87.7337 129.555 li
87.4598 129.929 li
87.0946 130.212 li
86.6742 130.394 li
86.2269 130.459 li
85.7792 130.394 li
85.3591 130.212 li
84.9939 129.929 li
84.7201 129.555 li
84.5467 129.125 li
84.4828 128.659 li
84.5467 128.194 li
84.7201 127.756 li
84.9939 127.381 li
85.3591 127.098 li
85.7792 126.915 li
86.2269 126.86 li
86.6742 126.915 li
87.0946 127.098 li
87.4598 127.381 li
87.7337 127.756 li
87.907 128.194 li
87.9617 128.659 li
87.907 129.125 li
101.413 103.903 mo
101.587 103.464 li
101.861 103.099 li
102.226 102.807 li
102.646 102.633 li
103.094 102.569 li
103.541 102.633 li
103.961 102.807 li
104.327 103.099 li
104.6 103.464 li
104.774 103.903 li
104.829 104.368 li
104.774 104.834 li
104.6 105.263 li
104.327 105.637 li
103.961 105.929 li
103.541 106.103 li
103.094 106.167 li
102.646 106.103 li
102.226 105.929 li
101.861 105.637 li
101.587 105.263 li
101.413 104.834 li
101.349 104.368 li
101.413 103.903 li
109.787 103.903 mo
109.961 103.464 li
110.235 103.099 li
110.591 102.807 li
111.011 102.633 li
111.468 102.569 li
111.915 102.633 li
112.335 102.807 li
112.692 103.099 li
112.974 103.464 li
113.148 103.903 li
113.203 104.368 li
113.148 104.834 li
112.974 105.263 li
112.692 105.637 li
112.335 105.929 li
111.915 106.103 li
111.468 106.167 li
111.011 106.103 li
110.591 105.929 li
110.235 105.637 li
109.961 105.263 li
109.787 104.834 li
109.723 104.368 li
109.787 103.903 li
118.153 103.903 mo
118.326 103.464 li
118.609 103.099 li
118.965 102.807 li
119.386 102.633 li
119.833 102.569 li
120.289 102.633 li
120.709 102.807 li
121.066 103.099 li
121.34 103.464 li
121.513 103.903 li
121.577 104.368 li
121.513 104.834 li
121.34 105.263 li
121.066 105.637 li
120.709 105.929 li
120.289 106.103 li
119.833 106.167 li
119.386 106.103 li
118.965 105.929 li
118.609 105.637 li
118.326 105.263 li
118.153 104.834 li
118.097 104.368 li
118.153 103.903 li
151.521 103.903 mo
151.695 103.464 li
151.969 103.099 li
152.334 102.807 li
152.754 102.633 li
153.201 102.569 li
153.649 102.633 li
154.069 102.807 li
154.434 103.099 li
154.708 103.464 li
154.882 103.903 li
154.936 104.368 li
154.882 104.834 li
154.708 105.263 li
154.434 105.637 li
154.069 105.929 li
153.649 106.103 li
153.201 106.167 li
152.754 106.103 li
152.334 105.929 li
151.969 105.637 li
151.695 105.263 li
151.521 104.834 li
151.457 104.368 li
151.521 103.903 li
193.383 103.903 mo
193.556 103.464 li
193.83 103.099 li
194.186 102.807 li
194.606 102.633 li
195.063 102.569 li
195.51 102.633 li
195.93 102.807 li
196.286 103.099 li
196.57 103.464 li
196.743 103.903 li
196.798 104.368 li
196.743 104.834 li
196.57 105.263 li
196.286 105.637 li
195.93 105.929 li
195.51 106.103 li
195.063 106.167 li
194.606 106.103 li
194.186 105.929 li
193.83 105.637 li
193.556 105.263 li
193.383 104.834 li
193.319 104.368 li
193.383 103.903 li
210.122 103.903 mo
210.295 103.464 li
210.569 103.099 li
210.934 102.807 li
211.354 102.633 li
211.802 102.569 li
212.249 102.633 li
212.67 102.807 li
213.035 103.099 li
213.308 103.464 li
213.482 103.903 li
213.546 104.368 li
213.482 104.834 li
213.308 105.263 li
213.035 105.637 li
212.67 105.929 li
212.249 106.103 li
211.802 106.167 li
211.354 106.103 li
210.934 105.929 li
210.569 105.637 li
210.295 105.263 li
210.122 104.834 li
210.066 104.368 li
210.122 103.903 li
226.86 103.903 mo
227.043 103.464 li
227.317 103.099 li
227.674 102.807 li
228.094 102.633 li
228.55 102.569 li
228.998 102.633 li
229.418 102.807 li
229.773 103.099 li
230.048 103.464 li
230.221 103.903 li
230.285 104.368 li
230.221 104.834 li
230.048 105.263 li
229.773 105.637 li
229.418 105.929 li
228.998 106.103 li
228.55 106.167 li
228.094 106.103 li
227.674 105.929 li
227.317 105.637 li
227.043 105.263 li
226.86 104.834 li
226.806 104.368 li
226.86 103.903 li
243.609 103.903 mo
243.782 103.464 li
244.056 103.099 li
244.422 102.807 li
244.842 102.633 li
245.289 102.569 li
245.736 102.633 li
246.157 102.807 li
246.522 103.099 li
246.796 103.464 li
246.97 103.903 li
247.024 104.368 li
246.97 104.834 li
246.796 105.263 li
246.522 105.637 li
246.157 105.929 li
245.736 106.103 li
245.289 106.167 li
244.842 106.103 li
244.422 105.929 li
244.056 105.637 li
243.782 105.263 li
243.609 104.834 li
243.545 104.368 li
243.609 103.903 li
251.983 103.903 mo
252.156 103.464 li
252.43 103.099 li
252.787 102.807 li
253.207 102.633 li
253.663 102.569 li
254.11 102.633 li
254.531 102.807 li
254.887 103.099 li
255.17 103.464 li
255.344 103.903 li
255.398 104.368 li
255.344 104.834 li
255.17 105.263 li
254.887 105.637 li
254.531 105.929 li
254.11 106.103 li
253.663 106.167 li
253.207 106.103 li
252.787 105.929 li
252.43 105.637 li
252.156 105.263 li
251.983 104.834 li
251.919 104.368 li
251.983 103.903 li
260.348 103.903 mo
260.521 103.464 li
260.804 103.099 li
261.161 102.807 li
261.581 102.633 li
262.028 102.569 li
262.485 102.633 li
262.905 102.807 li
263.261 103.099 li
263.535 103.464 li
263.709 103.903 li
263.772 104.368 li
263.709 104.834 li
263.535 105.263 li
263.261 105.637 li
262.905 105.929 li
262.485 106.103 li
262.028 106.167 li
261.581 106.103 li
261.161 105.929 li
260.804 105.637 li
260.521 105.263 li
260.348 104.834 li
260.293 104.368 li
260.348 103.903 li
277.269 103.464 mo
277.544 103.099 li
277.909 102.807 li
278.329 102.633 li
278.776 102.569 li
279.223 102.633 li
279.297 102.66 li
279.297 98.7337 li
80.72 98.7337 li
80.72 132.432 li
279.297 132.432 li
279.297 130.367 li
279.223 130.394 li
278.776 130.459 li
278.329 130.394 li
277.909 130.212 li
277.544 129.929 li
277.269 129.555 li
277.096 129.125 li
277.032 128.659 li
277.096 128.194 li
277.269 127.756 li
277.544 127.381 li
277.909 127.098 li
278.329 126.915 li
278.776 126.86 li
279.223 126.915 li
279.297 126.952 li
279.297 106.076 li
279.223 106.103 li
278.776 106.167 li
278.329 106.103 li
277.909 105.929 li
277.544 105.637 li
277.269 105.263 li
277.096 104.834 li
277.032 104.368 li
277.096 103.903 li
277.269 103.464 li
.984314 .392157 .423529 rgb
f
103.313 115.244 mo
103.167 115.428 li
102.847 114.998 li
102.473 114.696 li
102.053 114.514 li
101.569 114.459 li
101.852 114.459 li
102.336 114.514 li
102.756 114.696 li
103.13 114.998 li
103.313 115.244 li
cp
.509804 .203922 .235294 rgb
f
106.783 117.098 mo
106.783 123.198 li
106.5 123.198 li
106.5 117.098 li
106.472 116.185 li
106.381 115.573 li
106.18 115.135 li
105.843 114.779 li
105.358 114.532 li
104.774 114.459 li
105.057 114.459 li
105.651 114.532 li
106.126 114.779 li
106.472 115.135 li
106.664 115.573 li
106.756 116.185 li
106.783 117.098 li
cp
f
103.779 116.02 mo
103.705 116.039 li
103.578 116.23 li
103.495 117.6 li
103.495 123.198 li
103.212 123.198 li
103.212 117.6 li
103.295 116.23 li
103.423 116.039 li
103.641 115.975 li
103.779 116.02 li
cp
f
100.546 116.03 mo
100.372 116.112 li
100.244 116.431 li
100.226 117.244 li
100.226 123.198 li
99.9432 123.198 li
99.9432 117.244 li
99.9525 116.431 li
100.089 116.112 li
100.372 115.975 li
100.546 116.03 li
cp
f
110.345 121.792 mo
110.189 121.829 li
110.007 121.783 li
109.897 121.646 li
109.824 120.851 li
109.824 116.979 li
109.897 116.148 li
110.007 116.02 li
110.199 115.975 li
110.335 116.012 li
110.29 116.02 li
110.18 116.148 li
110.107 116.979 li
110.107 120.851 li
110.18 121.646 li
110.29 121.783 li
110.345 121.792 li
cp
f
113.376 117.628 mo
113.376 119.728 li
113.34 120.733 li
113.258 121.427 li
113.084 121.947 li
112.774 122.431 li
112.354 122.843 li
111.833 123.126 li
111.212 123.299 li
110.5 123.353 li
110.217 123.353 li
110.92 123.299 li
111.541 123.126 li
112.071 122.843 li
112.491 122.431 li
112.801 121.947 li
112.974 121.427 li
113.057 120.733 li
113.084 119.728 li
113.084 117.628 li
113.057 116.834 li
112.966 116.267 li
112.792 115.829 li
112.509 115.399 li
112.107 115.016 li
111.568 114.715 li
110.902 114.523 li
110.107 114.459 li
110.39 114.459 li
111.185 114.523 li
111.851 114.715 li
112.399 115.016 li
112.801 115.399 li
113.075 115.829 li
113.248 116.267 li
113.34 116.834 li
113.376 117.628 li
cp
f
129.038 119.609 mo
129.038 120.249 li
128.937 121.464 li
128.782 121.911 li
128.49 122.377 li
128.079 122.806 li
127.586 123.107 li
126.965 123.29 li
126.207 123.353 li
125.924 123.353 li
126.682 123.29 li
127.294 123.107 li
127.796 122.806 li
128.198 122.377 li
128.49 121.911 li
128.654 121.464 li
128.755 120.249 li
128.755 119.609 li
129.038 119.609 li
cp
f
126.015 121.802 mo
125.878 121.829 li
125.677 121.792 li
125.558 121.664 li
125.476 120.916 li
125.476 119.053 li
125.769 119.053 li
125.769 120.916 li
125.851 121.664 li
125.97 121.792 li
126.015 121.802 li
cp
f
125.988 116.012 mo
125.942 116.02 li
125.832 116.139 li
125.769 117.034 li
125.769 117.655 li
125.476 117.655 li
125.476 117.034 li
125.54 116.139 li
125.659 116.02 li
125.869 115.975 li
125.988 116.012 li
cp
f
129.038 117.92 mo
129.038 119.053 li
128.755 119.053 li
128.755 117.92 li
128.682 116.806 li
128.471 115.975 li
128.088 115.354 li
127.504 114.87 li
126.719 114.559 li
125.75 114.459 li
126.034 114.459 li
127.001 114.559 li
127.787 114.87 li
128.38 115.354 li
128.755 115.975 li
128.965 116.806 li
129.038 117.92 li
cp
f
266.731 117.573 mo
266.129 117.628 li
265.718 117.774 li
265.453 118.003 li
265.315 118.312 li
265.243 119.902 li
265.243 123.299 li
264.987 123.299 li
264.987 119.902 li
265.06 118.312 li
265.197 118.003 li
265.462 117.774 li
265.882 117.628 li
266.484 117.573 li
266.731 117.573 li
cp
f
248.677 122.532 mo
248.677 122.906 li
248.668 122.933 li
248.33 123.217 li
247.929 123.39 li
247.463 123.454 li
247.207 123.454 li
247.681 123.39 li
248.084 123.217 li
248.412 122.933 li
248.677 122.532 li
cp
f
258.85 116.102 mo
258.786 116.112 li
258.677 116.24 li
258.613 117.126 li
258.613 117.756 li
258.366 117.756 li
258.366 117.126 li
258.421 116.24 li
258.54 116.112 li
258.75 116.075 li
258.85 116.102 li
cp
f
261.882 118.012 mo
261.882 119.153 li
261.636 119.153 li
261.636 118.012 li
261.562 116.906 li
261.352 116.075 li
260.978 115.455 li
260.385 114.971 li
259.599 114.66 li
258.631 114.551 li
258.887 114.551 li
259.854 114.66 li
260.64 114.971 li
261.224 115.455 li
261.608 116.075 li
261.818 116.906 li
261.882 118.012 li
cp
f
261.882 119.71 mo
261.882 120.34 li
261.791 121.564 li
261.627 122.012 li
261.334 122.477 li
260.932 122.906 li
260.43 123.208 li
259.818 123.39 li
259.06 123.454 li
258.805 123.454 li
259.562 123.39 li
260.183 123.208 li
260.677 122.906 li
261.088 122.477 li
261.38 122.012 li
261.535 121.564 li
261.636 120.34 li
261.636 119.71 li
261.882 119.71 li
cp
f
258.878 121.902 mo
258.759 121.93 li
258.567 121.884 li
258.448 121.764 li
258.366 121.007 li
258.366 119.153 li
258.613 119.153 li
258.613 121.007 li
258.695 121.764 li
258.813 121.884 li
258.878 121.902 li
cp
f
255.709 121.911 mo
255.462 121.911 li
254.978 121.884 li
254.759 121.81 li
254.668 120.87 li
254.668 116.276 li
254.924 116.276 li
254.924 120.87 li
255.006 121.81 li
255.224 121.884 li
255.709 121.911 li
cp
f
255.462 121.911 mo
255.462 123.299 li
254.439 123.299 li
253.207 123.217 li
252.859 123.098 li
252.558 122.879 li
252.33 122.587 li
252.211 122.267 li
252.138 120.633 li
252.138 116.276 li
251.591 116.276 li
251.591 114.916 li
252.138 114.916 li
252.138 113.564 li
254.668 113.564 li
254.668 114.916 li
255.352 114.916 li
255.352 116.276 li
254.668 116.276 li
254.668 120.87 li
254.759 121.81 li
254.978 121.884 li
255.462 121.911 li
cp
.627451 .25098 .305882 rgb
f
251.389 118.989 mo
251.389 123.299 li
251.134 123.299 li
251.134 118.989 li
251.106 117.217 li
251.006 116.176 li
250.741 115.546 li
250.221 115.025 li
249.855 114.815 li
249.417 114.669 li
248.294 114.551 li
248.54 114.551 li
249.663 114.669 li
250.111 114.815 li
250.476 115.025 li
250.997 115.546 li
251.253 116.176 li
251.352 117.217 li
251.389 118.989 li
cp
.509804 .203922 .235294 rgb
f
248.613 119.217 mo
248.613 119.436 li
248.385 119.637 li
248.156 119.984 li
248.056 120.879 li
248.147 121.737 li
248.266 121.884 li
248.367 121.902 li
248.229 121.93 li
248.019 121.884 li
247.891 121.737 li
247.809 120.879 li
247.91 119.984 li
248.129 119.637 li
248.613 119.217 li
cp
f
248.303 116.102 mo
248.229 116.121 li
248.12 116.249 li
248.056 117.135 li
248.056 118.039 li
247.809 118.039 li
247.809 117.135 li
247.874 116.249 li
247.983 116.121 li
248.193 116.075 li
248.303 116.102 li
cp
f
244.978 119.71 mo
244.978 120.34 li
244.878 121.564 li
244.714 122.012 li
244.422 122.477 li
244.019 122.906 li
243.517 123.208 li
242.905 123.39 li
242.147 123.454 li
241.901 123.454 li
242.65 123.39 li
243.271 123.208 li
243.773 122.906 li
244.175 122.477 li
244.468 122.012 li
244.632 121.564 li
244.722 120.34 li
244.722 119.71 li
244.978 119.71 li
cp
f
244.978 118.012 mo
244.978 119.153 li
244.722 119.153 li
244.722 118.012 li
244.659 116.906 li
244.449 116.075 li
244.065 115.455 li
243.471 114.971 li
242.695 114.66 li
241.719 114.551 li
241.974 114.551 li
242.942 114.66 li
243.727 114.971 li
244.312 115.455 li
244.695 116.075 li
244.905 116.906 li
244.978 118.012 li
cp
f
241.965 121.902 mo
241.846 121.93 li
241.654 121.884 li
241.536 121.764 li
241.454 121.007 li
241.454 119.153 li
241.7 119.153 li
241.7 121.007 li
241.782 121.764 li
241.901 121.884 li
241.965 121.902 li
cp
f
241.947 116.102 mo
241.883 116.112 li
241.764 116.24 li
241.7 117.126 li
241.7 117.756 li
241.454 117.756 li
241.454 117.126 li
241.517 116.24 li
241.627 116.112 li
241.837 116.075 li
241.947 116.102 li
cp
f
238.386 117.372 mo
238.386 123.299 li
238.13 123.299 li
238.13 117.372 li
238.029 115.71 li
237.838 115.281 li
237.454 114.906 li
236.942 114.641 li
236.331 114.551 li
236.577 114.551 li
237.189 114.641 li
237.71 114.906 li
238.084 115.281 li
238.275 115.71 li
238.386 117.372 li
cp
f
235.335 116.112 mo
235.263 116.131 li
235.143 116.295 li
235.061 117.172 li
235.061 123.299 li
234.814 123.299 li
234.814 117.172 li
234.897 116.295 li
235.015 116.131 li
235.207 116.075 li
235.335 116.112 li
cp
f
232.084 121.911 mo
231.838 121.911 li
231.353 121.884 li
231.135 121.81 li
231.053 120.87 li
231.053 116.276 li
231.299 116.276 li
231.299 120.87 li
231.381 121.81 li
231.6 121.884 li
232.084 121.911 li
cp
f
231.299 113.564 mo
231.299 114.916 li
231.053 114.916 li
231.053 113.564 li
231.299 113.564 li
cp
f
231.983 114.916 mo
231.983 116.276 li
231.728 116.276 li
231.728 114.916 li
231.983 114.916 li
cp
f
161.201 120.167 mo
161.201 120.843 li
161.11 123.135 li
160.836 124.641 li
160.242 125.701 li
159.21 126.614 li
157.813 127.244 li
156.124 127.454 li
155.594 127.454 li
157.284 127.244 li
158.68 126.614 li
159.713 125.701 li
160.306 124.641 li
160.58 123.135 li
160.671 120.843 li
160.671 120.167 li
161.201 120.167 li
cp
f
155.649 124.431 mo
155.795 124.468 li
155.539 124.532 li
155.128 124.431 li
154.891 124.148 li
154.744 122.505 li
154.744 114.477 li
154.891 112.769 li
155.128 112.469 li
155.576 112.377 li
155.849 112.431 li
155.658 112.469 li
155.42 112.769 li
155.274 114.477 li
155.274 122.505 li
155.42 124.148 li
155.649 124.431 li
cp
f
161.201 115.692 mo
161.201 117.336 li
160.671 117.336 li
160.671 115.692 li
160.571 113.592 li
160.279 112.131 li
159.676 111.08 li
158.635 110.213 li
157.22 109.638 li
155.466 109.446 li
155.996 109.446 li
157.749 109.638 li
159.164 110.213 li
160.197 111.08 li
160.808 112.131 li
161.1 113.592 li
161.201 115.692 li
cp
f
80.7225 98.7327 mo
80.7225 132.432 li
79.5355 132.432 li
79.5355 98.7327 li
80.7225 98.7327 li
.54902 .392157 .254902 rgb
f
277.095 103.902 mo
277.269 103.468 li
277.546 103.096 li
277.906 102.81 li
278.326 102.63 li
278.776 102.569 li
279.226 102.63 li
279.298 102.661 li
279.298 106.075 li
279.226 106.105 li
278.776 106.166 li
278.326 106.105 li
277.906 105.926 li
277.546 105.639 li
277.269 105.267 li
277.095 104.833 li
277.036 104.368 li
277.095 103.902 li
1 .956863 .878431 rgb
f
277.546 129.929 mo
277.269 129.556 li
277.096 129.122 li
277.036 128.656 li
277.096 128.19 li
277.269 127.757 li
277.546 127.385 li
277.906 127.098 li
278.326 126.919 li
278.776 126.857 li
279.226 126.919 li
279.298 126.949 li
279.298 130.363 li
279.226 130.393 li
278.776 130.455 li
278.326 130.393 li
277.906 130.214 li
277.546 129.929 li
cp
f
84.0135 55.5135 mo
101.414 55.5135 li
101.414 91.8495 li
84.0135 91.8495 li
84.0135 55.5135 li
.521569 .435294 .592157 rgb
f
84.0135 55.5135 mo
84.0135 91.8495 li
81.8396 91.8495 li
81.8396 55.5135 li
84.0135 55.5135 li
.54902 .392157 .254902 rgb
f
197.619 55.5135 mo
215.02 55.5135 li
215.02 91.8495 li
197.619 91.8495 li
197.619 55.5135 li
.521569 .435294 .592157 rgb
f
197.619 55.5135 mo
197.619 91.8495 li
195.445 91.8495 li
195.445 55.5135 li
197.619 55.5135 li
.54902 .392157 .254902 rgb
f
220.34 55.5135 mo
220.34 91.8495 li
218.166 91.8495 li
218.166 55.5135 li
220.34 55.5135 li
f
220.34 91.8495 mo
220.34 55.5135 li
237.741 55.5135 li
237.741 91.8495 li
220.34 91.8495 li
.521569 .435294 .592157 rgb
f
243.061 55.5135 mo
260.462 55.5135 li
260.462 91.8495 li
243.061 91.8495 li
243.061 55.5135 li
f
243.061 55.5135 mo
243.061 91.8495 li
240.887 91.8495 li
240.887 55.5135 li
243.061 55.5135 li
.54902 .392157 .254902 rgb
f
265.782 55.5135 mo
283.183 55.513 li
283.183 91.8495 li
265.782 91.8495 li
265.782 55.5135 li
.521569 .435294 .592157 rgb
f
265.782 55.5135 mo
265.782 91.8495 li
263.608 91.8495 li
263.608 55.513 li
265.782 55.5135 li
.54902 .392157 .254902 rgb
f
85.7577 180.637 mo
85.7577 151.766 li
106.457 151.766 li
106.457 180.637 li
85.7577 180.637 li
1 1 1 rgb
f
103.779 156.946 mo
87.9617 156.946 li
87.9617 154.364 li
103.779 154.364 li
103.779 156.946 li
.945098 .443137 .164706 rgb
f
103.779 177.501 mo
87.9617 177.501 li
87.9617 158.649 li
103.779 158.649 li
103.779 177.501 li
.941176 .768627 .0980392 rgb
f
102.441 175.906 mo
89.2996 175.906 li
89.2996 160.244 li
102.441 160.244 li
102.441 175.906 li
.305882 .729412 .435294 rgb
f
101.317 163.425 mo
90.4231 163.425 li
90.4231 161.583 li
101.317 161.583 li
101.317 163.425 li
.176471 .584314 .74902 rgb
f
101.317 166.341 mo
90.4231 166.341 li
90.4231 164.499 li
101.317 164.499 li
101.317 166.341 li
f
101.317 169.256 mo
90.4231 169.256 li
90.4231 167.415 li
101.317 167.415 li
101.317 169.256 li
f
101.317 172.172 mo
90.4231 172.172 li
90.4231 170.331 li
101.317 170.331 li
101.317 172.172 li
f
101.317 175.088 mo
90.4232 175.088 li
90.4232 173.246 li
101.317 173.246 li
101.317 175.088 li
cp
f
108.757 180.637 mo
108.757 151.766 li
129.456 151.766 li
129.456 180.637 li
108.757 180.637 li
1 1 1 rgb
f
128.085 157.943 mo
109.824 157.943 li
109.824 153.072 li
128.085 153.072 li
128.085 157.943 li
.541176 .776471 .74902 rgb
f
128.085 163.688 mo
109.824 163.688 li
109.824 158.818 li
128.085 158.818 li
128.085 163.688 li
.486275 .588235 .658824 rgb
f
128.085 169.256 mo
109.824 169.256 li
109.824 164.386 li
128.085 164.386 li
128.085 169.256 li
.94902 .54902 .505882 rgb
f
128.085 174.607 mo
109.824 174.607 li
109.824 169.737 li
128.085 169.737 li
128.085 174.607 li
.941176 .898039 .839216 rgb
f
128.085 180.016 mo
109.824 180.016 li
109.824 175.146 li
128.085 175.146 li
128.085 180.016 li
.00392157 .223529 .360784 rgb
f
87.9656 104.368 mo
87.9066 104.833 li
87.7328 105.267 li
87.4563 105.639 li
87.096 105.926 li
86.6765 106.105 li
86.2259 106.166 li
85.7757 106.105 li
85.3563 105.926 li
84.9959 105.639 li
84.7196 105.267 li
84.5457 104.833 li
84.4866 104.368 li
84.5457 103.902 li
84.7196 103.468 li
84.9959 103.096 li
85.3563 102.81 li
85.7757 102.63 li
86.2259 102.569 li
86.6765 102.63 li
87.096 102.81 li
87.4563 103.096 li
87.7328 103.468 li
87.9066 103.902 li
87.9656 104.368 li
1 .956863 .878431 rgb
f
95.828 105.639 mo
95.4676 105.926 li
95.0481 106.105 li
94.598 106.166 li
94.1477 106.105 li
93.7278 105.926 li
93.368 105.639 li
93.0911 105.267 li
92.9173 104.833 li
92.8582 104.368 li
92.9173 103.902 li
93.0911 103.468 li
93.368 103.096 li
93.7278 102.81 li
94.1477 102.63 li
94.598 102.569 li
95.0481 102.63 li
95.4676 102.81 li
95.828 103.096 li
96.1043 103.468 li
96.2781 103.902 li
96.3373 104.368 li
96.2781 104.833 li
96.1043 105.267 li
95.828 105.639 li
f
101.23 104.368 mo
101.289 103.902 li
101.463 103.468 li
101.74 103.096 li
102.1 102.81 li
102.519 102.63 li
102.97 102.569 li
103.42 102.63 li
103.839 102.81 li
104.199 103.096 li
104.476 103.468 li
104.65 103.902 li
104.709 104.368 li
104.65 104.833 li
104.476 105.267 li
104.199 105.639 li
103.839 105.926 li
103.42 106.105 li
102.97 106.166 li
102.519 106.105 li
102.1 105.926 li
101.74 105.639 li
101.463 105.267 li
101.289 104.833 li
101.23 104.368 li
f
118.843 105.926 mo
118.483 105.639 li
118.206 105.267 li
118.033 104.833 li
117.973 104.368 li
118.033 103.902 li
118.206 103.468 li
118.483 103.096 li
118.843 102.81 li
119.263 102.63 li
119.713 102.569 li
120.163 102.63 li
120.583 102.81 li
120.943 103.096 li
121.22 103.468 li
121.393 103.902 li
121.452 104.368 li
121.393 104.833 li
121.22 105.267 li
120.943 105.639 li
120.583 105.926 li
120.163 106.105 li
119.713 106.166 li
119.263 106.105 li
118.843 105.926 li
f
135.226 105.639 mo
134.95 105.267 li
134.776 104.833 li
134.717 104.368 li
134.776 103.902 li
134.95 103.468 li
135.226 103.096 li
135.587 102.81 li
136.006 102.63 li
136.456 102.569 li
136.907 102.63 li
137.326 102.81 li
137.686 103.096 li
137.963 103.468 li
138.137 103.902 li
138.196 104.368 li
138.137 104.833 li
137.963 105.267 li
137.686 105.639 li
137.326 105.926 li
136.907 106.105 li
136.456 106.166 li
136.006 106.105 li
135.587 105.926 li
135.226 105.639 li
f
144.828 106.166 mo
144.378 106.105 li
143.958 105.926 li
143.598 105.639 li
143.322 105.267 li
143.148 104.833 li
143.089 104.368 li
143.148 103.902 li
143.322 103.468 li
143.598 103.096 li
143.958 102.81 li
144.378 102.63 li
144.828 102.569 li
145.279 102.63 li
145.698 102.81 li
146.058 103.096 li
146.335 103.468 li
146.509 103.902 li
146.568 104.368 li
146.509 104.833 li
146.335 105.267 li
146.058 105.639 li
145.698 105.926 li
145.279 106.105 li
144.828 106.166 li
f
152.33 105.926 mo
151.97 105.639 li
151.693 105.267 li
151.52 104.833 li
151.46 104.368 li
151.52 103.902 li
151.693 103.468 li
151.97 103.096 li
152.33 102.81 li
152.75 102.63 li
153.2 102.569 li
153.65 102.63 li
154.07 102.81 li
154.43 103.096 li
154.706 103.468 li
154.88 103.902 li
154.939 104.368 li
154.88 104.833 li
154.706 105.267 li
154.43 105.639 li
154.07 105.926 li
153.65 106.105 li
153.2 106.166 li
152.75 106.105 li
152.33 105.926 li
f
161.121 106.105 mo
160.702 105.926 li
160.342 105.639 li
160.065 105.267 li
159.891 104.833 li
159.832 104.368 li
159.891 103.902 li
160.065 103.468 li
160.342 103.096 li
160.702 102.81 li
161.121 102.63 li
161.572 102.569 li
162.022 102.63 li
162.441 102.81 li
162.802 103.096 li
163.078 103.468 li
163.252 103.902 li
163.311 104.368 li
163.252 104.833 li
163.078 105.267 li
162.802 105.639 li
162.441 105.926 li
162.022 106.105 li
161.572 106.166 li
161.121 106.105 li
f
169.943 106.166 mo
169.493 106.105 li
169.074 105.926 li
168.713 105.639 li
168.437 105.267 li
168.263 104.833 li
168.204 104.368 li
168.263 103.902 li
168.437 103.468 li
168.713 103.096 li
169.074 102.81 li
169.493 102.63 li
169.943 102.569 li
170.393 102.63 li
170.813 102.81 li
171.174 103.096 li
171.45 103.468 li
171.624 103.902 li
171.683 104.368 li
171.624 104.833 li
171.45 105.267 li
171.174 105.639 li
170.813 105.926 li
170.393 106.105 li
169.943 106.166 li
f
178.315 102.569 mo
178.765 102.63 li
179.185 102.81 li
179.545 103.096 li
179.822 103.468 li
179.995 103.902 li
180.054 104.368 li
179.995 104.833 li
179.822 105.267 li
179.545 105.639 li
179.185 105.926 li
178.765 106.105 li
178.315 106.166 li
177.865 106.105 li
177.445 105.926 li
177.085 105.639 li
176.808 105.267 li
176.635 104.833 li
176.575 104.368 li
176.635 103.902 li
176.808 103.468 li
177.085 103.096 li
177.445 102.81 li
177.865 102.63 li
178.315 102.569 li
f
187.556 105.926 mo
187.137 106.105 li
186.687 106.166 li
186.237 106.105 li
185.817 105.926 li
185.457 105.639 li
185.18 105.267 li
185.007 104.833 li
184.947 104.368 li
185.007 103.902 li
185.18 103.468 li
185.457 103.096 li
185.817 102.81 li
186.237 102.63 li
186.687 102.569 li
187.137 102.63 li
187.556 102.81 li
187.917 103.096 li
188.193 103.468 li
188.367 103.902 li
188.427 104.368 li
188.367 104.833 li
188.193 105.267 li
187.917 105.639 li
187.556 105.926 li
f
193.378 104.833 mo
193.319 104.368 li
193.378 103.902 li
193.552 103.468 li
193.828 103.096 li
194.189 102.81 li
194.608 102.63 li
195.058 102.569 li
195.509 102.63 li
195.929 102.81 li
196.288 103.096 li
196.565 103.468 li
196.739 103.902 li
196.798 104.368 li
196.739 104.833 li
196.565 105.267 li
196.288 105.639 li
195.929 105.926 li
195.509 106.105 li
195.058 106.166 li
194.608 106.105 li
194.189 105.926 li
193.828 105.639 li
193.552 105.267 li
193.378 104.833 li
f
203.43 102.569 mo
203.881 102.63 li
204.3 102.81 li
204.66 103.096 li
204.936 103.468 li
205.11 103.902 li
205.17 104.368 li
205.11 104.833 li
204.936 105.267 li
204.66 105.639 li
204.3 105.926 li
203.881 106.105 li
203.43 106.166 li
202.98 106.105 li
202.56 105.926 li
202.2 105.639 li
201.924 105.267 li
201.75 104.833 li
201.69 104.368 li
201.75 103.902 li
201.924 103.468 li
202.2 103.096 li
202.56 102.81 li
202.98 102.63 li
203.43 102.569 li
f
210.296 105.267 mo
210.122 104.833 li
210.062 104.368 li
210.122 103.902 li
210.296 103.468 li
210.572 103.096 li
210.932 102.81 li
211.351 102.63 li
211.802 102.569 li
212.252 102.63 li
212.672 102.81 li
213.032 103.096 li
213.308 103.468 li
213.482 103.902 li
213.542 104.368 li
213.482 104.833 li
213.308 105.267 li
213.032 105.639 li
212.672 105.926 li
212.252 106.105 li
211.802 106.166 li
211.351 106.105 li
210.932 105.926 li
210.572 105.639 li
210.296 105.267 li
f
220.624 106.105 mo
220.174 106.166 li
219.723 106.105 li
219.303 105.926 li
218.943 105.639 li
218.667 105.267 li
218.493 104.833 li
218.434 104.368 li
218.493 103.902 li
218.667 103.468 li
218.943 103.096 li
219.303 102.81 li
219.723 102.63 li
220.174 102.569 li
220.624 102.63 li
221.044 102.81 li
221.404 103.096 li
221.68 103.468 li
221.854 103.902 li
221.913 104.368 li
221.854 104.833 li
221.68 105.267 li
221.404 105.639 li
221.044 105.926 li
220.624 106.105 li
f
228.546 102.569 mo
228.996 102.63 li
229.415 102.81 li
229.775 103.096 li
230.052 103.468 li
230.225 103.902 li
230.285 104.368 li
230.225 104.833 li
230.052 105.267 li
229.775 105.639 li
229.415 105.926 li
228.996 106.105 li
228.546 106.166 li
228.096 106.105 li
227.676 105.926 li
227.315 105.639 li
227.039 105.267 li
226.865 104.833 li
226.806 104.368 li
226.865 103.902 li
227.039 103.468 li
227.315 103.096 li
227.676 102.81 li
228.096 102.63 li
228.546 102.569 li
f
236.048 102.81 mo
236.467 102.63 li
236.917 102.569 li
237.367 102.63 li
237.787 102.81 li
238.147 103.096 li
238.424 103.468 li
238.597 103.902 li
238.657 104.368 li
238.597 104.833 li
238.424 105.267 li
238.147 105.639 li
237.787 105.926 li
237.367 106.105 li
236.917 106.166 li
236.467 106.105 li
236.048 105.926 li
235.687 105.639 li
235.411 105.267 li
235.237 104.833 li
235.178 104.368 li
235.237 103.902 li
235.411 103.468 li
235.687 103.096 li
236.048 102.81 li
f
245.739 106.105 mo
245.289 106.166 li
244.839 106.105 li
244.419 105.926 li
244.058 105.639 li
243.782 105.267 li
243.608 104.833 li
243.55 104.368 li
243.608 103.902 li
243.782 103.468 li
244.058 103.096 li
244.419 102.81 li
244.839 102.63 li
245.289 102.569 li
245.739 102.63 li
246.159 102.81 li
246.519 103.096 li
246.796 103.468 li
246.97 103.902 li
247.028 104.368 li
246.97 104.833 li
246.796 105.267 li
246.519 105.639 li
246.159 105.926 li
245.739 106.105 li
f
253.661 102.569 mo
254.111 102.63 li
254.53 102.81 li
254.89 103.096 li
255.167 103.468 li
255.341 103.902 li
255.4 104.368 li
255.341 104.833 li
255.167 105.267 li
254.89 105.639 li
254.53 105.926 li
254.111 106.105 li
253.661 106.166 li
253.211 106.105 li
252.791 105.926 li
252.43 105.639 li
252.154 105.267 li
251.98 104.833 li
251.921 104.368 li
251.98 103.902 li
252.154 103.468 li
252.43 103.096 li
252.791 102.81 li
253.211 102.63 li
253.661 102.569 li
f
262.032 102.569 mo
262.482 102.63 li
262.902 102.81 li
263.263 103.096 li
263.539 103.468 li
263.713 103.902 li
263.772 104.368 li
263.713 104.833 li
263.539 105.267 li
263.263 105.639 li
262.902 105.926 li
262.482 106.105 li
262.032 106.166 li
261.582 106.105 li
261.163 105.926 li
260.803 105.639 li
260.526 105.267 li
260.352 104.833 li
260.293 104.368 li
260.352 103.902 li
260.526 103.468 li
260.803 103.096 li
261.163 102.81 li
261.582 102.63 li
262.032 102.569 li
f
269.954 106.105 mo
269.534 105.926 li
269.174 105.639 li
268.897 105.267 li
268.723 104.833 li
268.665 104.368 li
268.723 103.902 li
268.897 103.468 li
269.174 103.096 li
269.534 102.81 li
269.954 102.63 li
270.404 102.569 li
270.854 102.63 li
271.274 102.81 li
271.635 103.096 li
271.911 103.468 li
272.085 103.902 li
272.143 104.368 li
272.085 104.833 li
271.911 105.267 li
271.635 105.639 li
271.274 105.926 li
270.854 106.105 li
270.404 106.166 li
269.954 106.105 li
f
209.031 123.986 mo
208.004 123.986 li
207.476 123.986 li
207.215 127.093 li
202.721 127.093 li
204.938 109.811 li
211.221 109.811 li
213.706 127.093 li
209.263 127.093 li
209.031 123.986 li
cp
208.255 113.665 mo
207.421 120.923 li
207.948 120.923 li
208.917 120.923 li
208.488 116.224 li
208.255 113.665 li
cp
.941176 .768627 .0980392 rgb
f
213.706 127.093 mo
211.221 109.811 li
211.748 109.811 li
214.233 127.093 li
213.706 127.093 li
cp
.509804 .203922 .235294 rgb
f
207.215 127.093 mo
207.476 123.986 li
208.004 123.986 li
207.742 127.093 li
207.215 127.093 li
cp
f
166.576 109.811 mo
166.576 127.093 li
162.229 127.093 li
162.229 109.811 li
166.576 109.811 li
cp
.941176 .768627 .0980392 rgb
f
166.576 127.093 mo
166.576 109.811 li
167.103 109.811 li
167.103 127.093 li
166.576 127.093 li
cp
.509804 .203922 .235294 rgb
f
207.421 120.923 mo
208.255 113.665 li
208.488 116.224 li
207.948 120.923 li
207.421 120.923 li
cp
f
208.488 116.224 mo
208.917 120.923 li
207.948 120.923 li
208.488 116.224 li
cp
.984314 .392157 .423529 rgb
f
263.713 128.19 mo
263.772 128.656 li
263.713 129.122 li
263.539 129.556 li
263.263 129.929 li
262.902 130.214 li
262.482 130.393 li
262.032 130.455 li
261.582 130.393 li
261.163 130.214 li
260.803 129.929 li
260.526 129.556 li
260.352 129.122 li
260.293 128.656 li
260.352 128.19 li
260.526 127.757 li
260.803 127.385 li
261.163 127.098 li
261.582 126.919 li
262.032 126.857 li
262.482 126.919 li
262.902 127.098 li
263.263 127.385 li
263.539 127.757 li
263.713 128.19 li
cp
1 .956863 .878431 rgb
f
255.4 128.656 mo
255.341 129.122 li
255.167 129.556 li
254.89 129.929 li
254.53 130.214 li
254.111 130.393 li
253.661 130.455 li
253.211 130.393 li
252.791 130.214 li
252.43 129.929 li
252.154 129.556 li
251.98 129.122 li
251.921 128.656 li
251.98 128.19 li
252.154 127.757 li
252.43 127.385 li
252.791 127.098 li
253.211 126.919 li
253.661 126.857 li
254.111 126.919 li
254.53 127.098 li
254.89 127.385 li
255.167 127.757 li
255.341 128.19 li
255.4 128.656 li
cp
f
236.467 130.393 mo
236.048 130.214 li
235.687 129.929 li
235.411 129.556 li
235.237 129.122 li
235.178 128.656 li
235.237 128.19 li
235.411 127.757 li
235.687 127.385 li
236.048 127.098 li
236.467 126.919 li
236.917 126.857 li
237.367 126.919 li
237.787 127.098 li
238.147 127.385 li
238.424 127.757 li
238.597 128.19 li
238.657 128.656 li
238.597 129.122 li
238.424 129.556 li
238.147 129.929 li
237.787 130.214 li
237.367 130.393 li
236.917 130.455 li
236.467 130.393 li
cp
f
243.608 129.122 mo
243.55 128.656 li
243.608 128.19 li
243.782 127.757 li
244.058 127.385 li
244.419 127.098 li
244.839 126.919 li
245.289 126.857 li
245.739 126.919 li
246.159 127.098 li
246.519 127.385 li
246.796 127.757 li
246.97 128.19 li
247.028 128.656 li
246.97 129.122 li
246.796 129.556 li
246.519 129.929 li
246.159 130.214 li
245.739 130.393 li
245.289 130.455 li
244.839 130.393 li
244.419 130.214 li
244.058 129.929 li
243.782 129.556 li
243.608 129.122 li
cp
f
270.404 130.455 mo
269.954 130.393 li
269.534 130.214 li
269.174 129.929 li
268.897 129.556 li
268.723 129.122 li
268.665 128.656 li
268.723 128.19 li
268.897 127.757 li
269.174 127.385 li
269.534 127.098 li
269.954 126.919 li
270.404 126.857 li
270.854 126.919 li
271.274 127.098 li
271.635 127.385 li
271.911 127.757 li
272.085 128.19 li
272.143 128.656 li
272.085 129.122 li
271.911 129.556 li
271.635 129.929 li
271.274 130.214 li
270.854 130.393 li
270.404 130.455 li
cp
f
229.775 129.929 mo
229.415 130.214 li
228.996 130.393 li
228.546 130.455 li
228.096 130.393 li
227.676 130.214 li
227.315 129.929 li
227.039 129.556 li
226.865 129.122 li
226.805 128.656 li
226.865 128.19 li
227.039 127.757 li
227.315 127.385 li
227.676 127.098 li
228.096 126.919 li
228.546 126.857 li
228.996 126.919 li
229.415 127.098 li
229.775 127.385 li
230.052 127.757 li
230.225 128.19 li
230.285 128.656 li
230.225 129.122 li
230.052 129.556 li
229.775 129.929 li
cp
f
84.5457 128.191 mo
84.7196 127.757 li
84.9959 127.385 li
85.3563 127.098 li
85.7757 126.919 li
86.2259 126.857 li
86.6765 126.919 li
87.096 127.098 li
87.4563 127.385 li
87.7328 127.757 li
87.9066 128.191 li
87.9656 128.656 li
87.9066 129.122 li
87.7328 129.556 li
87.4563 129.929 li
87.096 130.214 li
86.6765 130.393 li
86.2259 130.455 li
85.7757 130.393 li
85.3563 130.214 li
84.9959 129.929 li
84.7196 129.556 li
84.5457 129.122 li
84.4866 128.656 li
84.5457 128.191 li
f
138.137 128.191 mo
138.196 128.656 li
138.137 129.122 li
137.963 129.556 li
137.686 129.929 li
137.326 130.214 li
136.907 130.393 li
136.456 130.455 li
136.006 130.393 li
135.587 130.214 li
135.226 129.929 li
134.95 129.556 li
134.776 129.122 li
134.717 128.656 li
134.776 128.191 li
134.95 127.757 li
135.226 127.385 li
135.587 127.098 li
136.006 126.919 li
136.456 126.857 li
136.907 126.919 li
137.326 127.098 li
137.686 127.385 li
137.963 127.757 li
138.137 128.191 li
cp
f
221.68 127.757 mo
221.854 128.19 li
221.913 128.656 li
221.854 129.122 li
221.68 129.556 li
221.404 129.929 li
221.044 130.214 li
220.624 130.393 li
220.174 130.455 li
219.723 130.393 li
219.304 130.214 li
218.943 129.929 li
218.667 129.556 li
218.493 129.122 li
218.434 128.656 li
218.493 128.19 li
218.667 127.757 li
218.943 127.385 li
219.304 127.098 li
219.723 126.919 li
220.174 126.857 li
220.624 126.919 li
221.044 127.098 li
221.404 127.385 li
221.68 127.757 li
cp
f
101.74 129.929 mo
101.463 129.556 li
101.289 129.122 li
101.23 128.656 li
101.289 128.191 li
101.463 127.757 li
101.74 127.385 li
102.1 127.098 li
102.519 126.919 li
102.97 126.857 li
103.42 126.919 li
103.839 127.098 li
104.2 127.385 li
104.476 127.757 li
104.65 128.191 li
104.709 128.656 li
104.65 129.122 li
104.476 129.556 li
104.2 129.929 li
103.839 130.214 li
103.42 130.393 li
102.97 130.455 li
102.519 130.393 li
102.1 130.214 li
101.74 129.929 li
cp
f
110.111 129.929 mo
109.835 129.556 li
109.661 129.122 li
109.602 128.656 li
109.661 128.191 li
109.835 127.757 li
110.111 127.385 li
110.471 127.098 li
110.891 126.919 li
111.341 126.857 li
111.791 126.919 li
112.211 127.098 li
112.572 127.385 li
112.848 127.757 li
113.022 128.191 li
113.081 128.656 li
113.022 129.122 li
112.848 129.556 li
112.572 129.929 li
112.211 130.214 li
111.791 130.393 li
111.341 130.455 li
110.891 130.393 li
110.471 130.214 li
110.111 129.929 li
cp
f
145.698 127.098 mo
146.058 127.385 li
146.335 127.757 li
146.509 128.191 li
146.568 128.656 li
146.509 129.122 li
146.335 129.556 li
146.058 129.929 li
145.698 130.214 li
145.279 130.393 li
144.828 130.455 li
144.378 130.393 li
143.958 130.214 li
143.598 129.929 li
143.322 129.556 li
143.148 129.122 li
143.089 128.656 li
143.148 128.191 li
143.322 127.757 li
143.598 127.385 li
143.958 127.098 li
144.378 126.919 li
144.828 126.857 li
145.279 126.919 li
145.698 127.098 li
cp
f
118.843 130.214 mo
118.483 129.929 li
118.206 129.556 li
118.033 129.122 li
117.973 128.656 li
118.033 128.191 li
118.206 127.757 li
118.483 127.385 li
118.843 127.098 li
119.263 126.919 li
119.713 126.857 li
120.163 126.919 li
120.583 127.098 li
120.943 127.385 li
121.22 127.757 li
121.393 128.191 li
121.452 128.656 li
121.393 129.122 li
121.22 129.556 li
120.943 129.929 li
120.583 130.214 li
120.163 130.393 li
119.713 130.455 li
119.263 130.393 li
118.843 130.214 li
cp
f
129.315 127.385 mo
129.591 127.757 li
129.765 128.191 li
129.825 128.656 li
129.765 129.122 li
129.591 129.556 li
129.315 129.929 li
128.954 130.214 li
128.535 130.393 li
128.085 130.455 li
127.635 130.393 li
127.215 130.214 li
126.855 129.929 li
126.578 129.556 li
126.405 129.122 li
126.345 128.656 li
126.405 128.191 li
126.578 127.757 li
126.855 127.385 li
127.215 127.098 li
127.635 126.919 li
128.085 126.857 li
128.535 126.919 li
128.954 127.098 li
129.315 127.385 li
cp
f
95.8279 129.929 mo
95.4676 130.214 li
95.0482 130.393 li
94.598 130.455 li
94.1478 130.393 li
93.7278 130.214 li
93.368 129.929 li
93.0911 129.556 li
92.9173 129.122 li
92.8582 128.656 li
92.9173 128.191 li
93.0911 127.757 li
93.368 127.385 li
93.7278 127.098 li
94.1478 126.919 li
94.598 126.857 li
95.0482 126.919 li
95.4676 127.098 li
95.8279 127.385 li
96.1043 127.757 li
96.2781 128.191 li
96.3372 128.656 li
96.2781 129.122 li
96.1043 129.556 li
95.8279 129.929 li
cp
f
122.12 114.61 mo
122.12 123.195 li
119.517 123.195 li
119.517 114.61 li
122.12 114.61 li
cp
.627451 .25098 .305882 rgb
f
122.12 123.195 mo
122.12 114.61 li
122.406 114.61 li
122.406 123.195 li
122.12 123.195 li
cp
.509804 .203922 .235294 rgb
f
202.487 109.811 mo
202.487 127.089 li
198.168 127.089 li
198.158 119.481 li
197.172 127.089 li
193.949 127.089 li
192.88 119.454 li
192.88 127.089 li
188.552 127.089 li
188.552 109.811 li
194.706 109.811 li
195.218 113.482 li
195.556 115.884 li
196.305 109.811 li
202.487 109.811 li
cp
.941176 .768627 .0980392 rgb
f
201.963 127.093 mo
201.963 109.811 li
202.491 109.811 li
202.491 127.093 li
201.963 127.093 li
cp
.509804 .203922 .235294 rgb
f
196.647 127.093 mo
198.159 115.426 li
198.161 119.483 li
197.174 127.093 li
196.647 127.093 li
cp
f
192.352 127.093 mo
192.357 115.692 li
192.883 119.452 li
192.88 127.093 li
192.352 127.093 li
cp
f
195.556 115.884 mo
195.309 117.884 li
194.688 113.482 li
194.177 109.811 li
194.706 109.811 li
195.218 113.482 li
195.556 115.884 li
cp
f
179.983 148.801 mo
179.983 154.731 li
179.983 159.94 li
179.983 188.889 li
181.606 188.889 li
181.606 159.94 li
181.606 154.731 li
181.606 148.801 li
179.983 148.801 li
.921569 .835294 .741176 rgb
f
97.4866 91.8495 mo
84.0135 91.8495 li
84.0135 55.5135 li
101.414 55.5135 li
101.414 75.3739 li
97.4866 75.3739 li
97.4866 91.8495 li
.290196 .25098 .356863 rgb
f
84.0135 91.8495 mo
81.8396 91.8495 li
81.8396 55.5135 li
84.0135 55.5135 li
84.0135 91.8495 li
.305882 .227451 .152941 rgb
f
106.735 91.8495 mo
104.56 91.8495 li
104.56 55.5135 li
106.735 55.5135 li
106.735 91.8495 li
f
120.208 91.8495 mo
106.735 91.8495 li
106.735 55.5135 li
124.136 55.5135 li
124.136 75.3739 li
120.208 75.3739 li
120.208 91.8495 li
.290196 .25098 .356863 rgb
f
120.208 91.8495 mo
104.56 91.8495 li
106.735 91.8495 li
120.208 91.8495 li
124.136 75.3739 mo
124.136 75.3739 li
124.136 55.5135 li
124.136 75.3739 li
.509804 .407843 .305882 rgb
f
129.456 91.8495 mo
127.282 91.8495 li
127.282 55.5135 li
129.456 55.5135 li
129.456 91.8495 li
.305882 .227451 .152941 rgb
f
142.929 91.8495 mo
129.456 91.8495 li
129.456 55.5135 li
146.857 55.5135 li
146.857 75.3739 li
142.929 75.3739 li
142.929 91.8495 li
.290196 .25098 .356863 rgb
f
142.929 91.8495 mo
127.282 91.8495 li
129.456 91.8495 li
142.929 91.8495 li
146.857 75.3739 mo
146.857 75.3739 li
146.857 55.5135 li
146.857 75.3739 li
.509804 .407843 .305882 rgb
f
256.534 91.8495 mo
243.061 91.8495 li
243.061 55.5135 li
260.462 55.5135 li
260.462 75.3739 li
256.534 75.3739 li
256.534 91.8495 li
.290196 .25098 .356863 rgb
f
243.061 91.8495 mo
240.887 91.8495 li
240.887 55.5135 li
243.061 55.5135 li
243.061 91.8495 li
.305882 .227451 .152941 rgb
f
279.255 91.8495 mo
265.782 91.8495 li
265.782 55.5135 li
283.183 55.5135 li
283.183 75.3739 li
279.255 75.3739 li
279.255 91.8495 li
.290196 .25098 .356863 rgb
f
265.782 91.8495 mo
263.608 91.8495 li
263.608 55.5135 li
265.782 55.5135 li
265.782 91.8495 li
.305882 .227451 .152941 rgb
f
86.2283 132.432 mo
81.5672 132.432 li
81.5672 132.432 li
86.2283 132.432 li
86.2283 132.432 li
86.2269 130.459 mo
85.7792 130.394 li
85.7774 130.394 li
86.2259 130.455 li
86.2283 130.455 li
86.2283 130.459 li
86.2269 130.459 li
85.0923 130.005 mo
84.9939 129.929 li
84.8249 129.698 li
84.9959 129.929 li
85.0923 130.005 li
84.5786 129.204 mo
84.5467 129.125 li
84.5466 129.124 li
84.5786 129.204 li
84.5386 129.066 mo
84.4828 128.659 li
84.5287 128.325 li
84.4866 128.656 li
84.5386 129.066 li
84.7198 127.756 mo
84.7201 127.756 li
84.9939 127.381 li
85.2859 127.154 li
84.9959 127.385 li
84.7198 127.756 li
85.4097 127.076 mo
85.7792 126.915 li
86.016 126.886 li
85.7757 126.919 li
85.4097 127.076 li
279.297 107.806 mo
279.297 107.806 li
279.297 106.076 li
279.279 106.083 li
279.297 106.075 li
279.297 107.806 li
278.776 106.167 mo
278.645 106.149 li
278.776 106.166 li
278.907 106.149 li
278.776 106.167 li
270.402 106.167 mo
270.235 106.143 li
270.404 106.166 li
270.498 106.154 li
270.402 106.167 li
262.028 106.167 mo
261.826 106.138 li
262.032 106.166 li
262.13 106.153 li
262.028 106.167 li
253.663 106.167 mo
253.511 106.146 li
253.661 106.166 li
253.83 106.143 li
253.663 106.167 li
245.289 106.167 mo
245.158 106.149 li
245.289 106.166 li
245.42 106.149 li
245.289 106.167 li
236.915 106.167 mo
236.748 106.143 li
236.917 106.166 li
237.077 106.145 li
236.915 106.167 li
228.55 106.167 mo
228.454 106.154 li
228.546 106.166 li
228.761 106.137 li
228.55 106.167 li
220.176 106.167 mo
220.024 106.146 li
220.174 106.166 li
220.35 106.142 li
220.176 106.167 li
211.802 106.167 mo
211.67 106.149 li
211.802 106.166 li
211.933 106.149 li
211.802 106.167 li
203.428 106.167 mo
203.243 106.141 li
203.43 106.166 li
203.56 106.149 li
203.428 106.167 li
195.063 106.167 mo
194.979 106.156 li
195.058 106.166 li
195.273 106.137 li
195.063 106.167 li
186.689 106.167 mo
186.527 106.145 li
186.687 106.166 li
186.856 106.143 li
186.689 106.167 li
178.314 106.167 mo
178.165 106.146 li
178.315 106.166 li
178.431 106.151 li
178.314 106.167 li
169.94 106.167 mo
169.756 106.141 li
169.943 106.166 li
170.068 106.149 li
169.94 106.167 li
161.576 106.167 mo
161.477 106.153 li
161.572 106.166 li
161.778 106.138 li
161.576 106.167 li
86.2269 106.167 mo
86.1109 106.151 li
86.2259 106.166 li
86.2283 106.166 li
86.2283 106.167 li
86.2269 106.167 li
237.371 106.103 mo
237.787 105.926 li
237.782 105.929 li
237.372 106.103 li
237.371 106.103 li
186.232 106.103 mo
186.232 106.103 li
185.821 105.929 li
185.684 105.82 li
185.817 105.926 li
186.232 106.103 li
203.903 106.096 mo
204.3 105.926 li
204.614 105.676 li
204.305 105.929 li
203.903 106.096 li
253.186 106.095 mo
252.787 105.929 li
252.509 105.702 li
252.791 105.926 li
253.186 106.095 li
170.431 106.089 mo
170.813 105.926 li
171.083 105.711 li
170.817 105.929 li
170.431 106.089 li
262.536 106.082 mo
262.902 105.926 li
263.131 105.744 li
262.905 105.929 li
262.536 106.082 li
219.662 106.079 mo
219.308 105.929 li
219.304 105.926 li
219.662 106.079 li
161.057 106.078 mo
160.699 105.929 li
160.448 105.724 li
160.702 105.926 li
161.057 106.078 li
229.074 106.072 mo
229.415 105.926 li
229.644 105.744 li
229.418 105.929 li
229.074 106.072 li
194.53 106.072 mo
194.186 105.929 li
193.95 105.736 li
194.189 105.926 li
194.53 106.072 li
228.012 106.07 mo
227.674 105.929 li
227.458 105.753 li
227.676 105.926 li
228.012 106.07 li
195.606 106.063 mo
195.929 105.926 li
196.146 105.752 li
195.93 105.929 li
195.606 106.063 li
261.477 106.06 mo
261.161 105.929 li
260.943 105.751 li
261.163 105.926 li
261.477 106.06 li
162.128 106.06 mo
162.441 105.926 li
162.648 105.761 li
162.443 105.929 li
162.128 106.06 li
169.356 106.046 mo
169.073 105.929 li
168.903 105.79 li
169.074 105.926 li
169.356 106.046 li
220.766 106.044 mo
221.044 105.926 li
221.184 105.814 li
221.044 105.929 li
220.766 106.044 li
202.838 106.044 mo
202.56 105.929 li
202.406 105.803 li
202.56 105.926 li
202.838 106.044 li
254.262 106.04 mo
254.53 105.926 li
254.7 105.791 li
254.531 105.929 li
254.262 106.04 li
236.306 106.037 mo
236.048 105.929 li
235.895 105.804 li
236.048 105.926 li
236.306 106.037 li
187.303 106.034 mo
187.556 105.926 li
187.917 105.639 li
188.163 105.308 li
187.922 105.637 li
187.556 105.929 li
187.303 106.034 li
269.782 106.032 mo
269.535 105.929 li
269.17 105.637 li
268.971 105.367 li
269.174 105.639 li
269.534 105.926 li
269.782 106.032 li
177.664 106.019 mo
177.447 105.929 li
177.082 105.637 li
176.959 105.469 li
177.085 105.639 li
177.445 105.926 li
177.664 106.019 li
245.955 106.013 mo
246.159 105.926 li
246.519 105.639 li
246.611 105.516 li
246.522 105.637 li
246.157 105.929 li
245.955 106.013 li
212.467 106.013 mo
212.672 105.926 li
213.032 105.639 li
213.127 105.511 li
213.035 105.637 li
212.67 105.929 li
212.467 106.013 li
211.136 106.013 mo
210.934 105.929 li
210.569 105.637 li
210.454 105.481 li
210.572 105.639 li
210.932 105.926 li
211.136 106.013 li
278.095 106.007 mo
277.909 105.929 li
277.622 105.7 li
277.906 105.926 li
278.095 106.007 li
244.608 106.007 mo
244.422 105.929 li
244.146 105.709 li
244.419 105.926 li
244.608 106.007 li
85.5405 106.005 mo
85.3591 105.929 li
85.0688 105.697 li
85.3563 105.926 li
85.5405 106.005 li
179.001 106.004 mo
179.185 105.926 li
179.469 105.7 li
179.182 105.929 li
179.001 106.004 li
271.143 105.982 mo
271.274 105.926 li
271.269 105.929 li
271.143 105.982 li
84.9952 105.638 mo
84.9939 105.637 li
84.9584 105.589 li
84.9952 105.638 li
277.545 105.638 mo
277.544 105.637 li
277.503 105.582 li
277.545 105.638 li
179.546 105.638 mo
179.583 105.589 li
179.547 105.637 li
179.546 105.638 li
244.057 105.638 mo
244.056 105.637 li
244.023 105.591 li
244.057 105.638 li
260.624 105.399 mo
260.521 105.263 li
260.348 104.834 li
260.293 104.368 li
260.293 104.368 li
260.352 104.833 li
260.526 105.267 li
260.624 105.399 li
196.486 105.374 mo
196.565 105.267 li
196.739 104.833 li
196.792 104.414 li
196.743 104.834 li
196.57 105.263 li
196.486 105.374 li
163.007 105.362 mo
163.078 105.267 li
163.252 104.833 li
163.3 104.455 li
163.256 104.834 li
163.082 105.263 li
163.007 105.362 li
168.461 105.3 mo
168.433 105.263 li
168.26 104.834 li
168.223 104.52 li
168.263 104.833 li
168.437 105.267 li
168.461 105.3 li
255.167 105.267 mo
255.341 104.833 li
255.377 104.548 li
255.344 104.834 li
255.17 105.263 li
255.167 105.267 li
201.923 105.267 mo
201.921 105.263 li
201.748 104.834 li
201.72 104.599 li
201.75 104.833 li
201.923 105.267 li
235.411 105.267 mo
235.408 105.263 li
235.234 104.834 li
235.201 104.548 li
235.237 104.833 li
235.411 105.267 li
188.194 105.266 mo
188.367 104.833 li
188.392 104.642 li
188.369 104.834 li
188.196 105.263 li
188.194 105.266 li
268.896 105.264 mo
268.895 105.263 li
268.721 104.834 li
268.693 104.594 li
268.723 104.833 li
268.896 105.264 li
221.682 105.264 mo
221.854 104.833 li
221.884 104.594 li
221.856 104.834 li
221.682 105.263 li
221.682 105.264 li
226.947 105.038 mo
226.86 104.834 li
226.806 104.368 li
226.806 104.368 li
226.865 104.833 li
226.947 105.038 li
176.702 105 mo
176.634 104.834 li
176.627 104.776 li
176.635 104.833 li
176.702 105 li
210.165 104.941 mo
210.122 104.834 li
210.121 104.826 li
210.122 104.833 li
210.165 104.941 li
246.95 104.882 mo
246.97 104.833 li
246.97 104.826 li
246.97 104.834 li
246.95 104.882 li
213.463 104.882 mo
213.482 104.833 li
213.542 104.368 li
213.483 103.91 li
213.546 104.368 li
213.482 104.834 li
213.463 104.882 li
180.001 104.793 mo
180.054 104.368 li
180.002 103.955 li
180.059 104.368 li
180.001 104.793 li
243.599 104.761 mo
243.545 104.368 li
243.598 103.985 li
243.55 104.368 li
243.599 104.761 li
277.084 104.747 mo
277.032 104.368 li
277.083 104.002 li
277.036 104.368 li
277.084 104.747 li
84.5345 104.745 mo
84.4828 104.368 li
84.5328 104.004 li
84.4866 104.368 li
84.5345 104.745 li
184.988 104.685 mo
184.944 104.368 li
184.986 104.064 li
184.947 104.368 li
184.988 104.685 li
272.107 104.659 mo
272.143 104.368 li
272.108 104.089 li
272.146 104.368 li
272.107 104.659 li
238.625 104.615 mo
238.657 104.368 li
238.628 104.137 li
238.659 104.368 li
238.625 104.615 li
218.465 104.61 mo
218.431 104.368 li
218.464 104.136 li
218.434 104.368 li
218.465 104.61 li
205.14 104.603 mo
205.17 104.368 li
205.142 104.149 li
205.172 104.368 li
205.14 104.603 li
251.946 104.564 mo
251.919 104.368 li
251.944 104.184 li
251.921 104.368 li
251.946 104.564 li
171.662 104.53 mo
171.683 104.368 li
171.664 104.219 li
171.684 104.368 li
171.662 104.53 li
159.84 104.428 mo
159.831 104.368 li
159.838 104.322 li
159.832 104.368 li
159.84 104.428 li
193.326 104.422 mo
193.319 104.368 li
193.324 104.327 li
193.319 104.368 li
193.326 104.422 li
263.771 104.375 mo
263.772 104.368 li
263.772 104.368 li
263.771 104.375 li
230.284 104.375 mo
230.285 104.368 li
230.285 104.368 li
230.284 104.375 li
260.294 104.362 mo
260.348 103.903 li
260.521 103.464 li
260.701 103.233 li
260.526 103.468 li
260.352 103.902 li
260.294 104.362 li
226.806 104.362 mo
226.86 103.903 li
226.98 103.614 li
226.865 103.902 li
226.806 104.362 li
196.791 104.308 mo
196.739 103.902 li
196.565 103.468 li
196.394 103.238 li
196.57 103.464 li
196.743 103.903 li
196.791 104.308 li
163.299 104.269 mo
163.252 103.902 li
163.078 103.468 li
162.916 103.249 li
163.082 103.464 li
163.256 103.903 li
163.299 104.269 li
168.225 104.203 mo
168.26 103.903 li
168.433 103.464 li
168.579 103.276 li
168.437 103.468 li
168.263 103.902 li
168.225 104.203 li
255.376 104.176 mo
255.341 103.902 li
255.167 103.468 li
255.036 103.292 li
255.17 103.464 li
255.344 103.903 li
255.376 104.176 li
235.202 104.176 mo
235.234 103.903 li
235.408 103.464 li
235.54 103.293 li
235.411 103.468 li
235.237 103.902 li
235.202 104.176 li
268.695 104.128 mo
268.721 103.903 li
268.895 103.464 li
269.17 103.099 li
269.173 103.096 li
268.897 103.468 li
268.723 103.902 li
268.695 104.128 li
221.883 104.128 mo
221.854 103.902 li
221.68 103.468 li
221.571 103.321 li
221.682 103.464 li
221.856 103.903 li
221.883 104.128 li
201.722 104.122 mo
201.748 103.903 li
201.921 103.464 li
202.054 103.292 li
201.924 103.468 li
201.75 103.902 li
201.722 104.122 li
188.39 104.083 mo
188.367 103.902 li
188.193 103.468 li
187.917 103.096 li
187.556 102.81 li
187.354 102.723 li
187.556 102.807 li
187.922 103.099 li
188.196 103.464 li
188.369 103.903 li
188.39 104.083 li
176.629 103.948 mo
176.634 103.903 li
176.808 103.464 li
177.082 103.099 li
177.084 103.097 li
176.808 103.468 li
176.635 103.902 li
176.629 103.948 li
210.134 103.871 mo
210.295 103.464 li
210.569 103.099 li
210.57 103.098 li
210.296 103.468 li
210.134 103.871 li
246.95 103.853 mo
246.796 103.468 li
246.521 103.098 li
246.522 103.099 li
246.796 103.464 li
246.95 103.853 li
213.463 103.853 mo
213.308 103.468 li
213.034 103.098 li
213.035 103.099 li
213.308 103.464 li
213.463 103.853 li
179.926 103.728 mo
179.822 103.468 li
179.602 103.172 li
179.821 103.464 li
179.926 103.728 li
277.172 103.712 mo
277.269 103.464 li
277.497 103.161 li
277.269 103.468 li
277.172 103.712 li
243.684 103.712 mo
243.782 103.464 li
244.003 103.17 li
243.782 103.468 li
243.684 103.712 li
84.6387 103.67 mo
84.7201 103.464 li
84.9393 103.172 li
84.7196 103.468 li
84.6387 103.67 li
185.176 103.48 mo
185.182 103.464 li
185.31 103.294 li
185.18 103.468 li
185.176 103.48 li
238.423 103.467 mo
238.317 103.324 li
238.422 103.464 li
238.423 103.467 li
252.155 103.467 mo
252.156 103.464 li
252.232 103.363 li
252.155 103.467 li
271.91 103.467 mo
271.839 103.371 li
271.909 103.464 li
271.91 103.467 li
204.935 103.467 mo
204.836 103.333 li
204.934 103.464 li
204.935 103.467 li
218.668 103.467 mo
218.669 103.464 li
218.739 103.371 li
218.668 103.467 li
269.211 103.066 mo
269.535 102.807 li
269.73 102.726 li
269.534 102.81 li
269.211 103.066 li
204.565 103.02 mo
204.3 102.81 li
203.964 102.666 li
204.305 102.807 li
204.565 103.02 li
177.186 103.016 mo
177.447 102.807 li
177.614 102.738 li
177.445 102.81 li
177.186 103.016 li
252.554 102.997 mo
252.787 102.807 li
253.122 102.668 li
252.791 102.81 li
252.554 102.997 li
171.041 102.99 mo
170.813 102.81 li
170.492 102.673 li
170.817 102.807 li
171.041 102.99 li
212.895 102.987 mo
212.672 102.81 li
212.513 102.742 li
212.67 102.807 li
212.895 102.987 li
246.377 102.983 mo
246.159 102.81 li
246 102.742 li
246.157 102.807 li
246.377 102.983 li
210.715 102.983 mo
210.934 102.807 li
211.091 102.742 li
210.932 102.81 li
210.715 102.983 li
160.489 102.979 mo
160.699 102.807 li
161 102.682 li
160.702 102.81 li
160.489 102.979 li
193.989 102.968 mo
194.186 102.807 li
194.474 102.688 li
194.189 102.81 li
193.989 102.968 li
263.094 102.962 mo
262.902 102.81 li
262.598 102.68 li
262.905 102.807 li
263.094 102.962 li
229.607 102.962 mo
229.415 102.81 li
229.13 102.688 li
229.418 102.807 li
229.607 102.962 li
260.983 102.952 mo
261.161 102.807 li
261.423 102.698 li
261.163 102.81 li
260.983 102.952 li
227.497 102.951 mo
227.674 102.807 li
227.953 102.691 li
227.676 102.81 li
227.497 102.951 li
196.107 102.951 mo
195.929 102.81 li
195.663 102.696 li
195.93 102.807 li
196.107 102.951 li
162.611 102.945 mo
162.441 102.81 li
162.182 102.699 li
162.443 102.807 li
162.611 102.945 li
254.668 102.919 mo
254.53 102.81 li
254.31 102.716 li
254.531 102.807 li
254.668 102.919 li
168.938 102.918 mo
169.073 102.807 li
169.302 102.712 li
169.074 102.81 li
168.938 102.918 li
85.2258 102.913 mo
85.3591 102.807 li
85.4953 102.75 li
85.3563 102.81 li
85.2258 102.913 li
277.782 102.908 mo
277.909 102.807 li
278.048 102.749 li
277.906 102.81 li
277.782 102.908 li
179.309 102.908 mo
179.185 102.81 li
179.047 102.751 li
179.182 102.807 li
179.309 102.908 li
202.439 102.906 mo
202.56 102.807 li
202.783 102.714 li
202.56 102.81 li
202.439 102.906 li
244.298 102.906 mo
244.422 102.807 li
244.561 102.749 li
244.419 102.81 li
244.298 102.906 li
235.927 102.905 mo
236.048 102.807 li
236.257 102.72 li
236.048 102.81 li
235.927 102.905 li
221.155 102.898 mo
221.044 102.81 li
220.821 102.714 li
221.044 102.807 li
221.155 102.898 li
185.793 102.829 mo
185.821 102.807 li
186.089 102.694 li
185.817 102.81 li
185.793 102.829 li
237.786 102.809 mo
237.535 102.702 li
237.782 102.807 li
237.786 102.809 li
271.273 102.809 mo
271.186 102.772 li
271.269 102.807 li
271.273 102.809 li
219.305 102.809 mo
219.308 102.807 li
219.512 102.721 li
219.305 102.809 li
279.297 102.661 mo
279.295 102.66 li
279.297 102.66 li
279.297 98.7337 li
279.297 102.661 li
195.08 102.572 mo
195.062 102.569 li
195.063 102.569 li
195.08 102.572 li
228.557 102.57 mo
228.549 102.569 li
228.55 102.569 li
228.557 102.57 li
161.583 102.57 mo
161.575 102.569 li
161.576 102.569 li
161.583 102.57 li
262.021 102.57 mo
262.028 102.569 li
262.028 102.569 li
262.021 102.57 li
279.297 98.7337 mo
158.012 98.7337 li
158.012 98.7331 li
279.297 98.7337 li
86.2283 98.7337 mo
81.5672 98.7337 li
81.5672 98.7328 li
86.2283 98.7328 li
86.2283 98.7337 li
.45098 .556863 .603922 rgb
f
81.5672 132.432 mo
80.7225 132.432 li
81.5672 132.432 li
81.5672 132.432 li
81.5672 98.7337 mo
80.72 98.7337 li
80.7225 98.7327 li
81.5672 98.7328 li
81.5672 98.7337 li
.45098 .505882 .541176 rgb
f
89.5145 132.432 mo
86.2283 132.432 li
86.2283 132.432 li
89.5145 132.432 li
89.5145 132.432 li
86.2283 130.459 mo
86.2283 130.455 li
86.6764 130.393 li
86.6742 130.394 li
86.2283 130.459 li
87.2899 130.06 mo
87.4563 129.929 li
87.7328 129.556 li
87.9066 129.122 li
87.9167 129.042 li
87.907 129.125 li
87.7337 129.555 li
87.4598 129.929 li
87.2899 130.06 li
87.9072 128.196 mo
87.907 128.194 li
87.907 128.194 li
87.9072 128.196 li
87.844 128.035 mo
87.7328 127.757 li
87.4563 127.385 li
87.1096 127.109 li
87.4598 127.381 li
87.7337 127.756 li
87.844 128.035 li
87.0953 127.098 mo
86.6765 126.919 li
86.4228 126.884 li
86.6742 126.915 li
87.0946 127.098 li
87.0953 127.098 li
153.201 106.167 mo
153.093 106.152 li
153.2 106.166 li
153.358 106.145 li
153.201 106.167 li
144.827 106.167 mo
144.678 106.146 li
144.828 106.166 li
144.941 106.151 li
144.827 106.167 li
136.453 106.167 mo
136.26 106.14 li
136.456 106.166 li
136.572 106.151 li
136.453 106.167 li
128.207 106.167 mo
128.144 106.158 li
128.535 106.105 li
128.954 105.926 li
129.315 105.639 li
129.591 105.267 li
129.765 104.833 li
129.825 104.368 li
129.765 103.902 li
129.591 103.468 li
129.315 103.096 li
128.954 102.81 li
128.535 102.63 li
128.149 102.577 li
128.207 102.569 li
128.654 102.633 li
129.074 102.807 li
129.44 103.099 li
129.714 103.464 li
129.887 103.903 li
129.951 104.368 li
129.887 104.834 li
129.714 105.263 li
129.44 105.637 li
129.074 105.929 li
128.654 106.103 li
128.207 106.167 li
119.833 106.167 mo
119.771 106.158 li
120.163 106.105 li
120.583 105.926 li
120.943 105.639 li
121.22 105.267 li
121.393 104.833 li
121.452 104.368 li
121.393 103.902 li
121.22 103.468 li
120.943 103.096 li
120.583 102.81 li
120.163 102.63 li
119.776 102.577 li
119.833 102.569 li
120.289 102.633 li
120.709 102.807 li
121.066 103.099 li
121.34 103.464 li
121.513 103.903 li
121.577 104.368 li
121.513 104.834 li
121.34 105.263 li
121.066 105.637 li
120.709 105.929 li
120.289 106.103 li
119.833 106.167 li
111.468 106.167 mo
111.402 106.158 li
111.791 106.105 li
112.211 105.926 li
112.572 105.639 li
112.848 105.267 li
113.022 104.833 li
113.081 104.368 li
113.022 103.902 li
112.848 103.468 li
112.572 103.096 li
112.211 102.81 li
111.791 102.63 li
111.407 102.578 li
111.468 102.569 li
111.915 102.633 li
112.335 102.807 li
112.692 103.099 li
112.974 103.464 li
113.148 103.903 li
113.203 104.368 li
113.148 104.834 li
112.974 105.263 li
112.692 105.637 li
112.335 105.929 li
111.915 106.103 li
111.468 106.167 li
103.094 106.167 mo
103.03 106.158 li
103.42 106.105 li
103.839 105.926 li
104.199 105.639 li
104.476 105.267 li
104.65 104.833 li
104.709 104.368 li
104.65 103.902 li
104.476 103.468 li
104.199 103.096 li
103.839 102.81 li
103.42 102.63 li
103.035 102.578 li
103.094 102.569 li
103.541 102.633 li
103.961 102.807 li
104.327 103.099 li
104.6 103.464 li
104.774 103.903 li
104.829 104.368 li
104.774 104.834 li
104.6 105.263 li
104.327 105.637 li
103.961 105.929 li
103.541 106.103 li
103.094 106.167 li
94.6008 106.167 mo
94.4717 106.149 li
94.598 106.166 li
94.7845 106.141 li
94.6008 106.167 li
86.2283 106.167 mo
86.2283 106.166 li
86.3736 106.146 li
86.2283 106.167 li
136.947 106.088 mo
137.326 105.926 li
137.596 105.711 li
137.33 105.929 li
136.947 106.088 li
94.1056 106.087 mo
93.7245 105.929 li
93.4509 105.705 li
93.7278 105.926 li
94.1056 106.087 li
135.883 106.053 mo
135.586 105.929 li
135.401 105.778 li
135.587 105.926 li
135.883 106.053 li
95.181 106.048 mo
95.4676 105.926 li
95.6449 105.785 li
95.4686 105.929 li
95.181 106.048 li
153.83 106.028 mo
154.07 105.926 li
154.43 105.639 li
154.64 105.356 li
154.434 105.637 li
154.069 105.929 li
153.83 106.028 li
144.185 106.023 mo
143.96 105.929 li
143.595 105.637 li
143.456 105.448 li
143.598 105.639 li
143.958 105.926 li
144.185 106.023 li
86.8767 106.02 mo
87.096 105.926 li
87.4563 105.639 li
87.5984 105.448 li
87.4598 105.637 li
87.0946 105.929 li
86.8767 106.02 li
145.527 105.999 mo
145.698 105.926 li
145.913 105.755 li
145.695 105.929 li
145.527 105.999 li
152.49 105.994 mo
152.334 105.929 li
152.17 105.799 li
152.33 105.926 li
152.49 105.994 li
146.06 105.638 mo
146.061 105.636 li
146.06 105.637 li
146.06 105.638 li
134.999 105.333 mo
134.946 105.263 li
134.773 104.834 li
134.733 104.495 li
134.776 104.833 li
134.95 105.267 li
134.999 105.333 li
96.0804 105.299 mo
96.1043 105.267 li
96.2781 104.833 li
96.3183 104.517 li
96.2811 104.834 li
96.1077 105.263 li
96.0804 105.299 li
154.707 105.264 mo
154.88 104.833 li
154.901 104.668 li
154.882 104.834 li
154.708 105.263 li
154.707 105.264 li
143.262 105.119 mo
143.147 104.834 li
143.134 104.724 li
143.148 104.833 li
143.262 105.119 li
87.8206 105.048 mo
87.9066 104.833 li
87.9128 104.785 li
87.907 104.834 li
87.8206 105.048 li
146.52 104.747 mo
146.568 104.368 li
146.521 104.002 li
146.572 104.368 li
146.52 104.747 li
151.501 104.685 mo
151.457 104.368 li
151.499 104.064 li
151.46 104.368 li
151.501 104.685 li
138.178 104.514 mo
138.196 104.368 li
138.179 104.234 li
138.198 104.368 li
138.178 104.514 li
92.8767 104.514 mo
92.8568 104.368 li
92.8751 104.234 li
92.8582 104.368 li
92.8767 104.514 li
134.734 104.229 mo
134.773 103.903 li
134.946 103.464 li
135.102 103.263 li
134.95 103.468 li
134.776 103.902 li
134.734 104.229 li
96.3168 104.206 mo
96.2781 103.902 li
96.1043 103.468 li
95.9628 103.277 li
96.1077 103.464 li
96.2811 103.903 li
96.3168 104.206 li
154.9 104.055 mo
154.88 103.902 li
154.706 103.468 li
154.43 103.096 li
154.07 102.81 li
153.88 102.729 li
154.069 102.807 li
154.434 103.099 li
154.708 103.464 li
154.882 103.903 li
154.9 104.055 li
143.135 104 mo
143.147 103.903 li
143.321 103.464 li
143.595 103.099 li
143.597 103.097 li
143.322 103.468 li
143.148 103.902 li
143.135 104 li
87.9112 103.938 mo
87.9066 103.902 li
87.7328 103.468 li
87.4576 103.097 li
87.4598 103.099 li
87.7337 103.464 li
87.907 103.903 li
87.9112 103.938 li
146.396 103.62 mo
146.335 103.468 li
146.157 103.229 li
146.334 103.464 li
146.396 103.62 li
151.689 103.479 mo
151.695 103.464 li
151.842 103.268 li
151.693 103.468 li
151.689 103.479 li
143.682 103.029 mo
143.96 102.807 li
144.136 102.734 li
143.958 102.81 li
143.682 103.029 li
87.3696 103.027 mo
87.096 102.81 li
86.9237 102.736 li
87.0946 102.807 li
87.3696 103.027 li
93.498 102.992 mo
93.7245 102.807 li
94.043 102.675 li
93.7278 102.81 li
93.498 102.992 li
137.553 102.99 mo
137.326 102.81 li
137.007 102.673 li
137.33 102.807 li
137.553 102.99 li
135.437 102.928 mo
135.586 102.807 li
135.829 102.706 li
135.587 102.81 li
135.437 102.928 li
95.6111 102.924 mo
95.4676 102.81 li
95.2329 102.709 li
95.4686 102.807 li
95.6111 102.924 li
145.78 102.875 mo
145.698 102.81 li
145.571 102.756 li
145.695 102.807 li
145.78 102.875 li
152.302 102.832 mo
152.334 102.807 li
152.445 102.761 li
152.33 102.81 li
152.302 102.832 li
158.012 98.7337 mo
86.2283 98.7337 li
86.2283 98.7328 li
158.012 98.7331 li
158.012 98.7337 li
f
128.144 106.158 mo
127.76 106.103 li
127.339 105.929 li
126.974 105.637 li
126.7 105.263 li
126.527 104.834 li
126.472 104.368 li
126.527 103.903 li
126.7 103.464 li
126.974 103.099 li
127.339 102.807 li
127.76 102.633 li
128.149 102.577 li
128.535 102.63 li
128.954 102.81 li
129.315 103.096 li
129.591 103.468 li
129.765 103.902 li
129.825 104.368 li
129.765 104.833 li
129.591 105.267 li
129.315 105.639 li
128.954 105.926 li
128.535 106.105 li
128.144 106.158 li
.556863 .552941 .529412 rgb
f
111.402 106.158 mo
111.011 106.103 li
110.591 105.929 li
110.235 105.637 li
109.961 105.263 li
109.787 104.834 li
109.723 104.368 li
109.787 103.903 li
109.961 103.464 li
110.235 103.099 li
110.591 102.807 li
111.011 102.633 li
111.407 102.578 li
111.791 102.63 li
112.211 102.81 li
112.572 103.096 li
112.848 103.468 li
113.022 103.902 li
113.081 104.368 li
113.022 104.833 li
112.848 105.267 li
112.572 105.639 li
112.211 105.926 li
111.791 106.105 li
111.402 106.158 li
f
89.5145 132.432 mo
79.5355 132.432 li
80.7225 132.432 li
81.5672 132.432 li
86.2283 132.432 li
89.5145 132.432 li
.552941 .509804 .509804 rgb
f
89.5145 132.432 mo
86.2283 132.432 li
81.5672 132.432 li
80.72 132.432 li
80.7225 98.7327 li
81.5672 98.7337 li
86.2283 98.7337 li
158.012 98.7337 li
279.297 98.7337 li
279.297 102.66 li
279.295 102.66 li
279.226 102.63 li
278.776 102.569 li
278.326 102.63 li
278.048 102.749 li
277.909 102.807 li
277.782 102.908 li
277.546 103.096 li
277.497 103.161 li
277.269 103.464 li
277.172 103.712 li
277.095 103.902 li
277.083 104.002 li
277.032 104.368 li
277.084 104.747 li
277.095 104.833 li
277.269 105.267 li
277.503 105.582 li
277.544 105.637 li
277.545 105.638 li
277.546 105.639 li
277.622 105.7 li
277.909 105.929 li
278.095 106.007 li
278.326 106.105 li
278.645 106.149 li
278.776 106.167 li
278.907 106.149 li
279.226 106.105 li
279.279 106.083 li
279.297 106.076 li
279.297 107.806 li
89.5145 107.806 li
89.5145 132.432 li
85.7774 130.394 mo
85.7792 130.394 li
86.2269 130.459 li
86.2283 130.459 li
86.6742 130.394 li
86.6764 130.393 li
86.6765 130.393 li
87.096 130.214 li
87.2899 130.06 li
87.4598 129.929 li
87.7337 129.555 li
87.907 129.125 li
87.9167 129.042 li
87.9656 128.656 li
87.9072 128.196 li
87.907 128.194 li
87.907 128.194 li
87.9066 128.191 li
87.844 128.035 li
87.7337 127.756 li
87.4598 127.381 li
87.1096 127.109 li
87.096 127.098 li
87.0953 127.098 li
87.0946 127.098 li
86.6742 126.915 li
86.4228 126.884 li
86.2259 126.857 li
86.016 126.886 li
85.7792 126.915 li
85.4097 127.076 li
85.3563 127.098 li
85.2859 127.154 li
84.9939 127.381 li
84.7201 127.756 li
84.7198 127.756 li
84.7196 127.757 li
84.5457 128.191 li
84.5287 128.325 li
84.4828 128.659 li
84.5386 129.066 li
84.5457 129.122 li
84.5466 129.124 li
84.5467 129.125 li
84.5786 129.204 li
84.7196 129.556 li
84.8249 129.698 li
84.9939 129.929 li
85.0923 130.005 li
85.3563 130.214 li
85.7757 130.393 li
85.7774 130.394 li
270.235 106.143 mo
270.402 106.167 li
270.498 106.154 li
270.854 106.105 li
271.143 105.982 li
271.269 105.929 li
271.274 105.926 li
271.274 105.926 li
271.635 105.639 li
271.911 105.267 li
272.085 104.833 li
272.107 104.659 li
272.146 104.368 li
272.108 104.089 li
272.085 103.902 li
271.911 103.468 li
271.91 103.467 li
271.909 103.464 li
271.839 103.371 li
271.635 103.096 li
271.274 102.81 li
271.273 102.809 li
271.269 102.807 li
271.186 102.772 li
270.854 102.63 li
270.404 102.569 li
269.954 102.63 li
269.73 102.726 li
269.535 102.807 li
269.211 103.066 li
269.174 103.096 li
269.173 103.096 li
269.17 103.099 li
268.895 103.464 li
268.721 103.903 li
268.695 104.128 li
268.665 104.368 li
268.693 104.594 li
268.721 104.834 li
268.895 105.263 li
268.896 105.264 li
268.897 105.267 li
268.971 105.367 li
269.17 105.637 li
269.535 105.929 li
269.782 106.032 li
269.954 106.105 li
270.235 106.143 li
261.826 106.138 mo
262.028 106.167 li
262.13 106.153 li
262.482 106.105 li
262.536 106.082 li
262.905 105.929 li
263.131 105.744 li
263.263 105.639 li
263.539 105.267 li
263.713 104.833 li
263.771 104.375 li
263.772 104.368 li
263.772 104.368 li
263.772 104.368 li
263.713 103.902 li
263.539 103.468 li
263.263 103.096 li
263.094 102.962 li
262.905 102.807 li
262.598 102.68 li
262.482 102.63 li
262.032 102.569 li
262.028 102.569 li
262.028 102.569 li
262.021 102.57 li
261.582 102.63 li
261.423 102.698 li
261.161 102.807 li
260.983 102.952 li
260.803 103.096 li
260.701 103.233 li
260.521 103.464 li
260.348 103.903 li
260.294 104.362 li
260.293 104.368 li
260.293 104.368 li
260.293 104.368 li
260.348 104.834 li
260.521 105.263 li
260.624 105.399 li
260.803 105.639 li
260.943 105.751 li
261.161 105.929 li
261.477 106.06 li
261.582 106.105 li
261.826 106.138 li
253.511 106.146 mo
253.663 106.167 li
253.83 106.143 li
254.111 106.105 li
254.262 106.04 li
254.531 105.929 li
254.7 105.791 li
254.89 105.639 li
255.167 105.267 li
255.167 105.267 li
255.17 105.263 li
255.344 104.834 li
255.377 104.548 li
255.4 104.368 li
255.376 104.176 li
255.344 103.903 li
255.17 103.464 li
255.036 103.292 li
254.89 103.096 li
254.668 102.919 li
254.531 102.807 li
254.31 102.716 li
254.111 102.63 li
253.661 102.569 li
253.211 102.63 li
253.122 102.668 li
252.787 102.807 li
252.554 102.997 li
252.43 103.096 li
252.232 103.363 li
252.156 103.464 li
252.155 103.467 li
252.154 103.468 li
251.98 103.902 li
251.944 104.184 li
251.919 104.368 li
251.946 104.564 li
251.98 104.833 li
252.154 105.267 li
252.43 105.639 li
252.509 105.702 li
252.787 105.929 li
253.186 106.095 li
253.211 106.105 li
253.511 106.146 li
245.158 106.149 mo
245.289 106.167 li
245.42 106.149 li
245.739 106.105 li
245.955 106.013 li
246.157 105.929 li
246.522 105.637 li
246.611 105.516 li
246.796 105.267 li
246.95 104.882 li
246.97 104.834 li
246.97 104.826 li
247.028 104.368 li
246.97 103.902 li
246.95 103.853 li
246.796 103.464 li
246.522 103.099 li
246.521 103.098 li
246.519 103.096 li
246.377 102.983 li
246.157 102.807 li
246 102.742 li
245.739 102.63 li
245.289 102.569 li
244.839 102.63 li
244.561 102.749 li
244.422 102.807 li
244.298 102.906 li
244.058 103.096 li
244.003 103.17 li
243.782 103.464 li
243.684 103.712 li
243.608 103.902 li
243.598 103.985 li
243.545 104.368 li
243.599 104.761 li
243.608 104.833 li
243.782 105.267 li
244.023 105.591 li
244.056 105.637 li
244.057 105.638 li
244.058 105.639 li
244.146 105.709 li
244.422 105.929 li
244.608 106.007 li
244.839 106.105 li
245.158 106.149 li
236.748 106.143 mo
236.915 106.167 li
237.077 106.145 li
237.367 106.105 li
237.371 106.103 li
237.372 106.103 li
237.782 105.929 li
237.787 105.926 li
237.787 105.926 li
238.147 105.639 li
238.424 105.267 li
238.597 104.833 li
238.625 104.615 li
238.659 104.368 li
238.628 104.137 li
238.597 103.902 li
238.424 103.468 li
238.423 103.467 li
238.422 103.464 li
238.317 103.324 li
238.147 103.096 li
237.787 102.81 li
237.786 102.809 li
237.782 102.807 li
237.535 102.702 li
237.367 102.63 li
236.917 102.569 li
236.467 102.63 li
236.257 102.72 li
236.048 102.807 li
235.927 102.905 li
235.687 103.096 li
235.54 103.293 li
235.408 103.464 li
235.234 103.903 li
235.202 104.176 li
235.178 104.368 li
235.201 104.548 li
235.234 104.834 li
235.408 105.263 li
235.411 105.267 li
235.411 105.267 li
235.687 105.639 li
235.895 105.804 li
236.048 105.929 li
236.306 106.037 li
236.467 106.105 li
236.748 106.143 li
228.454 106.154 mo
228.55 106.167 li
228.761 106.137 li
228.996 106.105 li
229.074 106.072 li
229.418 105.929 li
229.644 105.744 li
229.775 105.639 li
230.052 105.267 li
230.225 104.833 li
230.284 104.375 li
230.285 104.368 li
230.285 104.368 li
230.285 104.368 li
230.225 103.902 li
230.052 103.468 li
229.775 103.096 li
229.607 102.962 li
229.418 102.807 li
229.13 102.688 li
228.996 102.63 li
228.557 102.57 li
228.55 102.569 li
228.549 102.569 li
228.546 102.569 li
228.096 102.63 li
227.953 102.691 li
227.674 102.807 li
227.497 102.951 li
227.315 103.096 li
227.039 103.468 li
226.98 103.614 li
226.86 103.903 li
226.806 104.362 li
226.806 104.368 li
226.806 104.368 li
226.806 104.368 li
226.86 104.834 li
226.947 105.038 li
227.039 105.267 li
227.315 105.639 li
227.458 105.753 li
227.674 105.929 li
228.012 106.07 li
228.096 106.105 li
228.454 106.154 li
220.024 106.146 mo
220.176 106.167 li
220.35 106.142 li
220.624 106.105 li
220.766 106.044 li
221.044 105.929 li
221.184 105.814 li
221.404 105.639 li
221.68 105.267 li
221.682 105.264 li
221.682 105.263 li
221.856 104.834 li
221.884 104.594 li
221.913 104.368 li
221.883 104.128 li
221.856 103.903 li
221.682 103.464 li
221.571 103.321 li
221.404 103.096 li
221.155 102.898 li
221.044 102.807 li
220.821 102.714 li
220.624 102.63 li
220.174 102.569 li
219.723 102.63 li
219.512 102.721 li
219.308 102.807 li
219.305 102.809 li
219.303 102.81 li
218.943 103.096 li
218.739 103.371 li
218.669 103.464 li
218.668 103.467 li
218.667 103.468 li
218.493 103.902 li
218.464 104.136 li
218.431 104.368 li
218.465 104.61 li
218.493 104.833 li
218.667 105.267 li
218.943 105.639 li
219.303 105.926 li
219.304 105.926 li
219.308 105.929 li
219.662 106.079 li
219.723 106.105 li
220.024 106.146 li
211.67 106.149 mo
211.802 106.167 li
211.933 106.149 li
212.252 106.105 li
212.467 106.013 li
212.67 105.929 li
213.035 105.637 li
213.127 105.511 li
213.308 105.267 li
213.463 104.882 li
213.482 104.834 li
213.546 104.368 li
213.483 103.91 li
213.482 103.902 li
213.463 103.853 li
213.308 103.464 li
213.035 103.099 li
213.034 103.098 li
213.032 103.096 li
212.895 102.987 li
212.67 102.807 li
212.513 102.742 li
212.252 102.63 li
211.802 102.569 li
211.351 102.63 li
211.091 102.742 li
210.934 102.807 li
210.715 102.983 li
210.572 103.096 li
210.57 103.098 li
210.569 103.099 li
210.295 103.464 li
210.134 103.871 li
210.122 103.902 li
210.062 104.368 li
210.121 104.826 li
210.122 104.834 li
210.165 104.941 li
210.296 105.267 li
210.454 105.481 li
210.569 105.637 li
210.934 105.929 li
211.136 106.013 li
211.351 106.105 li
211.67 106.149 li
203.243 106.141 mo
203.428 106.167 li
203.56 106.149 li
203.881 106.105 li
203.903 106.096 li
204.305 105.929 li
204.614 105.676 li
204.66 105.639 li
204.936 105.267 li
205.11 104.833 li
205.14 104.603 li
205.172 104.368 li
205.142 104.149 li
205.11 103.902 li
204.936 103.468 li
204.935 103.467 li
204.934 103.464 li
204.836 103.333 li
204.66 103.096 li
204.565 103.02 li
204.305 102.807 li
203.964 102.666 li
203.881 102.63 li
203.43 102.569 li
202.98 102.63 li
202.783 102.714 li
202.56 102.807 li
202.439 102.906 li
202.2 103.096 li
202.054 103.292 li
201.921 103.464 li
201.748 103.903 li
201.722 104.122 li
201.69 104.368 li
201.72 104.599 li
201.748 104.834 li
201.921 105.263 li
201.923 105.267 li
201.924 105.267 li
202.2 105.639 li
202.406 105.803 li
202.56 105.929 li
202.838 106.044 li
202.98 106.105 li
203.243 106.141 li
194.979 106.156 mo
195.063 106.167 li
195.273 106.137 li
195.509 106.105 li
195.606 106.063 li
195.93 105.929 li
196.146 105.752 li
196.288 105.639 li
196.486 105.374 li
196.57 105.263 li
196.743 104.834 li
196.792 104.414 li
196.798 104.368 li
196.791 104.308 li
196.743 103.903 li
196.57 103.464 li
196.394 103.238 li
196.288 103.096 li
196.107 102.951 li
195.93 102.807 li
195.663 102.696 li
195.509 102.63 li
195.08 102.572 li
195.063 102.569 li
195.062 102.569 li
195.058 102.569 li
194.608 102.63 li
194.474 102.688 li
194.186 102.807 li
193.989 102.968 li
193.828 103.096 li
193.552 103.468 li
193.378 103.902 li
193.324 104.327 li
193.319 104.368 li
193.326 104.422 li
193.378 104.833 li
193.552 105.267 li
193.828 105.639 li
193.95 105.736 li
194.186 105.929 li
194.53 106.072 li
194.608 106.105 li
194.979 106.156 li
186.527 106.145 mo
186.689 106.167 li
186.856 106.143 li
187.137 106.105 li
187.303 106.034 li
187.556 105.929 li
187.922 105.637 li
188.163 105.308 li
188.193 105.267 li
188.194 105.266 li
188.196 105.263 li
188.369 104.834 li
188.392 104.642 li
188.427 104.368 li
188.39 104.083 li
188.369 103.903 li
188.196 103.464 li
187.922 103.099 li
187.556 102.807 li
187.354 102.723 li
187.137 102.63 li
186.687 102.569 li
186.237 102.63 li
186.089 102.694 li
185.821 102.807 li
185.793 102.829 li
185.457 103.096 li
185.31 103.294 li
185.182 103.464 li
185.176 103.48 li
185.007 103.902 li
184.986 104.064 li
184.944 104.368 li
184.988 104.685 li
185.007 104.833 li
185.18 105.267 li
185.457 105.639 li
185.684 105.82 li
185.821 105.929 li
186.232 106.103 li
186.232 106.103 li
186.237 106.105 li
186.527 106.145 li
178.165 106.146 mo
178.314 106.167 li
178.431 106.151 li
178.765 106.105 li
179.001 106.004 li
179.182 105.929 li
179.469 105.7 li
179.545 105.639 li
179.546 105.638 li
179.547 105.637 li
179.583 105.589 li
179.822 105.267 li
179.995 104.833 li
180.001 104.793 li
180.059 104.368 li
180.002 103.955 li
179.995 103.902 li
179.926 103.728 li
179.821 103.464 li
179.602 103.172 li
179.545 103.096 li
179.309 102.908 li
179.182 102.807 li
179.047 102.751 li
178.765 102.63 li
178.315 102.569 li
177.865 102.63 li
177.614 102.738 li
177.447 102.807 li
177.186 103.016 li
177.085 103.096 li
177.084 103.097 li
177.082 103.099 li
176.808 103.464 li
176.634 103.903 li
176.629 103.948 li
176.575 104.368 li
176.627 104.776 li
176.634 104.834 li
176.702 105 li
176.808 105.267 li
176.959 105.469 li
177.082 105.637 li
177.447 105.929 li
177.664 106.019 li
177.865 106.105 li
178.165 106.146 li
169.756 106.141 mo
169.94 106.167 li
170.068 106.149 li
170.393 106.105 li
170.431 106.089 li
170.817 105.929 li
171.083 105.711 li
171.174 105.639 li
171.45 105.267 li
171.624 104.833 li
171.662 104.53 li
171.684 104.368 li
171.664 104.219 li
171.624 103.902 li
171.45 103.468 li
171.174 103.096 li
171.041 102.99 li
170.817 102.807 li
170.492 102.673 li
170.393 102.63 li
169.943 102.569 li
169.493 102.63 li
169.302 102.712 li
169.073 102.807 li
168.938 102.918 li
168.713 103.096 li
168.579 103.276 li
168.433 103.464 li
168.26 103.903 li
168.225 104.203 li
168.204 104.368 li
168.223 104.52 li
168.26 104.834 li
168.433 105.263 li
168.461 105.3 li
168.713 105.639 li
168.903 105.79 li
169.073 105.929 li
169.356 106.046 li
169.493 106.105 li
169.756 106.141 li
161.477 106.153 mo
161.576 106.167 li
161.778 106.138 li
162.022 106.105 li
162.128 106.06 li
162.443 105.929 li
162.648 105.761 li
162.802 105.639 li
163.007 105.362 li
163.082 105.263 li
163.256 104.834 li
163.3 104.455 li
163.311 104.368 li
163.299 104.269 li
163.256 103.903 li
163.082 103.464 li
162.916 103.249 li
162.802 103.096 li
162.611 102.945 li
162.443 102.807 li
162.182 102.699 li
162.022 102.63 li
161.583 102.57 li
161.576 102.569 li
161.575 102.569 li
161.572 102.569 li
161.121 102.63 li
161 102.682 li
160.699 102.807 li
160.489 102.979 li
160.342 103.096 li
160.065 103.468 li
159.891 103.902 li
159.838 104.322 li
159.831 104.368 li
159.84 104.428 li
159.891 104.833 li
160.065 105.267 li
160.342 105.639 li
160.448 105.724 li
160.699 105.929 li
161.057 106.078 li
161.121 106.105 li
161.477 106.153 li
153.093 106.152 mo
153.201 106.167 li
153.358 106.145 li
153.65 106.105 li
153.83 106.028 li
154.069 105.929 li
154.434 105.637 li
154.64 105.356 li
154.706 105.267 li
154.707 105.264 li
154.708 105.263 li
154.882 104.834 li
154.901 104.668 li
154.939 104.368 li
154.9 104.055 li
154.882 103.903 li
154.708 103.464 li
154.434 103.099 li
154.069 102.807 li
153.88 102.729 li
153.65 102.63 li
153.2 102.569 li
152.75 102.63 li
152.445 102.761 li
152.334 102.807 li
152.302 102.832 li
151.97 103.096 li
151.842 103.268 li
151.695 103.464 li
151.689 103.479 li
151.52 103.902 li
151.499 104.064 li
151.457 104.368 li
151.501 104.685 li
151.52 104.833 li
151.693 105.267 li
151.97 105.639 li
152.17 105.799 li
152.334 105.929 li
152.49 105.994 li
152.75 106.105 li
153.093 106.152 li
144.678 106.146 mo
144.827 106.167 li
144.941 106.151 li
145.279 106.105 li
145.527 105.999 li
145.695 105.929 li
145.913 105.755 li
146.058 105.639 li
146.06 105.638 li
146.06 105.637 li
146.061 105.636 li
146.335 105.267 li
146.509 104.833 li
146.52 104.747 li
146.572 104.368 li
146.521 104.002 li
146.509 103.902 li
146.396 103.62 li
146.334 103.464 li
146.157 103.229 li
146.058 103.096 li
145.78 102.875 li
145.695 102.807 li
145.571 102.756 li
145.279 102.63 li
144.828 102.569 li
144.378 102.63 li
144.136 102.734 li
143.96 102.807 li
143.682 103.029 li
143.598 103.096 li
143.597 103.097 li
143.595 103.099 li
143.321 103.464 li
143.147 103.903 li
143.135 104 li
143.089 104.368 li
143.134 104.724 li
143.147 104.834 li
143.262 105.119 li
143.322 105.267 li
143.456 105.448 li
143.595 105.637 li
143.96 105.929 li
144.185 106.023 li
144.378 106.105 li
144.678 106.146 li
136.26 106.14 mo
136.453 106.167 li
136.572 106.151 li
136.907 106.105 li
136.947 106.088 li
137.33 105.929 li
137.596 105.711 li
137.686 105.639 li
137.963 105.267 li
138.137 104.833 li
138.178 104.514 li
138.198 104.368 li
138.179 104.234 li
138.137 103.902 li
137.963 103.468 li
137.686 103.096 li
137.553 102.99 li
137.33 102.807 li
137.007 102.673 li
136.907 102.63 li
136.456 102.569 li
136.006 102.63 li
135.829 102.706 li
135.586 102.807 li
135.437 102.928 li
135.226 103.096 li
135.102 103.263 li
134.946 103.464 li
134.773 103.903 li
134.734 104.229 li
134.717 104.368 li
134.733 104.495 li
134.773 104.834 li
134.946 105.263 li
134.999 105.333 li
135.226 105.639 li
135.401 105.778 li
135.586 105.929 li
135.883 106.053 li
136.006 106.105 li
136.26 106.14 li
128.144 106.158 mo
128.207 106.167 li
128.654 106.103 li
129.074 105.929 li
129.44 105.637 li
129.714 105.263 li
129.887 104.834 li
129.951 104.368 li
129.887 103.903 li
129.714 103.464 li
129.44 103.099 li
129.074 102.807 li
128.654 102.633 li
128.207 102.569 li
128.149 102.577 li
127.76 102.633 li
127.339 102.807 li
126.974 103.099 li
126.7 103.464 li
126.527 103.903 li
126.472 104.368 li
126.527 104.834 li
126.7 105.263 li
126.974 105.637 li
127.339 105.929 li
127.76 106.103 li
128.144 106.158 li
119.771 106.158 mo
119.833 106.167 li
120.289 106.103 li
120.709 105.929 li
121.066 105.637 li
121.34 105.263 li
121.513 104.834 li
121.577 104.368 li
121.513 103.903 li
121.34 103.464 li
121.066 103.099 li
120.709 102.807 li
120.289 102.633 li
119.833 102.569 li
119.776 102.577 li
119.713 102.569 li
119.263 102.63 li
118.843 102.81 li
118.483 103.096 li
118.206 103.468 li
118.033 103.902 li
117.973 104.368 li
118.033 104.833 li
118.206 105.267 li
118.483 105.639 li
118.843 105.926 li
119.263 106.105 li
119.713 106.166 li
119.771 106.158 li
111.402 106.158 mo
111.468 106.167 li
111.915 106.103 li
112.335 105.929 li
112.692 105.637 li
112.974 105.263 li
113.148 104.834 li
113.203 104.368 li
113.148 103.903 li
112.974 103.464 li
112.692 103.099 li
112.335 102.807 li
111.915 102.633 li
111.468 102.569 li
111.407 102.578 li
111.011 102.633 li
110.591 102.807 li
110.235 103.099 li
109.961 103.464 li
109.787 103.903 li
109.723 104.368 li
109.787 104.834 li
109.961 105.263 li
110.235 105.637 li
110.591 105.929 li
111.011 106.103 li
111.402 106.158 li
103.03 106.158 mo
103.094 106.167 li
103.541 106.103 li
103.961 105.929 li
104.327 105.637 li
104.6 105.263 li
104.774 104.834 li
104.829 104.368 li
104.774 103.903 li
104.6 103.464 li
104.327 103.099 li
103.961 102.807 li
103.541 102.633 li
103.094 102.569 li
103.035 102.578 li
102.97 102.569 li
102.519 102.63 li
102.1 102.81 li
101.74 103.096 li
101.463 103.468 li
101.289 103.902 li
101.23 104.368 li
101.289 104.833 li
101.463 105.267 li
101.74 105.639 li
102.1 105.926 li
102.519 106.105 li
102.97 106.166 li
103.03 106.158 li
94.4717 106.149 mo
94.6008 106.167 li
94.7845 106.141 li
95.0481 106.105 li
95.181 106.048 li
95.4686 105.929 li
95.6449 105.785 li
95.828 105.639 li
96.0804 105.299 li
96.1077 105.263 li
96.2811 104.834 li
96.3183 104.517 li
96.3373 104.368 li
96.3168 104.206 li
96.2811 103.903 li
96.1077 103.464 li
95.9628 103.277 li
95.828 103.096 li
95.6111 102.924 li
95.4686 102.807 li
95.2329 102.709 li
95.0481 102.63 li
94.598 102.569 li
94.1477 102.63 li
94.043 102.675 li
93.7245 102.807 li
93.498 102.992 li
93.368 103.096 li
93.0911 103.468 li
92.9173 103.902 li
92.8751 104.234 li
92.8568 104.368 li
92.8767 104.514 li
92.9173 104.833 li
93.0911 105.267 li
93.368 105.639 li
93.4509 105.705 li
93.7245 105.929 li
94.1056 106.087 li
94.1477 106.105 li
94.4717 106.149 li
86.1109 106.151 mo
86.2269 106.167 li
86.2283 106.167 li
86.3736 106.146 li
86.6765 106.105 li
86.8767 106.02 li
87.0946 105.929 li
87.4598 105.637 li
87.5984 105.448 li
87.7328 105.267 li
87.8206 105.048 li
87.907 104.834 li
87.9128 104.785 li
87.9656 104.368 li
87.9112 103.938 li
87.907 103.903 li
87.7337 103.464 li
87.4598 103.099 li
87.4576 103.097 li
87.4563 103.096 li
87.3696 103.027 li
87.0946 102.807 li
86.9237 102.736 li
86.6765 102.63 li
86.2259 102.569 li
85.7757 102.63 li
85.4953 102.75 li
85.3591 102.807 li
85.2258 102.913 li
84.9959 103.096 li
84.9393 103.172 li
84.7201 103.464 li
84.6387 103.67 li
84.5457 103.902 li
84.5328 104.004 li
84.4828 104.368 li
84.5345 104.745 li
84.5457 104.833 li
84.7196 105.267 li
84.9584 105.589 li
84.9939 105.637 li
84.9952 105.638 li
84.9959 105.639 li
85.0688 105.697 li
85.3591 105.929 li
85.5405 106.005 li
85.7757 106.105 li
86.1109 106.151 li
.54902 .227451 .254902 rgb
f
80.7225 132.432 mo
79.5355 132.432 li
79.5355 98.7327 li
80.7225 98.7328 li
80.7225 98.7327 li
80.7225 132.432 li
.305882 .227451 .152941 rgb
f
278.776 106.166 mo
278.645 106.149 li
278.326 106.105 li
278.095 106.007 li
277.906 105.926 li
277.622 105.7 li
277.546 105.639 li
277.545 105.638 li
277.503 105.582 li
277.269 105.267 li
277.095 104.833 li
277.084 104.747 li
277.036 104.368 li
277.083 104.002 li
277.095 103.902 li
277.172 103.712 li
277.269 103.468 li
277.497 103.161 li
277.546 103.096 li
277.782 102.908 li
277.906 102.81 li
278.048 102.749 li
278.326 102.63 li
278.776 102.569 li
279.226 102.63 li
279.295 102.66 li
279.297 102.661 li
279.297 106.075 li
279.279 106.083 li
279.226 106.105 li
278.907 106.149 li
278.776 106.166 li
.556863 .552941 .529412 rgb
f
86.2259 106.166 mo
86.1109 106.151 li
85.7757 106.105 li
85.5405 106.005 li
85.3563 105.926 li
85.0688 105.697 li
84.9959 105.639 li
84.9952 105.638 li
84.9584 105.589 li
84.7196 105.267 li
84.5457 104.833 li
84.5345 104.745 li
84.4866 104.368 li
84.5328 104.004 li
84.5457 103.902 li
84.6387 103.67 li
84.7196 103.468 li
84.9393 103.172 li
84.9959 103.096 li
85.2258 102.913 li
85.3563 102.81 li
85.4953 102.75 li
85.7757 102.63 li
86.2259 102.569 li
86.6765 102.63 li
86.9237 102.736 li
87.096 102.81 li
87.3696 103.027 li
87.4563 103.096 li
87.4576 103.097 li
87.7328 103.468 li
87.9066 103.902 li
87.9112 103.938 li
87.9656 104.368 li
87.9128 104.785 li
87.9066 104.833 li
87.8206 105.048 li
87.7328 105.267 li
87.5984 105.448 li
87.4563 105.639 li
87.096 105.926 li
86.8767 106.02 li
86.6765 106.105 li
86.3736 106.146 li
86.2283 106.166 li
86.2259 106.166 li
f
94.598 106.166 mo
94.4717 106.149 li
94.1477 106.105 li
94.1056 106.087 li
93.7278 105.926 li
93.4509 105.705 li
93.368 105.639 li
93.0911 105.267 li
92.9173 104.833 li
92.8767 104.514 li
92.8582 104.368 li
92.8751 104.234 li
92.9173 103.902 li
93.0911 103.468 li
93.368 103.096 li
93.498 102.992 li
93.7278 102.81 li
94.043 102.675 li
94.1477 102.63 li
94.598 102.569 li
95.0481 102.63 li
95.2329 102.709 li
95.4676 102.81 li
95.6111 102.924 li
95.828 103.096 li
95.9628 103.277 li
96.1043 103.468 li
96.2781 103.902 li
96.3168 104.206 li
96.3373 104.368 li
96.3183 104.517 li
96.2781 104.833 li
96.1043 105.267 li
96.0804 105.299 li
95.828 105.639 li
95.6449 105.785 li
95.4676 105.926 li
95.181 106.048 li
95.0481 106.105 li
94.7845 106.141 li
94.598 106.166 li
f
102.97 106.166 mo
102.519 106.105 li
102.1 105.926 li
101.74 105.639 li
101.463 105.267 li
101.289 104.833 li
101.23 104.368 li
101.289 103.902 li
101.463 103.468 li
101.74 103.096 li
102.1 102.81 li
102.519 102.63 li
102.97 102.569 li
103.035 102.578 li
103.42 102.63 li
103.839 102.81 li
104.199 103.096 li
104.476 103.468 li
104.65 103.902 li
104.709 104.368 li
104.65 104.833 li
104.476 105.267 li
104.199 105.639 li
103.839 105.926 li
103.42 106.105 li
103.03 106.158 li
102.97 106.166 li
f
119.713 106.166 mo
119.263 106.105 li
118.843 105.926 li
118.483 105.639 li
118.206 105.267 li
118.033 104.833 li
117.973 104.368 li
118.033 103.902 li
118.206 103.468 li
118.483 103.096 li
118.843 102.81 li
119.263 102.63 li
119.713 102.569 li
119.776 102.577 li
120.163 102.63 li
120.583 102.81 li
120.943 103.096 li
121.22 103.468 li
121.393 103.902 li
121.452 104.368 li
121.393 104.833 li
121.22 105.267 li
120.943 105.639 li
120.583 105.926 li
120.163 106.105 li
119.771 106.158 li
119.713 106.166 li
f
136.456 106.166 mo
136.26 106.14 li
136.006 106.105 li
135.883 106.053 li
135.587 105.926 li
135.401 105.778 li
135.226 105.639 li
134.999 105.333 li
134.95 105.267 li
134.776 104.833 li
134.733 104.495 li
134.717 104.368 li
134.734 104.229 li
134.776 103.902 li
134.95 103.468 li
135.102 103.263 li
135.226 103.096 li
135.437 102.928 li
135.587 102.81 li
135.829 102.706 li
136.006 102.63 li
136.456 102.569 li
136.907 102.63 li
137.007 102.673 li
137.326 102.81 li
137.553 102.99 li
137.686 103.096 li
137.963 103.468 li
138.137 103.902 li
138.179 104.234 li
138.196 104.368 li
138.178 104.514 li
138.137 104.833 li
137.963 105.267 li
137.686 105.639 li
137.596 105.711 li
137.326 105.926 li
136.947 106.088 li
136.907 106.105 li
136.572 106.151 li
136.456 106.166 li
f
144.828 106.166 mo
144.678 106.146 li
144.378 106.105 li
144.185 106.023 li
143.958 105.926 li
143.598 105.639 li
143.456 105.448 li
143.322 105.267 li
143.262 105.119 li
143.148 104.833 li
143.134 104.724 li
143.089 104.368 li
143.135 104 li
143.148 103.902 li
143.322 103.468 li
143.597 103.097 li
143.598 103.096 li
143.682 103.029 li
143.958 102.81 li
144.136 102.734 li
144.378 102.63 li
144.828 102.569 li
145.279 102.63 li
145.571 102.756 li
145.698 102.81 li
145.78 102.875 li
146.058 103.096 li
146.157 103.229 li
146.335 103.468 li
146.396 103.62 li
146.509 103.902 li
146.521 104.002 li
146.568 104.368 li
146.52 104.747 li
146.509 104.833 li
146.335 105.267 li
146.061 105.636 li
146.06 105.638 li
146.058 105.639 li
145.913 105.755 li
145.698 105.926 li
145.527 105.999 li
145.279 106.105 li
144.941 106.151 li
144.828 106.166 li
f
153.2 106.166 mo
153.093 106.152 li
152.75 106.105 li
152.49 105.994 li
152.33 105.926 li
152.17 105.799 li
151.97 105.639 li
151.693 105.267 li
151.52 104.833 li
151.501 104.685 li
151.46 104.368 li
151.499 104.064 li
151.52 103.902 li
151.689 103.479 li
151.693 103.468 li
151.842 103.268 li
151.97 103.096 li
152.302 102.832 li
152.33 102.81 li
152.445 102.761 li
152.75 102.63 li
153.2 102.569 li
153.65 102.63 li
153.88 102.729 li
154.07 102.81 li
154.43 103.096 li
154.706 103.468 li
154.88 103.902 li
154.9 104.055 li
154.939 104.368 li
154.901 104.668 li
154.88 104.833 li
154.707 105.264 li
154.706 105.267 li
154.64 105.356 li
154.43 105.639 li
154.07 105.926 li
153.83 106.028 li
153.65 106.105 li
153.358 106.145 li
153.2 106.166 li
f
161.572 106.166 mo
161.477 106.153 li
161.121 106.105 li
161.057 106.078 li
160.702 105.926 li
160.448 105.724 li
160.342 105.639 li
160.065 105.267 li
159.891 104.833 li
159.84 104.428 li
159.832 104.368 li
159.838 104.322 li
159.891 103.902 li
160.065 103.468 li
160.342 103.096 li
160.489 102.979 li
160.702 102.81 li
161 102.682 li
161.121 102.63 li
161.572 102.569 li
161.575 102.569 li
161.583 102.57 li
162.022 102.63 li
162.182 102.699 li
162.441 102.81 li
162.611 102.945 li
162.802 103.096 li
162.916 103.249 li
163.078 103.468 li
163.252 103.902 li
163.299 104.269 li
163.311 104.368 li
163.3 104.455 li
163.252 104.833 li
163.078 105.267 li
163.007 105.362 li
162.802 105.639 li
162.648 105.761 li
162.441 105.926 li
162.128 106.06 li
162.022 106.105 li
161.778 106.138 li
161.572 106.166 li
f
169.943 106.166 mo
169.756 106.141 li
169.493 106.105 li
169.356 106.046 li
169.074 105.926 li
168.903 105.79 li
168.713 105.639 li
168.461 105.3 li
168.437 105.267 li
168.263 104.833 li
168.223 104.52 li
168.204 104.368 li
168.225 104.203 li
168.263 103.902 li
168.437 103.468 li
168.579 103.276 li
168.713 103.096 li
168.938 102.918 li
169.074 102.81 li
169.302 102.712 li
169.493 102.63 li
169.943 102.569 li
170.393 102.63 li
170.492 102.673 li
170.813 102.81 li
171.041 102.99 li
171.174 103.096 li
171.45 103.468 li
171.624 103.902 li
171.664 104.219 li
171.683 104.368 li
171.662 104.53 li
171.624 104.833 li
171.45 105.267 li
171.174 105.639 li
171.083 105.711 li
170.813 105.926 li
170.431 106.089 li
170.393 106.105 li
170.068 106.149 li
169.943 106.166 li
f
178.315 106.166 mo
178.165 106.146 li
177.865 106.105 li
177.664 106.019 li
177.445 105.926 li
177.085 105.639 li
176.959 105.469 li
176.808 105.267 li
176.702 105 li
176.635 104.833 li
176.627 104.776 li
176.575 104.368 li
176.629 103.948 li
176.635 103.902 li
176.808 103.468 li
177.084 103.097 li
177.085 103.096 li
177.186 103.016 li
177.445 102.81 li
177.614 102.738 li
177.865 102.63 li
178.315 102.569 li
178.765 102.63 li
179.047 102.751 li
179.185 102.81 li
179.309 102.908 li
179.545 103.096 li
179.602 103.172 li
179.822 103.468 li
179.926 103.728 li
179.995 103.902 li
180.002 103.955 li
180.054 104.368 li
180.001 104.793 li
179.995 104.833 li
179.822 105.267 li
179.583 105.589 li
179.546 105.638 li
179.545 105.639 li
179.469 105.7 li
179.185 105.926 li
179.001 106.004 li
178.765 106.105 li
178.431 106.151 li
178.315 106.166 li
f
186.687 106.166 mo
186.527 106.145 li
186.237 106.105 li
186.232 106.103 li
185.817 105.926 li
185.684 105.82 li
185.457 105.639 li
185.18 105.267 li
185.007 104.833 li
184.988 104.685 li
184.947 104.368 li
184.986 104.064 li
185.007 103.902 li
185.176 103.48 li
185.18 103.468 li
185.31 103.294 li
185.457 103.096 li
185.793 102.829 li
185.817 102.81 li
186.089 102.694 li
186.237 102.63 li
186.687 102.569 li
187.137 102.63 li
187.354 102.723 li
187.556 102.81 li
187.917 103.096 li
188.193 103.468 li
188.367 103.902 li
188.39 104.083 li
188.427 104.368 li
188.392 104.642 li
188.367 104.833 li
188.194 105.266 li
188.193 105.267 li
188.163 105.308 li
187.917 105.639 li
187.556 105.926 li
187.303 106.034 li
187.137 106.105 li
186.856 106.143 li
186.687 106.166 li
f
195.058 106.166 mo
194.979 106.156 li
194.608 106.105 li
194.53 106.072 li
194.189 105.926 li
193.95 105.736 li
193.828 105.639 li
193.552 105.267 li
193.378 104.833 li
193.326 104.422 li
193.319 104.368 li
193.324 104.327 li
193.378 103.902 li
193.552 103.468 li
193.828 103.096 li
193.989 102.968 li
194.189 102.81 li
194.474 102.688 li
194.608 102.63 li
195.058 102.569 li
195.062 102.569 li
195.08 102.572 li
195.509 102.63 li
195.663 102.696 li
195.929 102.81 li
196.107 102.951 li
196.288 103.096 li
196.394 103.238 li
196.565 103.468 li
196.739 103.902 li
196.791 104.308 li
196.798 104.368 li
196.792 104.414 li
196.739 104.833 li
196.565 105.267 li
196.486 105.374 li
196.288 105.639 li
196.146 105.752 li
195.929 105.926 li
195.606 106.063 li
195.509 106.105 li
195.273 106.137 li
195.058 106.166 li
f
203.43 106.166 mo
203.243 106.141 li
202.98 106.105 li
202.838 106.044 li
202.56 105.926 li
202.406 105.803 li
202.2 105.639 li
201.924 105.267 li
201.923 105.267 li
201.75 104.833 li
201.72 104.599 li
201.69 104.368 li
201.722 104.122 li
201.75 103.902 li
201.924 103.468 li
202.054 103.292 li
202.2 103.096 li
202.439 102.906 li
202.56 102.81 li
202.783 102.714 li
202.98 102.63 li
203.43 102.569 li
203.881 102.63 li
203.964 102.666 li
204.3 102.81 li
204.565 103.02 li
204.66 103.096 li
204.836 103.333 li
204.935 103.467 li
204.936 103.468 li
205.11 103.902 li
205.142 104.149 li
205.17 104.368 li
205.14 104.603 li
205.11 104.833 li
204.936 105.267 li
204.66 105.639 li
204.614 105.676 li
204.3 105.926 li
203.903 106.096 li
203.881 106.105 li
203.56 106.149 li
203.43 106.166 li
f
211.802 106.166 mo
211.67 106.149 li
211.351 106.105 li
211.136 106.013 li
210.932 105.926 li
210.572 105.639 li
210.454 105.481 li
210.296 105.267 li
210.165 104.941 li
210.122 104.833 li
210.121 104.826 li
210.062 104.368 li
210.122 103.902 li
210.134 103.871 li
210.296 103.468 li
210.57 103.098 li
210.572 103.096 li
210.715 102.983 li
210.932 102.81 li
211.091 102.742 li
211.351 102.63 li
211.802 102.569 li
212.252 102.63 li
212.513 102.742 li
212.672 102.81 li
212.895 102.987 li
213.032 103.096 li
213.034 103.098 li
213.308 103.468 li
213.463 103.853 li
213.482 103.902 li
213.483 103.91 li
213.542 104.368 li
213.482 104.833 li
213.463 104.882 li
213.308 105.267 li
213.127 105.511 li
213.032 105.639 li
212.672 105.926 li
212.467 106.013 li
212.252 106.105 li
211.933 106.149 li
211.802 106.166 li
f
220.174 106.166 mo
220.024 106.146 li
219.723 106.105 li
219.662 106.079 li
219.304 105.926 li
219.303 105.926 li
218.943 105.639 li
218.667 105.267 li
218.493 104.833 li
218.465 104.61 li
218.434 104.368 li
218.464 104.136 li
218.493 103.902 li
218.667 103.468 li
218.668 103.467 li
218.739 103.371 li
218.943 103.096 li
219.303 102.81 li
219.305 102.809 li
219.512 102.721 li
219.723 102.63 li
220.174 102.569 li
220.624 102.63 li
220.821 102.714 li
221.044 102.81 li
221.155 102.898 li
221.404 103.096 li
221.571 103.321 li
221.68 103.468 li
221.854 103.902 li
221.883 104.128 li
221.913 104.368 li
221.884 104.594 li
221.854 104.833 li
221.682 105.264 li
221.68 105.267 li
221.404 105.639 li
221.184 105.814 li
221.044 105.926 li
220.766 106.044 li
220.624 106.105 li
220.35 106.142 li
220.174 106.166 li
f
228.546 106.166 mo
228.454 106.154 li
228.096 106.105 li
228.012 106.07 li
227.676 105.926 li
227.458 105.753 li
227.315 105.639 li
227.039 105.267 li
226.947 105.038 li
226.865 104.833 li
226.806 104.368 li
226.806 104.368 li
226.806 104.362 li
226.865 103.902 li
226.98 103.614 li
227.039 103.468 li
227.315 103.096 li
227.497 102.951 li
227.676 102.81 li
227.953 102.691 li
228.096 102.63 li
228.546 102.569 li
228.549 102.569 li
228.557 102.57 li
228.996 102.63 li
229.13 102.688 li
229.415 102.81 li
229.607 102.962 li
229.775 103.096 li
230.052 103.468 li
230.225 103.902 li
230.285 104.368 li
230.285 104.368 li
230.284 104.375 li
230.225 104.833 li
230.052 105.267 li
229.775 105.639 li
229.644 105.744 li
229.415 105.926 li
229.074 106.072 li
228.996 106.105 li
228.761 106.137 li
228.546 106.166 li
f
236.917 106.166 mo
236.748 106.143 li
236.467 106.105 li
236.306 106.037 li
236.048 105.926 li
235.895 105.804 li
235.687 105.639 li
235.411 105.267 li
235.411 105.267 li
235.237 104.833 li
235.201 104.548 li
235.178 104.368 li
235.202 104.176 li
235.237 103.902 li
235.411 103.468 li
235.54 103.293 li
235.687 103.096 li
235.927 102.905 li
236.048 102.81 li
236.257 102.72 li
236.467 102.63 li
236.917 102.569 li
237.367 102.63 li
237.535 102.702 li
237.786 102.809 li
237.787 102.81 li
238.147 103.096 li
238.317 103.324 li
238.423 103.467 li
238.424 103.468 li
238.597 103.902 li
238.628 104.137 li
238.657 104.368 li
238.625 104.615 li
238.597 104.833 li
238.424 105.267 li
238.147 105.639 li
237.787 105.926 li
237.787 105.926 li
237.371 106.103 li
237.367 106.105 li
237.077 106.145 li
236.917 106.166 li
f
245.289 106.166 mo
245.158 106.149 li
244.839 106.105 li
244.608 106.007 li
244.419 105.926 li
244.146 105.709 li
244.058 105.639 li
244.057 105.638 li
244.023 105.591 li
243.782 105.267 li
243.608 104.833 li
243.599 104.761 li
243.55 104.368 li
243.598 103.985 li
243.608 103.902 li
243.684 103.712 li
243.782 103.468 li
244.003 103.17 li
244.058 103.096 li
244.298 102.906 li
244.419 102.81 li
244.561 102.749 li
244.839 102.63 li
245.289 102.569 li
245.739 102.63 li
246 102.742 li
246.159 102.81 li
246.377 102.983 li
246.519 103.096 li
246.521 103.098 li
246.796 103.468 li
246.95 103.853 li
246.97 103.902 li
247.028 104.368 li
246.97 104.826 li
246.97 104.833 li
246.95 104.882 li
246.796 105.267 li
246.611 105.516 li
246.519 105.639 li
246.159 105.926 li
245.955 106.013 li
245.739 106.105 li
245.42 106.149 li
245.289 106.166 li
f
253.661 106.166 mo
253.511 106.146 li
253.211 106.105 li
253.186 106.095 li
252.791 105.926 li
252.509 105.702 li
252.43 105.639 li
252.154 105.267 li
251.98 104.833 li
251.946 104.564 li
251.921 104.368 li
251.944 104.184 li
251.98 103.902 li
252.154 103.468 li
252.155 103.467 li
252.232 103.363 li
252.43 103.096 li
252.554 102.997 li
252.791 102.81 li
253.122 102.668 li
253.211 102.63 li
253.661 102.569 li
254.111 102.63 li
254.31 102.716 li
254.53 102.81 li
254.668 102.919 li
254.89 103.096 li
255.036 103.292 li
255.167 103.468 li
255.341 103.902 li
255.376 104.176 li
255.4 104.368 li
255.377 104.548 li
255.341 104.833 li
255.167 105.267 li
255.167 105.267 li
254.89 105.639 li
254.7 105.791 li
254.53 105.926 li
254.262 106.04 li
254.111 106.105 li
253.83 106.143 li
253.661 106.166 li
f
262.032 106.166 mo
261.826 106.138 li
261.582 106.105 li
261.477 106.06 li
261.163 105.926 li
260.943 105.751 li
260.803 105.639 li
260.624 105.399 li
260.526 105.267 li
260.352 104.833 li
260.293 104.368 li
260.293 104.368 li
260.294 104.362 li
260.352 103.902 li
260.526 103.468 li
260.701 103.233 li
260.803 103.096 li
260.983 102.952 li
261.163 102.81 li
261.423 102.698 li
261.582 102.63 li
262.021 102.57 li
262.028 102.569 li
262.032 102.569 li
262.482 102.63 li
262.598 102.68 li
262.902 102.81 li
263.094 102.962 li
263.263 103.096 li
263.539 103.468 li
263.713 103.902 li
263.772 104.368 li
263.772 104.368 li
263.771 104.375 li
263.713 104.833 li
263.539 105.267 li
263.263 105.639 li
263.131 105.744 li
262.902 105.926 li
262.536 106.082 li
262.482 106.105 li
262.13 106.153 li
262.032 106.166 li
f
270.404 106.166 mo
270.235 106.143 li
269.954 106.105 li
269.782 106.032 li
269.534 105.926 li
269.174 105.639 li
268.971 105.367 li
268.897 105.267 li
268.896 105.264 li
268.723 104.833 li
268.693 104.594 li
268.665 104.368 li
268.695 104.128 li
268.723 103.902 li
268.897 103.468 li
269.173 103.096 li
269.174 103.096 li
269.211 103.066 li
269.534 102.81 li
269.73 102.726 li
269.954 102.63 li
270.404 102.569 li
270.854 102.63 li
271.186 102.772 li
271.273 102.809 li
271.274 102.81 li
271.635 103.096 li
271.839 103.371 li
271.91 103.467 li
271.911 103.468 li
272.085 103.902 li
272.108 104.089 li
272.143 104.368 li
272.107 104.659 li
272.085 104.833 li
271.911 105.267 li
271.635 105.639 li
271.274 105.926 li
271.274 105.926 li
271.143 105.982 li
270.854 106.105 li
270.498 106.154 li
270.404 106.166 li
f
86.2259 130.455 mo
85.7774 130.394 li
85.7757 130.393 li
85.3563 130.214 li
85.0923 130.005 li
84.9959 129.929 li
84.8249 129.698 li
84.7196 129.556 li
84.5786 129.204 li
84.5466 129.124 li
84.5457 129.122 li
84.5386 129.066 li
84.4866 128.656 li
84.5287 128.325 li
84.5457 128.191 li
84.7196 127.757 li
84.7198 127.756 li
84.9959 127.385 li
85.2859 127.154 li
85.3563 127.098 li
85.4097 127.076 li
85.7757 126.919 li
86.016 126.886 li
86.2259 126.857 li
86.4228 126.884 li
86.6765 126.919 li
87.0953 127.098 li
87.096 127.098 li
87.1096 127.109 li
87.4563 127.385 li
87.7328 127.757 li
87.844 128.035 li
87.9066 128.191 li
87.907 128.194 li
87.9072 128.196 li
87.9656 128.656 li
87.9167 129.042 li
87.9066 129.122 li
87.7328 129.556 li
87.4563 129.929 li
87.2899 130.06 li
87.096 130.214 li
86.6765 130.393 li
86.6764 130.393 li
86.2283 130.455 li
86.2259 130.455 li
f
270.404 175.906 mo
234.814 175.906 li
234.814 154.364 li
270.404 154.364 li
270.404 175.906 li
.980392 .705882 .588235 rgb
f
246.149 175.906 mo
238.924 175.906 li
238.924 154.364 li
246.149 154.364 li
246.149 175.906 li
.960784 .45098 .509804 rgb
f
258.366 175.906 mo
246.228 175.906 li
246.228 154.364 li
258.366 154.364 li
258.366 175.906 li
.764706 .431373 .509804 rgb
f
229.739 173.4 mo
229.739 173.4 li
229.739 154.731 li
229.739 148.801 li
228.142 148.801 li
181.606 148.801 li
179.983 148.801 li
179.983 154.731 li
179.983 159.94 li
179.983 173.4 li
179.983 148.801 li
158.012 148.801 li
179.983 148.801 li
181.606 148.801 li
228.142 148.801 li
229.739 148.801 li
260.532 148.801 li
260.532 141.951 li
267.025 141.951 li
267.025 148.801 li
276.302 148.801 li
267.025 148.801 li
267.025 154.364 li
260.532 154.364 li
260.532 151.871 li
260.532 148.801 li
229.739 148.801 li
229.739 154.731 li
229.739 173.4 li
.45098 .556863 .603922 rgb
f
278.125 196.476 mo
113.143 196.476 li
260.532 196.476 li
260.532 193.947 li
260.532 191.474 li
112.801 191.474 li
260.532 191.474 li
260.532 188.889 li
260.532 187.757 li
267.025 187.757 li
267.025 188.889 li
267.025 191.474 li
267.025 193.947 li
267.025 196.476 li
278.125 196.476 li
.356863 .301961 .372549 rgb
f
267.025 187.757 mo
260.532 187.757 li
260.532 180.05 li
260.532 175.906 li
267.025 175.906 li
267.025 180.05 li
267.025 187.757 li
.466667 .490196 .270588 rgb
f
278.125 196.476 mo
267.025 196.476 li
267.025 193.947 li
278.125 193.947 li
278.125 196.476 li
.501961 .486274 .478431 rgb
f
279.986 193.947 mo
278.125 193.947 li
267.025 193.947 li
267.025 191.474 li
279.986 191.474 li
279.986 193.947 li
.415686 .403922 .396078 rgb
f
284.082 188.889 mo
281.994 188.889 li
276.302 188.889 li
276.302 154.731 li
276.302 148.801 li
267.025 148.801 li
267.025 141.951 li
284.082 141.951 li
284.082 188.889 li
.513725 .482353 .447059 rgb
f
281.994 191.474 mo
279.986 191.474 li
267.025 191.474 li
267.025 188.889 li
276.302 188.889 li
281.994 188.889 li
281.994 191.474 li
.278431 .270588 .266667 rgb
f
260.532 191.474 mo
112.801 191.474 li
109.947 188.889 li
118.097 188.889 li
131.824 188.889 li
133.589 188.889 li
135.514 188.889 li
156.786 188.889 li
158.711 188.889 li
179.983 188.889 li
181.606 188.889 li
202.126 188.889 li
204.875 188.889 li
225.394 188.889 li
228.142 188.889 li
229.739 188.889 li
260.532 188.889 li
260.532 191.474 li
f
83.6653 149.443 mo
77.1258 141.951 li
260.532 141.951 li
260.532 148.801 li
229.739 148.801 li
228.142 148.801 li
181.606 148.801 li
179.983 148.801 li
158.012 148.801 li
133.589 148.801 li
131.824 148.801 li
83.6653 148.801 li
83.6653 149.443 li
.513725 .482353 .447059 rgb
f
131.824 188.889 mo
118.097 188.889 li
110.895 180.637 li
129.456 180.637 li
129.456 151.766 li
108.757 151.766 li
108.757 178.188 li
106.457 175.553 li
106.457 151.766 li
85.7577 151.766 li
85.7577 151.84 li
83.6653 149.443 li
83.6653 148.801 li
131.824 148.801 li
131.824 154.731 li
131.824 188.889 li
.431373 .376471 .337255 rgb
f
229.739 188.889 mo
228.142 188.889 li
228.142 154.731 li
228.142 148.801 li
229.739 148.801 li
229.739 154.731 li
229.739 173.4 li
229.739 188.889 li
.513725 .482353 .447059 rgb
f
133.589 188.889 mo
131.824 188.889 li
131.824 154.731 li
131.824 148.801 li
133.589 148.801 li
133.589 154.731 li
133.589 188.889 li
f
158.711 188.889 mo
156.786 188.889 li
156.786 148.801 li
135.514 148.801 li
135.514 188.889 li
133.589 188.889 li
133.589 154.731 li
133.589 148.801 li
158.012 148.801 li
179.983 148.801 li
158.711 148.801 li
158.711 188.889 li
.290196 .25098 .356863 rgb
f
228.142 188.889 mo
225.394 188.889 li
225.394 148.801 li
204.875 148.801 li
204.875 188.889 li
202.126 188.889 li
202.126 148.801 li
181.606 148.801 li
228.142 148.801 li
228.142 154.731 li
228.142 188.889 li
f
276.302 188.889 mo
267.025 188.889 li
267.025 187.757 li
267.025 180.05 li
273.952 180.05 li
273.952 151.871 li
267.025 151.871 li
267.025 154.364 li
267.025 148.801 li
276.302 148.801 li
276.302 154.731 li
276.302 188.889 li
.431373 .376471 .337255 rgb
f
260.532 188.889 mo
260.532 188.889 li
229.739 188.889 li
229.739 173.4 li
229.739 154.731 li
229.739 148.801 li
260.532 148.801 li
260.532 151.871 li
231.766 151.871 li
231.766 156.946 li
231.766 180.05 li
260.532 180.05 li
260.532 187.757 li
260.532 188.889 li
f
179.983 188.889 mo
158.711 188.889 li
158.711 148.801 li
179.983 148.801 li
179.983 173.4 li
179.983 188.889 li
160.887 151.871 mo
160.887 175.226 li
178.263 175.226 li
178.263 151.871 li
160.887 151.871 li
.219608 .188235 .270588 rgb
f
202.126 188.889 mo
181.606 188.889 li
181.606 159.94 li
181.606 154.731 li
181.606 148.801 li
202.126 148.801 li
202.126 188.889 li
183.178 151.871 mo
183.178 175.226 li
200.554 175.226 li
200.554 151.871 li
183.178 151.871 li
f
200.554 175.226 mo
183.178 175.226 li
183.178 151.871 li
200.554 151.871 li
200.554 175.226 li
.00392157 .129412 .219608 rgb
f
225.394 188.889 mo
204.875 188.889 li
204.875 148.801 li
225.394 148.801 li
225.394 188.889 li
206.446 151.871 mo
206.446 175.226 li
223.822 175.226 li
223.822 151.871 li
206.446 151.871 li
.219608 .188235 .270588 rgb
f
223.822 175.226 mo
206.446 175.226 li
206.446 151.871 li
223.822 151.871 li
223.822 175.226 li
.00392157 .129412 .219608 rgb
f
178.263 175.226 mo
160.887 175.226 li
160.887 151.871 li
178.263 151.871 li
178.263 175.226 li
f
156.786 188.889 mo
135.514 188.889 li
135.514 148.801 li
156.786 148.801 li
156.786 188.889 li
137.69 151.871 mo
137.69 175.226 li
155.067 175.226 li
155.067 151.871 li
137.69 151.871 li
.219608 .188235 .270588 rgb
f
155.067 175.226 mo
137.69 175.226 li
137.69 151.871 li
155.067 151.871 li
155.067 175.226 li
.00392157 .129412 .219608 rgb
f
260.532 180.05 mo
260.532 180.05 li
231.766 180.05 li
231.766 156.946 li
231.766 151.871 li
260.532 151.871 li
260.532 154.364 li
234.814 154.364 li
234.814 175.906 li
238.924 175.906 li
246.149 175.906 li
246.228 175.906 li
258.366 175.906 li
260.532 175.906 li
260.532 180.05 li
.556863 .576471 .603922 rgb
f
273.952 180.05 mo
267.025 180.05 li
267.025 175.906 li
270.404 175.906 li
270.404 154.364 li
267.025 154.364 li
267.025 151.871 li
273.952 151.871 li
273.952 180.05 li
f
260.532 196.476 mo
113.143 196.476 li
110.29 193.947 li
112.915 193.947 li
260.532 193.947 li
260.532 196.476 li
.501961 .486274 .478431 rgb
f
260.532 193.947 mo
260.532 193.947 li
112.915 193.947 li
110.176 191.474 li
112.801 191.474 li
260.532 191.474 li
260.532 193.947 li
.415686 .403922 .396078 rgb
f
106.457 175.553 mo
103.779 172.485 li
103.779 158.649 li
91.7016 158.649 li
90.215 156.946 li
103.779 156.946 li
103.779 154.364 li
87.9617 154.364 li
87.9617 154.365 li
85.7577 151.84 li
85.7577 151.766 li
106.457 151.766 li
106.457 175.553 li
.556863 .576471 .603922 rgb
f
103.779 156.946 mo
90.215 156.946 li
87.9617 154.365 li
87.9617 154.364 li
103.779 154.364 li
103.779 156.946 li
.52549 .254902 .0980392 rgb
f
103.779 172.485 mo
102.441 170.952 li
102.441 160.244 li
93.0937 160.244 li
91.7016 158.649 li
103.779 158.649 li
103.779 172.485 li
.52549 .443137 .0588235 rgb
f
102.441 170.952 mo
100.96 169.256 li
101.317 169.256 li
101.317 167.415 li
99.3531 167.415 li
98.4155 166.341 li
101.317 166.341 li
101.317 164.499 li
96.8077 164.499 li
95.8701 163.425 li
101.317 163.425 li
101.317 161.583 li
94.2624 161.583 li
93.0937 160.244 li
102.441 160.244 li
102.441 170.952 li
.168627 .419608 .262745 rgb
f
101.317 163.425 mo
95.8701 163.425 li
94.2624 161.583 li
101.317 161.583 li
101.317 163.425 li
.0980392 .337255 .45098 rgb
f
101.317 166.341 mo
98.4155 166.341 li
96.8077 164.499 li
101.317 164.499 li
101.317 166.341 li
f
101.317 169.256 mo
100.96 169.256 li
99.3531 167.415 li
101.317 167.415 li
101.317 169.256 li
f
129.456 180.637 mo
110.895 180.637 li
110.353 180.016 li
128.085 180.016 li
128.085 175.146 li
109.824 175.146 li
109.824 179.41 li
108.757 178.188 li
108.757 151.766 li
129.456 151.766 li
129.456 180.637 li
109.824 169.737 mo
109.824 174.607 li
128.085 174.607 li
128.085 169.737 li
109.824 169.737 li
109.824 164.386 mo
109.824 169.256 li
128.085 169.256 li
128.085 164.386 li
109.824 164.386 li
109.824 158.818 mo
109.824 163.688 li
128.085 163.688 li
128.085 158.818 li
109.824 158.818 li
109.824 153.072 mo
109.824 157.943 li
128.085 157.943 li
128.085 153.072 li
109.824 153.072 li
.556863 .576471 .603922 rgb
f
128.085 157.943 mo
109.824 157.943 li
109.824 153.072 li
128.085 153.072 li
128.085 157.943 li
.301961 .447059 .45098 rgb
f
128.085 163.688 mo
109.824 163.688 li
109.824 158.818 li
128.085 158.818 li
128.085 163.688 li
.270588 .337255 .396078 rgb
f
128.085 169.256 mo
109.824 169.256 li
109.824 164.386 li
128.085 164.386 li
128.085 169.256 li
.529412 .317647 .305882 rgb
f
128.085 174.607 mo
109.824 174.607 li
109.824 169.737 li
128.085 169.737 li
128.085 174.607 li
.52549 .517647 .505882 rgb
f
128.085 180.016 mo
110.353 180.016 li
109.824 179.41 li
109.824 175.146 li
128.085 175.146 li
128.085 180.016 li
.00392157 .129412 .219608 rgb
f
181.606 188.889 mo
179.983 188.889 li
179.983 173.4 li
179.983 159.94 li
179.983 154.731 li
179.983 148.801 li
181.606 148.801 li
181.606 154.731 li
181.606 159.94 li
181.606 188.889 li
.513725 .482353 .447059 rgb
f
270.404 175.906 mo
267.025 175.906 li
260.532 175.906 li
258.366 175.906 li
258.366 154.364 li
246.228 154.364 li
246.228 175.906 li
246.149 175.906 li
246.149 154.364 li
238.924 154.364 li
238.924 175.906 li
234.814 175.906 li
234.814 154.364 li
260.532 154.364 li
267.025 154.364 li
270.404 154.364 li
270.404 175.906 li
.545098 .407843 .356863 rgb
f
246.149 175.906 mo
238.924 175.906 li
238.924 154.364 li
246.149 154.364 li
246.149 175.906 li
.533333 .258824 .309804 rgb
f
258.366 175.906 mo
246.228 175.906 li
246.228 154.364 li
258.366 154.364 li
258.366 175.906 li
.427451 .247059 .309804 rgb
f
265.673 141.951 mo
265.673 196.476 li
260.532 196.476 li
260.532 193.947 li
260.532 191.473 li
260.532 188.889 li
260.532 180.05 li
260.532 156.946 li
260.532 154.731 li
260.532 148.801 li
260.532 141.951 li
265.673 141.951 li
cp
.941176 .768627 .0980392 rgb
f
267.025 196.476 mo
265.673 196.476 li
265.673 141.951 li
267.025 141.951 li
267.025 148.801 li
267.025 154.731 li
267.025 156.946 li
267.025 180.05 li
267.025 188.889 li
267.025 191.473 li
267.025 193.947 li
267.025 196.476 li
cp
.54902 .392157 .254902 rgb
f
293.461 55.9061 mo
324.547 55.9061 li
324.547 112.233 li
293.461 112.233 li
293.461 55.9061 li
cp
.658824 .584314 .494118 rgb
f
294.989 110.705 mo
294.989 57.4349 li
323.017 57.4349 li
323.017 110.705 li
294.989 110.705 li
cp
.764706 .431373 .509804 rgb
f
293.461 120.637 mo
324.547 120.637 li
324.547 176.964 li
293.461 176.964 li
293.461 120.637 li
cp
.658824 .584314 .494118 rgb
f
294.989 175.435 mo
294.989 122.166 li
323.017 122.166 li
323.017 175.435 li
294.989 175.435 li
cp
.431373 .352941 .490196 rgb
f
203.668 3.49687 mo
203.668 38.6874 li
156.009 38.6874 li
156.009 3.49687 li
203.668 3.49687 li
.960784 .45098 .509804 rgb
f
207.322 3.49687 mo
207.322 38.6874 li
203.668 38.6874 li
203.668 3.49687 li
207.322 3.49687 li
.764706 .431373 .509804 rgb
f
231.729 38.6893 mo
207.321 38.6893 li
207.321 38.6874 li
207.322 38.6874 li
207.322 25.0296 li
227.954 25.0296 li
231.729 27.7596 li
231.729 38.6893 li
.529412 .486274 .431373 rgb
f
207.322 38.6874 mo
207.321 38.6874 li
207.321 25.0296 li
207.322 25.0296 li
207.322 38.6874 li
.427451 .247059 .309804 rgb
f
82.9266 40.7536 mo
81.1585 38.6893 li
82.9266 38.6893 li
82.9266 40.7536 li
.45098 .556863 .603922 rgb
f
152.177 91.8495 mo
150.003 91.8495 li
150.003 55.5135 li
152.177 55.5135 li
152.177 91.8495 li
.305882 .227451 .152941 rgb
f
165.65 91.8495 mo
152.177 91.8495 li
152.177 55.5135 li
166.428 55.5135 li
169.577 55.5135 li
169.577 75.3739 li
165.65 75.3739 li
165.65 91.8495 li
.290196 .25098 .356863 rgb
f
174.898 91.8495 mo
172.724 91.8495 li
172.724 66.8289 li
172.724 55.5135 li
174.898 55.5135 li
174.898 91.8495 li
.305882 .227451 .152941 rgb
f
188.371 91.8495 mo
174.898 91.8495 li
174.898 55.5135 li
192.299 55.5135 li
192.299 86.9134 li
188.371 79.8284 li
188.371 91.8495 li
.290196 .25098 .356863 rgb
f
211.029 91.8495 mo
195.383 91.8495 li
195.383 75.3739 li
192.299 75.3739 li
192.299 86.9134 li
192.299 55.5135 li
174.898 55.5135 li
172.724 55.5135 li
172.724 66.8289 li
169.577 61.1747 li
169.577 75.3739 li
169.577 55.5135 li
166.428 55.5135 li
164.667 52.3489 li
92.8582 52.3489 li
285.735 52.3489 li
240.887 52.3489 li
240.887 55.5135 li
237.741 55.5135 li
237.741 75.3739 li
237.741 55.5135 li
220.34 55.5135 li
218.166 55.5135 li
218.166 75.3739 li
215.02 75.3739 li
215.02 55.5135 li
197.619 55.5135 li
195.445 55.5135 li
195.445 91.8495 li
197.619 91.8495 li
211.029 91.8495 li
188.371 91.8495 mo
172.724 91.8495 li
174.898 91.8495 li
188.371 91.8495 li
165.65 91.8495 mo
150.003 91.8495 li
152.177 91.8495 li
165.65 91.8495 li
.509804 .407843 .305882 rgb
f
288.114 52.3489 mo
285.756 52.3489 li
285.735 52.3489 li
92.8582 52.3489 li
82.9266 40.7536 li
82.9266 38.6893 li
288.114 38.6893 li
288.114 52.3489 li
275.78 48.6434 mo
277.479 48.6527 li
277.479 41.3031 li
275.78 41.2933 li
263.501 41.3006 li
262.973 41.3011 li
262.973 48.6507 li
275.78 48.6434 li
256.957 48.6434 mo
258.656 48.6527 li
258.656 41.3031 li
256.957 41.2933 li
244.678 41.3006 li
244.149 41.3011 li
244.149 48.6507 li
256.957 48.6434 li
238.134 48.6434 mo
239.833 48.6527 li
239.833 41.3031 li
238.134 41.2933 li
225.854 41.3006 li
225.325 41.3011 li
225.325 48.6507 li
238.134 48.6434 li
219.31 48.6434 mo
221.01 48.6527 li
221.01 41.3031 li
219.31 41.2933 li
207.031 41.3006 li
206.502 41.3011 li
206.502 48.6507 li
219.31 48.6434 li
200.486 48.6434 mo
202.185 48.6527 li
202.185 41.3031 li
200.486 41.2933 li
188.207 41.3006 li
187.679 41.3011 li
187.679 48.6507 li
200.486 48.6434 li
181.663 48.6434 mo
183.362 48.6527 li
183.362 41.3031 li
181.663 41.2933 li
169.384 41.3006 li
168.855 41.3011 li
168.855 48.6507 li
181.663 48.6434 li
162.84 48.6434 mo
164.539 48.6527 li
164.539 41.3031 li
162.84 41.2933 li
150.56 41.3006 li
150.032 41.3011 li
150.032 48.6507 li
162.84 48.6434 li
144.016 48.6434 mo
145.715 48.6527 li
145.715 41.3031 li
144.016 41.2933 li
131.737 41.3006 li
131.208 41.3011 li
131.208 48.6507 li
144.016 48.6434 li
125.193 48.6434 mo
126.892 48.6527 li
126.892 41.3031 li
125.193 41.2933 li
112.913 41.3006 li
112.385 41.3011 li
112.385 48.6507 li
125.193 48.6434 li
106.369 48.6434 mo
108.068 48.6527 li
108.068 41.3031 li
106.369 41.2933 li
94.0897 41.3006 li
93.5609 41.3011 li
93.5609 48.6507 li
106.369 48.6434 li
.552941 .509804 .509804 rgb
f
108.068 48.6527 mo
106.369 48.6434 li
106.369 41.2933 li
108.068 41.3031 li
108.068 48.6527 li
.388235 .156863 .290196 rgb
f
93.5609 48.6507 mo
93.5609 41.3011 li
94.0897 41.3006 li
106.369 41.2933 li
106.369 48.6434 li
93.5609 48.6507 li
.54902 .227451 .254902 rgb
f
126.892 48.6527 mo
125.193 48.6434 li
125.193 41.2933 li
126.892 41.3031 li
126.892 48.6527 li
.388235 .156863 .290196 rgb
f
112.385 48.6507 mo
112.385 41.3011 li
112.913 41.3006 li
125.193 41.2933 li
125.193 48.6434 li
112.385 48.6507 li
.54902 .227451 .254902 rgb
f
145.715 48.6527 mo
144.016 48.6434 li
144.016 41.2933 li
145.715 41.3031 li
145.715 48.6527 li
.388235 .156863 .290196 rgb
f
131.208 48.6507 mo
131.208 41.3011 li
131.737 41.3006 li
144.016 41.2933 li
144.016 48.6434 li
131.208 48.6507 li
.54902 .227451 .254902 rgb
f
164.539 48.6527 mo
162.84 48.6434 li
162.84 41.2933 li
164.539 41.3031 li
164.539 48.6527 li
.388235 .156863 .290196 rgb
f
150.032 48.6507 mo
150.032 41.3011 li
150.56 41.3006 li
162.84 41.2933 li
162.84 48.6434 li
150.032 48.6507 li
.54902 .227451 .254902 rgb
f
183.362 48.6527 mo
181.663 48.6434 li
181.663 41.2933 li
183.362 41.3031 li
183.362 48.6527 li
.388235 .156863 .290196 rgb
f
168.855 48.6507 mo
168.855 41.3011 li
169.384 41.3006 li
181.663 41.2933 li
181.663 48.6434 li
168.855 48.6507 li
.54902 .227451 .254902 rgb
f
202.185 48.6527 mo
200.486 48.6434 li
200.486 41.2933 li
202.185 41.3031 li
202.185 48.6527 li
.388235 .156863 .290196 rgb
f
187.679 48.6507 mo
187.679 41.3011 li
188.207 41.3006 li
200.486 41.2933 li
200.486 48.6434 li
187.679 48.6507 li
.54902 .227451 .254902 rgb
f
221.01 48.6527 mo
219.31 48.6434 li
219.31 41.2933 li
221.01 41.3031 li
221.01 48.6527 li
.388235 .156863 .290196 rgb
f
206.502 48.6507 mo
206.502 41.3011 li
207.031 41.3006 li
219.31 41.2933 li
219.31 48.6434 li
206.502 48.6507 li
.54902 .227451 .254902 rgb
f
239.833 48.6527 mo
238.134 48.6434 li
238.134 41.2933 li
239.833 41.3031 li
239.833 48.6527 li
.388235 .156863 .290196 rgb
f
225.325 48.6507 mo
225.325 41.3011 li
225.854 41.3006 li
238.134 41.2933 li
238.134 48.6434 li
225.325 48.6507 li
.54902 .227451 .254902 rgb
f
258.656 48.6527 mo
256.957 48.6434 li
256.957 41.2933 li
258.656 41.3031 li
258.656 48.6527 li
.388235 .156863 .290196 rgb
f
244.149 48.6507 mo
244.149 41.3011 li
244.678 41.3006 li
256.957 41.2933 li
256.957 48.6434 li
244.149 48.6507 li
.54902 .227451 .254902 rgb
f
277.479 48.6527 mo
275.78 48.6434 li
275.78 41.2933 li
277.479 41.3031 li
277.479 48.6527 li
.388235 .156863 .290196 rgb
f
262.973 48.6507 mo
262.973 41.3011 li
263.501 41.3006 li
275.78 41.2933 li
275.78 48.6434 li
262.973 48.6507 li
.54902 .227451 .254902 rgb
f
211.029 91.8495 mo
197.619 91.8495 li
197.619 55.5135 li
215.02 55.5135 li
215.02 75.3739 li
214.958 75.3739 li
211.029 75.3739 li
211.029 91.8495 li
.290196 .25098 .356863 rgb
f
197.619 91.8495 mo
195.445 91.8495 li
195.445 55.5135 li
197.619 55.5135 li
197.619 91.8495 li
.305882 .227451 .152941 rgb
f
220.34 91.8495 mo
218.166 91.8495 li
218.166 75.3739 li
218.166 55.5135 li
220.34 55.5135 li
220.34 91.8495 li
f
233.813 91.8495 mo
220.34 91.8495 li
220.34 55.5135 li
237.741 55.5135 li
237.741 75.3739 li
233.813 75.3739 li
233.813 91.8495 li
.290196 .25098 .356863 rgb
f
179.608 9.63656 mo
182.735 15.973 li
189.728 16.9891 li
184.668 21.9217 li
185.863 28.8866 li
179.608 25.598 li
173.353 28.8866 li
174.548 21.9217 li
169.488 16.9891 li
176.481 15.973 li
179.608 9.63656 li
cp
1 .796078 .247059 rgb
f
179.608 23.2157 mo
176.153 25.0321 li
176.813 21.1859 li
174.019 18.4618 li
177.881 17.9002 li
179.608 14.4012 li
181.335 17.9002 li
185.197 18.4618 li
182.403 21.1859 li
183.062 25.0321 li
179.608 23.2157 li
cp
.960784 .45098 .509804 rgb
f
162.247 18.7254 mo
165.506 21.6981 li
169.802 20.6991 li
167.982 24.7171 li
170.26 28.4945 li
165.876 28.0047 li
162.988 31.3382 li
162.098 27.0179 li
158.035 25.3006 li
161.87 23.1204 li
162.247 18.7254 li
cp
1 .796078 .247059 rgb
f
165.334 26.62 mo
163.739 28.4608 li
163.248 26.075 li
161.004 25.1268 li
163.122 23.9222 li
163.33 21.4954 li
165.13 23.137 li
167.503 22.5853 li
166.497 24.804 li
167.756 26.8905 li
165.334 26.62 li
cp
.960784 .45098 .509804 rgb
f
196.969 18.7254 mo
193.71 21.6981 li
189.414 20.6991 li
191.234 24.7171 li
188.956 28.4945 li
193.34 28.0047 li
196.228 31.3382 li
197.117 27.0179 li
201.18 25.3006 li
197.346 23.1204 li
196.969 18.7254 li
cp
1 .796078 .247059 rgb
f
193.882 26.62 mo
195.477 28.4608 li
195.968 26.075 li
198.212 25.1268 li
196.094 23.9222 li
195.886 21.4954 li
194.086 23.137 li
191.713 22.5853 li
192.719 24.804 li
191.46 26.8905 li
193.882 26.62 li
cp
.960784 .45098 .509804 rgb
f
158.579 6.44467 mo
157.492 6.44467 li
157.262 6.44467 157.075 6.25814 157.075 6.02816 cv
157.075 4.94076 li
157.075 4.71029 157.262 4.52377 157.492 4.52377 cv
158.579 4.52377 li
158.809 4.52377 158.996 4.71029 158.996 4.94076 cv
158.996 6.02816 li
158.996 6.25814 158.809 6.44467 158.579 6.44467 cv
cp
.627451 .25098 .305882 rgb
f
161.156 6.44467 mo
160.068 6.44467 li
159.838 6.44467 159.652 6.25814 159.652 6.02816 cv
159.652 4.94076 li
159.652 4.71029 159.838 4.52377 160.068 4.52377 cv
161.156 4.52377 li
161.386 4.52377 161.572 4.71029 161.572 4.94076 cv
161.572 6.02816 li
161.572 6.25814 161.386 6.44467 161.156 6.44467 cv
cp
f
163.732 6.44467 mo
162.645 6.44467 li
162.415 6.44467 162.228 6.25814 162.228 6.02816 cv
162.228 4.94076 li
162.228 4.71029 162.415 4.52377 162.645 4.52377 cv
163.732 4.52377 li
163.962 4.52377 164.149 4.71029 164.149 4.94076 cv
164.149 6.02816 li
164.149 6.25814 163.962 6.44467 163.732 6.44467 cv
cp
f
166.309 6.44467 mo
165.221 6.44467 li
164.991 6.44467 164.805 6.25814 164.805 6.02816 cv
164.805 4.94076 li
164.805 4.71029 164.991 4.52377 165.221 4.52377 cv
166.309 4.52377 li
166.539 4.52377 166.725 4.71029 166.725 4.94076 cv
166.725 6.02816 li
166.725 6.25814 166.539 6.44467 166.309 6.44467 cv
cp
f
168.885 6.44467 mo
167.798 6.44467 li
167.568 6.44467 167.381 6.25814 167.381 6.02816 cv
167.381 4.94076 li
167.381 4.71029 167.568 4.52377 167.798 4.52377 cv
168.885 4.52377 li
169.116 4.52377 169.302 4.71029 169.302 4.94076 cv
169.302 6.02816 li
169.302 6.25814 169.116 6.44467 168.885 6.44467 cv
cp
f
171.462 6.44467 mo
170.374 6.44467 li
170.144 6.44467 169.958 6.25814 169.958 6.02816 cv
169.958 4.94076 li
169.958 4.71029 170.144 4.52377 170.374 4.52377 cv
171.462 4.52377 li
171.692 4.52377 171.878 4.71029 171.878 4.94076 cv
171.878 6.02816 li
171.878 6.25814 171.692 6.44467 171.462 6.44467 cv
cp
f
174.038 6.44467 mo
172.951 6.44467 li
172.721 6.44467 172.534 6.25814 172.534 6.02816 cv
172.534 4.94076 li
172.534 4.71029 172.721 4.52377 172.951 4.52377 cv
174.038 4.52377 li
174.268 4.52377 174.455 4.71029 174.455 4.94076 cv
174.455 6.02816 li
174.455 6.25814 174.268 6.44467 174.038 6.44467 cv
cp
f
176.615 6.44467 mo
175.527 6.44467 li
175.297 6.44467 175.111 6.25814 175.111 6.02816 cv
175.111 4.94076 li
175.111 4.71029 175.297 4.52377 175.527 4.52377 cv
176.615 4.52377 li
176.845 4.52377 177.032 4.71029 177.032 4.94076 cv
177.032 6.02816 li
177.032 6.25814 176.845 6.44467 176.615 6.44467 cv
cp
f
179.191 6.44467 mo
178.104 6.44467 li
177.874 6.44467 177.687 6.25814 177.687 6.02816 cv
177.687 4.94076 li
177.687 4.71029 177.874 4.52377 178.104 4.52377 cv
179.191 4.52377 li
179.421 4.52377 179.608 4.71029 179.608 4.94076 cv
179.608 6.02816 li
179.608 6.25814 179.421 6.44467 179.191 6.44467 cv
cp
f
181.768 6.44467 mo
180.68 6.44467 li
180.451 6.44467 180.264 6.25814 180.264 6.02816 cv
180.264 4.94076 li
180.264 4.71029 180.451 4.52377 180.68 4.52377 cv
181.768 4.52377 li
181.998 4.52377 182.184 4.71029 182.184 4.94076 cv
182.184 6.02816 li
182.184 6.25814 181.998 6.44467 181.768 6.44467 cv
cp
f
184.344 6.44467 mo
183.257 6.44467 li
183.027 6.44467 182.84 6.25814 182.84 6.02816 cv
182.84 4.94076 li
182.84 4.71029 183.027 4.52377 183.257 4.52377 cv
184.344 4.52377 li
184.575 4.52377 184.761 4.71029 184.761 4.94076 cv
184.761 6.02816 li
184.761 6.25814 184.575 6.44467 184.344 6.44467 cv
cp
f
186.921 6.44467 mo
185.833 6.44467 li
185.603 6.44467 185.417 6.25814 185.417 6.02816 cv
185.417 4.94076 li
185.417 4.71029 185.603 4.52377 185.833 4.52377 cv
186.921 4.52377 li
187.151 4.52377 187.338 4.71029 187.338 4.94076 cv
187.338 6.02816 li
187.338 6.25814 187.151 6.44467 186.921 6.44467 cv
cp
f
189.497 6.44467 mo
188.41 6.44467 li
188.18 6.44467 187.993 6.25814 187.993 6.02816 cv
187.993 4.94076 li
187.993 4.71029 188.18 4.52377 188.41 4.52377 cv
189.497 4.52377 li
189.727 4.52377 189.914 4.71029 189.914 4.94076 cv
189.914 6.02816 li
189.914 6.25814 189.727 6.44467 189.497 6.44467 cv
cp
f
192.074 6.44467 mo
190.987 6.44467 li
190.756 6.44467 190.57 6.25814 190.57 6.02816 cv
190.57 4.94076 li
190.57 4.71029 190.756 4.52377 190.987 4.52377 cv
192.074 4.52377 li
192.304 4.52377 192.491 4.71029 192.491 4.94076 cv
192.491 6.02816 li
192.491 6.25814 192.304 6.44467 192.074 6.44467 cv
cp
f
194.65 6.44467 mo
193.563 6.44467 li
193.333 6.44467 193.146 6.25814 193.146 6.02816 cv
193.146 4.94076 li
193.146 4.71029 193.333 4.52377 193.563 4.52377 cv
194.65 4.52377 li
194.881 4.52377 195.067 4.71029 195.067 4.94076 cv
195.067 6.02816 li
195.067 6.25814 194.881 6.44467 194.65 6.44467 cv
cp
f
197.227 6.44467 mo
196.139 6.44467 li
195.909 6.44467 195.723 6.25814 195.723 6.02816 cv
195.723 4.94076 li
195.723 4.71029 195.909 4.52377 196.139 4.52377 cv
197.227 4.52377 li
197.457 4.52377 197.643 4.71029 197.643 4.94076 cv
197.643 6.02816 li
197.643 6.25814 197.457 6.44467 197.227 6.44467 cv
cp
f
199.804 6.44467 mo
198.716 6.44467 li
198.486 6.44467 198.3 6.25814 198.3 6.02816 cv
198.3 4.94076 li
198.3 4.71029 198.486 4.52377 198.716 4.52377 cv
199.804 4.52377 li
200.033 4.52377 200.221 4.71029 200.221 4.94076 cv
200.221 6.02816 li
200.221 6.25814 200.033 6.44467 199.804 6.44467 cv
cp
f
202.38 6.44467 mo
201.293 6.44467 li
201.062 6.44467 200.876 6.25814 200.876 6.02816 cv
200.876 4.94076 li
200.876 4.71029 201.062 4.52377 201.293 4.52377 cv
202.38 4.52377 li
202.61 4.52377 202.797 4.71029 202.797 4.94076 cv
202.797 6.02816 li
202.797 6.25814 202.61 6.44467 202.38 6.44467 cv
cp
f
158.579 37.0819 mo
157.492 37.0819 li
157.262 37.0819 157.075 36.8953 157.075 36.6649 cv
157.075 35.5775 li
157.075 35.3475 157.262 35.161 157.492 35.161 cv
158.579 35.161 li
158.809 35.161 158.996 35.3475 158.996 35.5775 cv
158.996 36.6649 li
158.996 36.8953 158.809 37.0819 158.579 37.0819 cv
cp
f
161.156 37.0819 mo
160.068 37.0819 li
159.838 37.0819 159.652 36.8953 159.652 36.6649 cv
159.652 35.5775 li
159.652 35.3475 159.838 35.161 160.068 35.161 cv
161.156 35.161 li
161.386 35.161 161.572 35.3475 161.572 35.5775 cv
161.572 36.6649 li
161.572 36.8953 161.386 37.0819 161.156 37.0819 cv
cp
f
163.732 37.0819 mo
162.645 37.0819 li
162.415 37.0819 162.228 36.8953 162.228 36.6649 cv
162.228 35.5775 li
162.228 35.3475 162.415 35.161 162.645 35.161 cv
163.732 35.161 li
163.962 35.161 164.149 35.3475 164.149 35.5775 cv
164.149 36.6649 li
164.149 36.8953 163.962 37.0819 163.732 37.0819 cv
cp
f
166.309 37.0819 mo
165.221 37.0819 li
164.991 37.0819 164.805 36.8953 164.805 36.6649 cv
164.805 35.5775 li
164.805 35.3475 164.991 35.161 165.221 35.161 cv
166.309 35.161 li
166.539 35.161 166.725 35.3475 166.725 35.5775 cv
166.725 36.6649 li
166.725 36.8953 166.539 37.0819 166.309 37.0819 cv
cp
f
168.885 37.0819 mo
167.798 37.0819 li
167.568 37.0819 167.381 36.8953 167.381 36.6649 cv
167.381 35.5775 li
167.381 35.3475 167.568 35.161 167.798 35.161 cv
168.885 35.161 li
169.116 35.161 169.302 35.3475 169.302 35.5775 cv
169.302 36.6649 li
169.302 36.8953 169.116 37.0819 168.885 37.0819 cv
cp
f
171.462 37.0819 mo
170.374 37.0819 li
170.144 37.0819 169.958 36.8953 169.958 36.6649 cv
169.958 35.5775 li
169.958 35.3475 170.144 35.161 170.374 35.161 cv
171.462 35.161 li
171.692 35.161 171.878 35.3475 171.878 35.5775 cv
171.878 36.6649 li
171.878 36.8953 171.692 37.0819 171.462 37.0819 cv
cp
f
174.038 37.0819 mo
172.951 37.0819 li
172.721 37.0819 172.534 36.8953 172.534 36.6649 cv
172.534 35.5775 li
172.534 35.3475 172.721 35.161 172.951 35.161 cv
174.038 35.161 li
174.268 35.161 174.455 35.3475 174.455 35.5775 cv
174.455 36.6649 li
174.455 36.8953 174.268 37.0819 174.038 37.0819 cv
cp
f
176.615 37.0819 mo
175.527 37.0819 li
175.297 37.0819 175.111 36.8953 175.111 36.6649 cv
175.111 35.5775 li
175.111 35.3475 175.297 35.161 175.527 35.161 cv
176.615 35.161 li
176.845 35.161 177.032 35.3475 177.032 35.5775 cv
177.032 36.6649 li
177.032 36.8953 176.845 37.0819 176.615 37.0819 cv
cp
f
179.191 37.0819 mo
178.104 37.0819 li
177.874 37.0819 177.687 36.8953 177.687 36.6649 cv
177.687 35.5775 li
177.687 35.3475 177.874 35.161 178.104 35.161 cv
179.191 35.161 li
179.421 35.161 179.608 35.3475 179.608 35.5775 cv
179.608 36.6649 li
179.608 36.8953 179.421 37.0819 179.191 37.0819 cv
cp
f
181.768 37.0819 mo
180.68 37.0819 li
180.451 37.0819 180.264 36.8953 180.264 36.6649 cv
180.264 35.5775 li
180.264 35.3475 180.451 35.161 180.68 35.161 cv
181.768 35.161 li
181.998 35.161 182.184 35.3475 182.184 35.5775 cv
182.184 36.6649 li
182.184 36.8953 181.998 37.0819 181.768 37.0819 cv
cp
f
184.344 37.0819 mo
183.257 37.0819 li
183.027 37.0819 182.84 36.8953 182.84 36.6649 cv
182.84 35.5775 li
182.84 35.3475 183.027 35.161 183.257 35.161 cv
184.344 35.161 li
184.575 35.161 184.761 35.3475 184.761 35.5775 cv
184.761 36.6649 li
184.761 36.8953 184.575 37.0819 184.344 37.0819 cv
cp
f
186.921 37.0819 mo
185.833 37.0819 li
185.603 37.0819 185.417 36.8953 185.417 36.6649 cv
185.417 35.5775 li
185.417 35.3475 185.603 35.161 185.833 35.161 cv
186.921 35.161 li
187.151 35.161 187.338 35.3475 187.338 35.5775 cv
187.338 36.6649 li
187.338 36.8953 187.151 37.0819 186.921 37.0819 cv
cp
f
189.497 37.0819 mo
188.41 37.0819 li
188.18 37.0819 187.993 36.8953 187.993 36.6649 cv
187.993 35.5775 li
187.993 35.3475 188.18 35.161 188.41 35.161 cv
189.497 35.161 li
189.727 35.161 189.914 35.3475 189.914 35.5775 cv
189.914 36.6649 li
189.914 36.8953 189.727 37.0819 189.497 37.0819 cv
cp
f
192.074 37.0819 mo
190.987 37.0819 li
190.756 37.0819 190.57 36.8953 190.57 36.6649 cv
190.57 35.5775 li
190.57 35.3475 190.756 35.161 190.987 35.161 cv
192.074 35.161 li
192.304 35.161 192.491 35.3475 192.491 35.5775 cv
192.491 36.6649 li
192.491 36.8953 192.304 37.0819 192.074 37.0819 cv
cp
f
194.65 37.0819 mo
193.563 37.0819 li
193.333 37.0819 193.146 36.8953 193.146 36.6649 cv
193.146 35.5775 li
193.146 35.3475 193.333 35.161 193.563 35.161 cv
194.65 35.161 li
194.881 35.161 195.067 35.3475 195.067 35.5775 cv
195.067 36.6649 li
195.067 36.8953 194.881 37.0819 194.65 37.0819 cv
cp
f
197.227 37.0819 mo
196.139 37.0819 li
195.909 37.0819 195.723 36.8953 195.723 36.6649 cv
195.723 35.5775 li
195.723 35.3475 195.909 35.161 196.139 35.161 cv
197.227 35.161 li
197.457 35.161 197.643 35.3475 197.643 35.5775 cv
197.643 36.6649 li
197.643 36.8953 197.457 37.0819 197.227 37.0819 cv
cp
f
199.804 37.0819 mo
198.716 37.0819 li
198.486 37.0819 198.3 36.8953 198.3 36.6649 cv
198.3 35.5775 li
198.3 35.3475 198.486 35.161 198.716 35.161 cv
199.804 35.161 li
200.033 35.161 200.221 35.3475 200.221 35.5775 cv
200.221 36.6649 li
200.221 36.8953 200.033 37.0819 199.804 37.0819 cv
cp
f
202.38 37.0819 mo
201.293 37.0819 li
201.062 37.0819 200.876 36.8953 200.876 36.6649 cv
200.876 35.5775 li
200.876 35.3475 201.062 35.161 201.293 35.161 cv
202.38 35.161 li
202.61 35.161 202.797 35.3475 202.797 35.5775 cv
202.797 36.6649 li
202.797 36.8953 202.61 37.0819 202.38 37.0819 cv
cp
f
357.38 94.2459 mo
357.38 193.295 li
356.374 193.295 li
356.374 94.2459 li
357.38 94.2459 li
cp
.764706 .698039 .647059 rgb
f
356.374 94.2459 mo
356.374 193.295 li
355.368 193.295 li
355.368 94.2459 li
356.374 94.2459 li
cp
.831373 .756863 .701961 rgb
f
367.077 94.2459 mo
362.942 94.2459 li
362.942 90.7655 360.121 87.9442 356.64 87.9442 cv
360.775 87.9442 li
364.257 87.9442 367.077 90.7655 367.077 94.2459 cv
cp
.764706 .698039 .647059 rgb
f
362.942 94.2459 mo
346.399 94.2459 li
346.399 92.5067 347.106 90.9305 348.246 89.7909 cv
349.387 88.6483 350.96 87.9442 352.701 87.9442 cv
356.64 87.9442 li
360.121 87.9442 362.942 90.7655 362.942 94.2459 cv
cp
.831373 .756863 .701961 rgb
f
44.617 94.2459 mo
44.617 193.295 li
43.6111 193.295 li
43.6111 94.2459 li
44.617 94.2459 li
cp
.764706 .698039 .647059 rgb
f
43.6111 94.2459 mo
43.6111 193.295 li
42.6053 193.295 li
42.6053 94.2459 li
43.6111 94.2459 li
cp
.831373 .756863 .701961 rgb
f
54.3143 94.2459 mo
50.1785 94.2459 li
50.1785 90.7655 47.3577 87.9442 43.8773 87.9442 cv
48.0125 87.9442 li
51.493 87.9442 54.3143 90.7655 54.3143 94.2459 cv
cp
.764706 .698039 .647059 rgb
f
50.1785 94.2459 mo
33.6365 94.2459 li
33.6365 92.5067 34.3431 90.9305 35.4832 89.7909 cv
36.6234 88.6483 38.1971 87.9442 39.9383 87.9442 cv
43.8773 87.9442 li
47.3577 87.9442 50.1785 90.7655 50.1785 94.2459 cv
cp
.831373 .756863 .701961 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Albina Kondrateva) ()
%%Title: (1902.w006.n001.80A.p25.80.eps)
%%CreationDate: 2/27/2019 6:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D3#[IQ08&$5_"Q:A&,Ep>oP&AN1fXY!a/Z+ZbDf0)fF!I(lLgM<blO=W255Ph6Ys6J'[S584H!J8Ze<5ZST,?fr;&8),DLg
%cSPV!ktc6TI/Ec`Q`pF.qrWD,ifm2&:LQ;\\t"4U_e240kth?&bMTu-k'5*E=Q3<HaJn$L.4%'ggoPLpS9#@\RQ0j*c1>kgHL^jf
%YM['>ro0Dc/oP(0H2Gi>:7"1.H[YbFB7I-mSt1?)imk(gs*VD+p$DK=ffA5&jt@c^^3]>=k3Z6rhOVg6,\$U:-i`!]G*ZEa^I;MD
%puPRHqY\=EGP5irD%?U1DuTTVInQR%os=\tRhpR!q9?O\cec?_oD3t7'o/B1=o?^?^\IYns'QZ?`@9I*BD1BMm_qCSqtAQ%^ZT;m
%b5Qe_=!oWjJ";&]23`$$<j<SI]r(MoDdaZ>rq^ous6[&2J+7`i&XiS]^]*mHpP=8`R8.h3T49r+4LtQXTBRN`_;E!%lK_NthS%8A
%`bE$+Vk<QX%U](K2?l4hW9[0KB,fNLbr6q#X5/'7=],_W,NKJI4(fN#(Z2oRn^"s0rKe>H^3oIZNU$?,]?aj`D]?B8RSGT7S$i4a
%Rr;ZIGl)]g?bWiVo\3FhP.uG:jbm3ki9^RVYF]HiGO<qqm>0X`Hi&R7mu1E,]_[p+q8I'=qJZE,gTUV=fq2TdJ"b]Z='r^erS':2
%9oo/BR&qs<&9$d\:i-Ed0_\GN+%j;=L:1BP.r]sPo"mBbg)0B^DdWM&jm-9,&=Fbaj41nnqsqpi<L7r6r?#>AB&1.9J%%qUL;/*0
%icTbE&APaQm>gG/S%np7h;btor:[2K^OGm>Nf/@7*pV<9s7P3SGL)4QQ]c3%rn$E.:[_V;A%te4?V:6#$NJ]"^R%TkVSm+>r0e85
%VW>KU4QplOXV;6qKl<f,==G4jb/6T]BWW7Q/&tWd:T)ge@C:+mJ+51I>qR+?\T$iq_Cq5`a#lKRlbc(=3rS#g"!/N],_'KWA:Gf<
%VuOo=rV(u,ie,-^(]SLmmHUhHhe3`(EX[re?a[RkLS%8Ppm5nUMLW1$GEuU)7e*\9c6&-^(O,O9odAZOR`<)^oC)a^O-1R@HeSAF
%]8D+:<,]H/^`VI+cL7rlmmGV9nc(S-2Y&Mfnq$G!qep?0pk-It@ioFR)F'WJnh8m6T^r3a[YKXV^Do]^q:>l#fu6&)T7D93?I6T6
%:?k40O6D#<@GZ:CDnPc"!'RtZRbuf%h1s5cl2P`3%I?2L"*M2agjc2\r6&Nola5(:`D>W'NhM#IHKXi_PJ$ej*mX#@SNG;B^=0t]
%b;`Gm8^bZ1Hf(IAqqgf.SYq83"4Q#fO3_85rdK.-JH,';[>4L5lC@6OmiCJUGgLrcb1l:WF6rN_Hae:O4):;jcKT`eCn.HQ2f@n:
%IiIe3f@t!.9YEN1qUQtkEVh!T48Xa1e.<u*a(H'NU&>e&s0R4NJ+N$a[nm%M:=%TbgSb(\/H1(po`*Lm^TZt5qqD$2TDb\Te,R%n
%p$^Y5s(A7eh)T3Ho`+@JrVQ<Qs%VOg-Kc76rq5gSn,8`*d`+7Rk5=^ff'A*>U;VN=.JqG2qZ"+<5P<L9Ia"^^r_\G7p$&BXot6N8
%>L2@$p@ro>+7?$%nHCoNPOEo@D1D!t%sKIp+"g$m^"E4"pM"P-^&M5Rcd<6:[$*`>]li//]VFnDHgrK1kJQie;U4TAcB!AIO$*AJ
%N+jrS[jETt^:V(j`63I`oE*pDT>N\gjmN,QT0M>"q9U:io7?R%\4$4!r=aKeg)Xu,aERY$EFDcl0s;E:HV!!DO6cu31jdA8PH)t'
%:OIZ9l-X,<"!,F8;WmRFF<D@K_^/IK`R1E&f=DL+fBr"lmaV3ua$9LBo3E$!pD9C7?EDI+%j1VhkcF`B"h!"@/:F`>.)b^tVq6X3
%c*I(KEd)`a9=>Mg4,;kNAGsQp\0&Y3SRg&C0B]Z)n&Kk)p'3>5=Y1FWoM=e4kW6L#5;!b![njV$jV"*_JZCGL54^64<h1>s\gMXU
%_d-YRXPT17IK([=5Ea<=;7VP)r]]'RW#9f,au!R<Fo)"(B'_:FBhElA#<qNsCYLFZg(eqGIc,l:%^ll5_tGgW&*G&=?"[*]msFqn
%m=rl@XC$js5B1g-lbV?=%J/QET:96e(hrSmaXa^tae/"g3Pp&M[_:kQhKnr;.:>a#m/"N\En<e:54*ISp&9hEh$*N.O*Z:3m^N,Y
%h=8Asj:AQ^f%D-l^+<j0eU);5Sc!8`N,AHkCk'3lm\g)X;g8@,L%3.?q.gcA31[+YgJk^`\#^L0Jk.:#gp'!2=sj5lWjVbBq[9iX
%K&$@:IJU-rfboRg4Lh,t*bOuW8aD=I$0hC%p3Y[j;!Y8gh1'1q3JhT@ZEO3Sp$T37*t<$N^$,++i:,4&rB4NcDnkp&BJ+dY_TKG:
%*sV(Yh@Dusr#hc]I._P&j>Q%G!e0V$jndG%J+BN2=[$rLIX6H8MDt)(JVIF;rSrl(f6+5?-hFJ42RtS,:!.kY1Lt%P@lr[;Dj`*8
%&hYXE=2!bnrVHgKkjoLT*90Y=_=Yq3TDl8:O<na)M$)]%nNGO(MuOe6*dtbA.D;&kXS`P6^np\8`Kb/m:0mg9jW7iiUt9tQ;dDm8
%rg=,i@U0]bH`d:Eh>M8=(43J,qKMS6+010P6sKGVq-g[S"fLs?^0%T1C\thNr7H"8]AD7;n_l:;p*br/:Jq)p'_H:mGr+_qfN(J4
%@?d(/A-[edi=+Ia32:s#cDZfQD:C5"7t#kGNI&D\ZM/59V!U:cm9`s]A*[o$23:Zu1LDtX:@cGD5;07;NGdbYf]XcufU_H$dB@G2
%S>M)amX3D8br@[i?ktrB)F%1eT>gJiVajp-[93^gqKF#nDu2Ma"1H[l1##5@\=sFR5Fk'?-Gjpb)$ZK@<m5B-_D5D.Io=q>S/rcl
%7De=L_u2YPFo0JEcF`On)"mCQ88a2rL6(f#QG[n1D0h8T>A%Uph0.VhYD2T:I^8?*..#uGs#B;eZCg#$I1U"WD)._"5ISo4F<'u6
%r:[RZmg5P43$!F]>of!&4LFp4H^s,TqPLXW0<?3Fm8`Vds-3P4,l))>qeajW>X?[=TA4;#c;M9&K'Mh/U[6&iN=2he>o'frXm<jD
%(g(ZWGFLLnfM?J2pVn%G[-d@>5uL/o4D\kapu$MPlZo(;)c?km?)e9\l1<sHhC#IS$O78m[u$*7A<<G$-5q36DTZJYRs4*_i\t$'
%ia=/(5PX+%Rk87Fr[p9[md1#K+r;'kD.X<En1fY>3r:VHQb(:c5J?E*qq>Re)fteJRf_HK48)h<#%!c#rB3i*`sipahoG\/$E,m)
%H:L-^''lBBmcc=2d9;$-%0,a#6*o'E\0>`o+bT\T7"Zi4ieKJ?YdckWE^d_XGE:#dIBHl@e#'pP.s_:3o("]0*tCLU`Po+Z7Y!bT
%`V"&"27bC*U12cd\+GVP5/'\@_&BHhjgEe%,:NLPXkdTZ97kF>eVljpN4Y&ekE`ODp0JD0DW$('efOH[5bukQrl\7"_L)d)aN(X1
%4I^;h]Z0,D7kXd4b#3`_T<:A]:VHU(cbKLEmkYQ9Z>QKN='Vu?54u/hnC-d3-WPkpK^chT532utplH#7HB@rt%W1(Y_17WSg"?qW
%#!>p,7g!4C%==I2>s(58%tn3]Dr(@_qB><'4M@=>4^RkG<lC[4k:8R&ZS"FL76Dl5q-6DE`^=#0n)JWO2')hQNqMl.FM8gVF-"(c
%i,hL_3O6Y24M8^f=LTaN5qCqKXe)gN?j`L@LLut@<OSUl#i5#4s4Z]BdPMH%qF,SbGGk?4_s'q%nICm$!#j#>4XS+T\9O&LnK&@<
%WJRO%$9nH4hfOcNE-^^^gEu;YeIJeGWE,2Sr-aFu>P-bGG'lOQ4]g75Mi.DblOn*K5Q$_oDkFB\*qT1@-H&Ya>^,+T[LH(gH.'f5
%].K$.$(F]DhNr1aPf,-H2RTR"(M/5m?`F0Fp2bY,I/<L^qtE`%>`mhrbICtb+qGd`"7ko0oYeYT\F=CI?dj:'j8$ta;'GDi$Va`M
%W!e5WcU]eI>?Zg8B+MZ-Li;bZ9;iBaXK2t?l\"%)qO:E"]]nPVjgMr&GIW2QF5PDg[o\;N++9SuVrf7?GMO2Fh(63SL\1>kjOkd[
%F49GMWlM(:Oo/)T-O.X6n8-)cRE9NY;8:^r#A>$$qsGp"7IPCD=6<ujh(R(NHK8WU4dGJUlf";'%o"lJFJNogrNOSLS)X4]`d1NS
%-oZ]Rd(#^[<:_:(:Nb.A39.)[%iTf\KmM(T#=cAO]CEZ1nTSS+1=Z<jeNWBcS!%IL_o)@#-*aK*r6X$-Y4Kr1hO%of@@uDYP-ba\
%(rP+.d9kUl^$Iu<\4?)%$Nf0oM8`V,n3\5&^0gH>O1u+0XqL4jEl'*jT2-@3bLR4d^&OMdc:GGej1\5()h6+e?2(lC.Me\4l$k"[
%]mQX@hfN'4hp8d.8UeqYkVL:-a/0^MV[mN(Z(6>(4&t=t8UfQ6r,G'tn&OJGkPMuQm5$u.C%r4jo"[^:*oZbgVo4/q'T+a8PeOn2
%+']<USu!e3b>ZWiq`Lm>a/<jOj7b]<i0J5M@IG=)I3fTqC"IK31SUU:"h6n*`7\`rR,s><]='94L"e]CZQQ&"T6tiYWdX!,E9lQk
%T-i2<Y/!EVmWak2&>Kc3FPO8KfU6h/YjBhnEZNk^H,T;k1fqrsC58%sC'%RWHegpZVWZk.e&T*crcG!i4<M!@V.[T1_`M+=GA#;n
%6i!Bd<%cq,j0%S>ePJjBQ/e?h09=3squ5[*(UE"hIc"]6Hft06^.=``:P1OmSN3jbC7F>SKcQ;PTY8A+nt=L7-ZD<Hdg`YXkCC>1
%PLK3fH,;Q-jWNt(A,%'U^X)[LpM]K8e#ZD`eE8a5YGMl'CAZG5JQTh'.E.=)8&pYo48Vh"!e9^$%t1JFO+4HbDiHXF\GKPA/i*.[
%@eN,;'qnm3rr`:^[cW@XNp-E386kMK7q0jsq5)D$V!cOb\?sD6Wto!07#P:%C\uu[dJ\F86#X;GYH>=K$Q6"b(SqjBP\(]B=`AaQ
%@2:!an#m\P_f#n?YuuVEQk1-0i]CMSoRikC`(@Y._r#c?s7Gd/'Nq8op!.R5^.V037c$[hO7bNImp"R"RD]oN$9!o+L$o`o=+'Ok
%\1lL4mkY@8#QAit-uj602PoU<0$GS8<`O2%)XmXl%o,LVK@]bQekT]H\*jHaS_h+S-JWmV^f;XBIrWK\eW?'jRg!)[FOR2CMp&N4
%BNhfV+g'ST"<)*_`FK3`GY]lD>)cZZYN=^6_0TP&2.^0SeiLM-bPjS[K^CjHMX<@TAlAX,DI6bhHc[)-Ce]O4*n_Aoj.=[FFa-Z$
%`t;-k&Hm4s9]B(uS[I6URp/i%NGr5#bYoDIIC@&QS[CRNcF<44FN'7pMN>2I>AW1%=6TNo??=O3USss/8&H1sUIg?A?$"!HKAtmq
%Ku'ZMot<gYd0I<Is*b\I5Wi.=<M)JPR<HgiY,"\4+iT59ZmmiW6AV&K(&<8_+`VM@)!dbJR^hiITXa!Q.pPZr7uZtd(.O35852'2
%crU(^o:mkT3`?_Q`5F\<0=/Sc5HMiAn'df.2\M<BXPASle/S4YD>o%9e+[)@1rdUb_R-JgD8I^Gebd5&Kt:d#0=l&sIf&+Q0"an/
%m;r[(ScH-l7RS,@DIW2WY4RNk"g:0-D\?FG-cO&r$[``&O"6[/(g?MZ/f';%fPHKom#029Ok9nZ'D0;@),..C0I5&VT$COob:`PP
%JumMs[Fq#CZ7h[&H,UT/Wttj[2=.&B>>kkZn%fh:%U[#:p:Yk9l$NH(9:)MGnpZ`A\DkZB\0L#_`ph;9=VkX+lh[s]n$4G-"Np&4
%m2(*cmfQ:R!["eaS-p,4I>ufZW\q@Pc>@?df<Xf/h4hdBdE<DN^T-\]5\7MacVcF'epDC@_Z$^_g'XU(re^J?o@*29eVL=n(F:)Z
%[CU%5m?;P)hiTPY'ReT#:[N@ril0)<0.KW6s60(Q^1H1Zk5.c_IJ[SW*km-4'anl6N7"cp1UU(U8(59pZ%oFiFfVD5`p=VPd&9<!
%HeYYqSDU4la*PSlh7]/O<F%(td0hYq'mt,X+LZ3p="sn$hKD:(j/uASe_?@>s1N+H2=8%`9;"O#Y<L8*H.gpM`#F_TIp\)Vq5JdR
%*R:fshqsd3>afdWqS:D.F]KGQ#9:K#Ic!3ph%>"p06@<SWVU*'p'*@NmHs1KHi99*T^(M$o.r%in2L)Pbkm!X7OuM<cf\$Vl=mFK
%mIC)Hn(7/Zm8r&Wqq1Z3=]MrO\$Jfuo!m7b]clLM]W]TR(VdL2jF?mLG(KAcN(Wd"H/d:K^O*JK&#q(h0R,cq]2SM"doi+-/S_Z)
%qq_)CI=&!nCqKFS>'b-V*_L`qUA<1UJ[)c$3tL_6IJW3s3Q-T7Pk=*6?4ZI3S,N5()kVGKA+05I5<nZ%n+c\VRAtZnde@,6nG.'J
%h`esOIH.p5YibZTZ$1+mm)Qh)o;[jIIK/UsrJ@fYd('+kpV3]V5>#1.r;5CJkrrZ^@G9FJe"cC%WUJ^8MpJhTaI%DC&jEenT)((:
%D1aSRklPVo"S)!;-[9I*o-bgUL[O'g7O.d(rWG<&YpY6T@fuHA55ifooC'@\T<LOV]6p'5H1VfCEqe,S?24>VRM5_m;a+FbrDPB>
%YN#!Dn^IBe?NR1Wrk,o>$LBk4e/W;lf5KQZHLlpclh3c^IK&6^[pOXI(iggJnR(2+#qoWfkk<\*ri?(-Idu`*hqF-@rV"LF?iT]i
%5JHs[-U0\Bq<%E):4Mm+oo#%6Gg`dFFo%M>cecD5k;R>ZahIcFb88J_+N9g_0>ILen%%ZFs7G=,o06Pg[Sd'p$id[PcelE]qso6O
%q""'Xhu?LL_Gu,'4T5!@ZffnKq`^&9QjZ*jHM4eVhp0d(rqS;3hnAeTHhct0:;)/Uh2>?Q^></JO8G:prqb0Of?`<6:@"\ISc/-'
%7Wl<g#JPHW%j,r=(N7(ag:B^S3=a4+*jGP+HZ&N$]5QT?q#'+&J+qP'p=IW^>PGjZoub!RhRn1-o#hhf5C`\+jmPG!14T=>^WbTM
%r:8Yc:S5CKp=7dngIGPf>P64c]m]S5op=QpQMT48([5)#IEWEZc`A:>Gl-jn5JDMo\paJC2h*sgp<B(.j6BG<545fX9g<X[8'Rnq
%IJ*IrY?l\Le[WkqnnX^j0;$"*nbJfkH2$=Y3",f.\$(;SgAC&Q/(t$U%62+NkNDc9VuN*sgGnMu45#\pQL=>>F7maUpGi./maK8W
%$LcCJq>SR(-Cis<KKaY)kPtJ([)_(:r;H@`<4_lI?bSF4F8GghQg\6sF7[XX?\:IgqYZE#^4)cDduXES]4CoXFR3=hrqtrOr?RtP
%?gi.(?b_$_j\&P"^Gu2Ymp<bXp6DVP5;^e;<4gM@jO84V$[qj(:]C6(5P]dmqoO4uYBtUZn5>3/kS9A"iAKB5s!smRnu>d9B7&Ig
%lS;djfds[]Dm+ro:o<b<]Db%\DK^90f:r"SmqVmRg[f[INq_Z)4r0mKgZsF"?*X@Iq_HhT>c)tZLEH=V]AhY!h<L[tX:GaTj!"*-
%V+\Bq&+_W53R4sR>+(_&<W)DsIJfb0:$TpMqMu]0Vgh;iF318C[8_M/Q:ndglmLn'#tnOO1,!3Am<,;'_!b=eRVJpt:@#fD^YZ)Z
%ol`L%F^=CM@KSHN&RWF:/J$&'6@AIWcEE.lJ_Mm(G26i`&(JYbDKg9UgN'b"Y=/g#9($oHPP>5D\RW/fp"\+RH\bfB7;H[i9s!0m
%?I<)q?;l0Sf=elclubn/p,^s/>&RCeDXAT0_oQQjDW+?obO0MbH_#Aa\pLQkf<T`<]40I,)M@?noBE/[gqM<LQu:>5bnZK&-)Xii
%E5d*/6Ei]:F]rE+WKq6!d5XnPs%oRMg>gq`b0qe5',Le`pkp6[HFMeqfqql2C=`e9'bH[L@PY+Enp0>%/f&7sZi(L6O*I*p]A@A"
%rF>f:Qf<j>ml!J^"jt?tV];9B:.D[MVk%c^[^MU$d5?BP2J9%0Y[D9cl_WH8V1"r\&Y:al<##'iT5V,tlgB.M44u.$WtIPW-VE1(
%TE4$:!UR6f160YU]X/OD6>>oMNpL-e>+G!Kin%n]CE8!7O``Aj`;?\DUEEtZ*,)P3L&2^V93RX)8&$R8I&m"Dh>;6'^H@Ub],SVG
%l)6NSF*fPu=c4VCeU)05,"Bk(^ZT00]\U7Rm9bA!8Jp7Ko?KPgqbtFgplHh4NgPu(fkck]BHf58(PtBnJs1jQOruTY[hlo5Tt&PZ
%AKuF8W>Iq@g.OdaV.-G--":VB3Ql:1-B9@],dsk/(B$&DZ-gjbm-K)2b/LN,<qXLBQcSk[8I:\S!Y'-]6?NR?7=o?A&9@kqhaEe6
%(F!W#7AX]pR8#Zt%H2P\O)UW`_JtB%(QK:FMRU4pFQ#3tUCb/7omO%Vf_D2@m9O8O"8'F25)\]_i+cBmH*9EBPIeJ.c^\4CYNd9H
%*>d(Ybj)7YC=l]o&$"RU+@PU2VJ-B9Zr^.S5ML%ABq;7u`/?AArU^*80MSdp'beln:%#=oons.SHTTW(N6/XZgS693AqKUoDf#R3
%`HusJIIof<rtXjneU$Otr<E#P%2BiepQ_V3X/k5lnmM+"8p3R7DMi^RWqgh*2"rb:K).5[28,s/R7B/JUcRtPN%T?Id&YnpeQ*=u
%(R<6/Qr])&W-!)8'jXO>;rW57c)`Y'qTS5A];Tjr47aZ`>1_Nk8`F@+jU%ccep6#-\:5B5]5od1[ERBj`BR"Z*Tna]mQ7M;c+>*.
%UbD(<e\\Xd$efj/<_fEdV6tG'_rOke4#9lukE@1&8OB[gO\@uT-*k_dd%ku"2+<_n89L-[k6J<o,#Z,KS4S$V?/!%fqO\jQYP\%)
%e,+$,jS!=&]4.\nNn:h,=Y8&VrM9oZ;olRXH78&i/^Psk?8fgSY)Ckgo%toK<ikBq'%R_6`pF5Gc'2-cgSZ!4d>^1+Mu.,;\P^u'
%]%"s8BdY!.6EX$L(3USjc[E8$W;j:$s7@hM=41l%YM>oVEak045[)\%N9[!N/0m09*%!a@H;'JD/jYle=XMrKUT[:U\29=1#nPu\
%2q9?3,$A`Zbt:TpQBrsF?R99F1]EQS2Momip[.XXF"Qh))7Z%iE0`SifG)H;"/[3Y_fYotIt)rlIkaa\Cb2gE?ko/MZ`1ui+7?&=
%LV*Gq]=Wt=+m6I`B6*EX0ia];0I=>>\=61lgZc!ID?ZgB^hU]7&?r*9(U>jbj<1#T81h,CAlBoDehelt.*fR@-T_Pp^WtifNCPqq
%>R+n"pL81tbT>NN(lt5HURSN41pfDupKVLeS`'7G>P>RDO'C5ifA!1uIr+"b$QlNTG\lEfM6bfIm<h\[&'i\]SU//Hg<Da$GK0!m
%6SjLkOh3M8%kZT0YGm)Tk774>TC^bf_"V#fTD&,fY#q<B2>cO"?ENB#0&@L5c?MHeaE(VU`7R1@Nn@7knALE*XRLU<4>D;R67lX/
%!Zg+0+7GZdlIitVFiHX%"^Z:i2%^RFH<_5g4O<^G%U7r@r%SE`!<%L\$MKm*@PJsGHdEl1_Z$oAGqXUQY%Ui:]4Pb!,<Ec44^2Eo
%of`<<VdA=lgsF)eW:^';g;C6M?^uTBk&dl301^Q)Gju\Joh##:<OJuhCQ41cJlsm&r9PdsSJ+[Kl1_VLO#8R0$dAH%:NbLgo1-@4
%mU8lh1?qD9jOCAQlBaK<.m+Q\pp2U%=SYlKOaiT#aaa#*r$[WrK-M_Xrq>a2Y?q.Ie$%UlHi8^9Yi$8XaF#=N@P*HMjV!Ac9fKJW
%)#6g3f%I,N0ogiY3iO<S%aNf_AR0GQ4P`!L%+i1,JD*D*hP*l:M/$eR<2A*+0?0<T(f?2pOfhNtD0&e%c;fqnTFPOXf3HeYSG&ei
%U6/?b*1Hb][GYrrd[^$d@ZOH/gYHka*#r^8YIi4B=ogQC9a!??Kn4Fq_[dFM/>LRM2gNK'heiWDs'\UDQ8JcnX>r^"De41E@'+>:
%7uoLP10$=\@)/3KM`H\mCDMlBWa=<nbtB.UEUm=Uoe44]^Z+\1Xk!CEIalkS`5Z^;g<68QpMcop<c2Mpgtb],<?\LrK.@V!OB(Z0
%Uq9O\3HCdjAo\aoFU*`L/;=u/S,fEOFD-\1DGJO7^jM5Z..^+0FOlaCMj\&1#YWG@TlV<1+a,NZo2]bU=jAEJkp!Gbb:),5AJf#I
%eHonHDS-C1W:T*p2u%@m,rGUKBH5`b[_Jakp&=uCnOHGYjka7:A<0iPqZri?j4%h]Fe@;"/mGejdN.:+S*I=;M]gfgq-8RV#^)5[
%#R[aeedE;U*0Qiho5Z3kI^]6rKtii;SeQjk[?7l2CejgVkPWV1F2G%^Go[&V'a"'t.Q^$0>eMre&*Dq`)Z[L$hQ&Y&\)n1R'l?".
%Hc7=JO;8KoBCg`!=)'fV4kLI+`"%V4l=CM!E4^JQR:FfT*aG*qB)'.];f!Y8RH>*>=i>,V??_=MGbi3Z4\=!D$^0.#bHs)I1S9,]
%:^$g^G/Q!q,!AMFH<bc^:b=7[bo3,DLhGN93!GMh-DX-i;N"XqZ"B&"HWk52^fn=m,M:kp4fZ/pZcsP0&S9tTG?[bo"ou+j.1hg"
%:bWI3"GK<_3Ll)9lpZt183)lpVE&I;#Ve%r%$5UqJfJDEBfB!"e:d]n^t;tAaDB]sW+-R.):M)QXB"3jO(7!<_!dGM,;n-fPB0Ag
%DFqs],pc8_["RK`*SI348J?K0G^2F?)#(VKfXG<s/c+T!]qd(/gt'jcl!%=BX@`ooR,=H^ieP?qHepRH1Z=WGgcGIX%c$Y`kJBA(
%-Lp'Q6jZn6U@I<9)]M!ONf8T8pH7->EmL)31Pa;jMc;eVVtbg?$71;-r:o`;;1'KQJa]aHdANj,T?JRJUA1NhJkV=To*ArCoLqSg
%`^k!E8<=GCk(fEIX3?UZ9TIInNB<t'cUr@5O1eaV"Adh`4EWGVgTe=%Gj73FWLJE6RJq]uKt:plaVW(8k^!/ISu?#?T?9!`EKH?h
%bSoAcpVr"f_V:%Xf>@-DA9dGEI+nB\ciNq=5JDMXf"O&)`r&&K^T-3/(;]%,Mhb._9"RbAnM4Gt?3lhi0W>:J4ZM._U3@jLE_K.H
%P7m,:RKlWn6m_YTh8:]C^"#7gMERY24e4?k.FY5Ef[;3$>jiC+Ib:XkUGD:qI':K#$L\9+(RetCbY&>kh[]l34s2KPCAcl8"'oHo
%aZ>_SpAjP.>DQ"]Vl&<V_<4Z-j,/;&b.\@NIr:-N4'iD!VZ+.K0,[!8XO5Di,.1g*)8's,][9(3MU?>^E_Od3SU3W8nO_L`kmf/R
%I<p.(^U6kb%=U%R'd)ti87([_r,kVL9?;fs6;F5kQBLQ=1m2m+0'\>jFsuU1Tq8l).(*k`V&P/uNM#VK$Mgq^?8lHnPU\RDgREth
%_lgOdcY%[RpA)LBj0_N\*E-,$onbf9:UP:n3(OM/kr;1d"%W!*b3^fm)m6!W'-&/+--;34EeKbd]Iuj'G=^,Y_%GSN':gZIHu[_*
%]QDWi0jbbnoT\-n1\R^"A#H"nS`RX-QQ^X/m+LpL;]OdZP':p;jm"-;L`PC>H0;h[c2SBZouFc*qicqPU_\;dEQ?mY`OdXWG:i9l
%@Y?/$7`MulK:AEuZO1'dJi85C'=eU+GMuf1q"&gH,+St:4q(5V)S`oHCM2Zk<a=N$[uiRUenSH50u%I<hKCb?\Q;CnFEk2*]Mf_2
%2.)h^-@G2oB"&QkSX\)Phn3gTl>lJs3I&$X\T>eD\NBO=SD*o%`$UrGa)Dpi%RZ.1rL#:UhI/+-k=9J/p'u^pfq7Xe-mgr)*Z5$#
%bN"^$`?L.*/hI,rlqn^Ts#X$S4&>c9:]*:MHj!4b64qCGQPbt4[>pJi^.bjQB62>\]X[#"<:JiOT.7mq&VFEA?MdYcIZI/$_ubnd
%=l,PD\$gh*]_L6"s7#CLDr0EfpHMFsk*s?fSs+<fc!7.A2!90`NF,G[KUX`\nDT5Mrp^O!bicJ7-+%jn_k6l(s(d,a:S[oqFi3H^
%:]LBC9W'O.dojHEJ8qcAjjR:m+5QGY2[AnuZG/D)j?;Sa77aP1nXn*FhqbtnrpJm;f?`=Ql1>?(J,2sMDr/,frTsI*ej3[<$C`\d
%T0<3%lc(T,qsr9q07K\HPlHk%rbqcRNW0OHqGlsrjhGQ3&p"L9`\c3Y#lMWoN4p'l=^mp(`U(B70&cF5chn^%DOf1%PGY1H6:s2I
%XD@-uZr#lbfbi'_lcCL/%7je`L@rR]cj8SWV!<^<1[Io`rQNAE.^(&Ba]R5nWEjel7^4bor]?sfhGEfk$?Na\C<@o#6GJ$j-E9@D
%lX"Wlm(h`&VK+N9I'ZXm@5ki%;lN5X2s,`\5BWhS,MU]!q8Qr54ILl4R4%mBVOQ6igXC@q=M@@#Y8V>BGpasFCJ(Kcfu;O@mq+5F
%euJ;+eg)L&22'Gi0F+X2^7+s]XbF%n:.rS;24[d.>ipKA]ZDLa:@!:+,(2FTQd)Kp^k9*[X>as%#pHIJoIaDE3C'-<UgU+UXHWU!
%QOdM2N*q]0:O7P):XIFoqc%@;4_N_-HQmeVj6;s[@9HC@o59T>2;-+!quf+,SnhMBNDSSjPBDC1OH5eIm7SNEMGgO(G4a$AYM90`
%iuXCI,9anlqLRpn0P.j6=0/L#YV*?r^7!3'coi]h_FBCUGbOeRU6kHS3Uhg[K5Q^n9r#q]![Za^<]alQj4*nE,^=I;T5#T._5*gX
%(dM6$G58\e\Xse!j_UAN?L/P*BrO$<GCpqr-@O35iku"LDs&"gqDtTG(/mf9JTEPOB+8[j^02bJet\XY__%qR),Vk08SPSPMY!j1
%RE_@B]q1_#1#ANrrLM09\hThZ_!TP)WRg5m)07J#[S9l9=q4fUk(L-UJhYeB0MUD.52/mLBGL?/At*h'S&Lk!\J]HF#$lGt`g,pB
%)qPub^Qs_*[5h)l>'m-XlDmX`bVQ<WgKE)df&\flCGZO^]?MstJ(6QMb7Za!ZeZaRg1eP,!GOC0`W42>VR2AhVF2(HhT&)3%V+RE
%A*+#KaIUI'8iFj^PWUU!'U+Wdol4+?Xtp5@eHXM3OIO@&:^GY<lL\J#!)!P1,.ik;XY]@lK(XRN[\*pu'$;V7bKq(!di;H(P\H;0
%B&G_?C6-&AJ:`[]ZTO0kQE1QO596_mN&'esEFlMY1Ms?jJ==_mdT-Er0fdMN>)[7@glaL*$c1Cj,F:DMH*6j&'N5sOMqogB`FOQB
%;kr0h:Q;bVY@n!WXHQS?/"O)*&kG2G-e^N2!O8$17,lrC92`r,9LS3)A1Fre\0&k.,26<;;a8X_@HOF-a:M.umrl$B9,,@P:mHo@
%MZ)%"`E#U3&)kZ11s09^X-B*_bYC$<^bAE5/H&O0_]I9/n:o$(M8r/$$L1A*@]j9_,K"Ok!S=TK=dkR?Om:H8L9*!U2j9rc(oHi#
%%A4_i18EE2kfSIR_2tL]l,X]^8:gRmXBGG<6!dt^S)BDI9ALe3;krDUgJ(OB:oo)9X0"Ns:YS#>`Jo&[KT9/[N2"NnQQ6C3a/o`_
%X_tVa?5'6^4Lk'7osS#LG)q4rZr)>0:Gjc6.kZ"+A^rBV0XdCU0FjL,9=sG?82h^EcEna<du&,'M=8Q26Bi4]"3%+B;2gq?bX"s[
%!>ag.&AqDA@a0Z=e*-DYQmo3cV):7+,R"sL]dJ[HVf@>m5%V?-lT*uB7Oae5:Bb<uYSj_Y9PmKN`(%f#A2h+]R"!Lm)!\!]b]tmc
%KlcUB#pUdc5a^+GGHmbOQkB4/[>0OCRf?q5Ri@3-fi-P:W_q-Gh&rDHD2^L%*kj=tN1K?J`@-PXia$1UX.mOHlHEdTRb'!E4IMgb
%U,21K72Ic?#U)<MZ`LdYTj1;u!qP$9GBF?D.jPg-3CrJ5kpF"PULQ&n$8K+uP=dc+RVIrPF2Q9OH*J,AiA<@F?kh(\VHqDAZjnJm
%"#H-a'f_n!%EpXgU*'d/#oF[mgT!'/##_YZjg\@25kYZuCDs+RReq3<:J40!RWY?E)=<C85Z)$->,;U8,F=8;Tn-*4p`*cd@Fn]S
%9WDTP,ZgS],.7?s%@)O-!SJhSQ=DI@_$nBJR?u%A[*NV7gMqPN:lVr`YP'c?DPgDAc2+Rb\?%"rD="B?1^Y`7hqC<J\E"W@pZ5t;
%'&=&lL7&B%3@0e^Pq95PX*O)UO%NDm'rA""]->pp/duK7lQKYlgMja[[nKfhLi_fS@^hA06]1t=iH%G[?P)?W<`uV?U,Qp;D+ZZ)
%e5Z,NfaSC5`(QIB;beRW9J`8`A)DsNaaD+_#-+-)RSfe+bM(=32DoQspa_.CK@(-Be5i`Hg>qD#"Wb#G'K/-3MFj%4F2Ub8[EE<T
%,#cOgZO3uVb).g*?i>!7Qg>JWOhEqr]"3']f?LV,H"]S3k"H)!%fWX*nR>0:&WS5nQaE3MQ'fa_l"-HN1Lde&Q^s=Ne!*&*j%?:k
%GHB8n-u1H)QaCjL7AS7AJ48KOVjL!iV(oDUdM0=:@q--!-SN;Jh2L%*V+cDNlY4'dg#n"0h0'^FQ7RE<)Dam=KihR6'e,fWTE]?.
%)FHa>-=9G!j/"TW0=d3>@K\KX+=ro%Za@Vb9X)'M94SKV?CG_Egast48tIKQD]K<*3Cd;N>hXa2FI?$c\P_E.A/q=)k!O"73jT:t
%.>4Z>Rs@9,^F4r=%Obr9L<et9B;kBLV7c<d,f&3-$R-"/_(;4d1SHZ^\Yi;Db],FqVocZhp3l<#lbn:#?i8nr5G,=N+O#=XqG3`u
%Hi*C,+&5&4]feT0rp<e%H1UGA#@@]g-BD3C`)R#)Fe7j:li@<XfXnsZe<hOtrgWknBRJ'L7!RFqjKQ41Y/AO@:WaY9B8qjX_oQ3C
%72s<:jo>K%AOi#r9/Rpua]pqJM8'cgLV7+0_bBtX=_dY>P&jI(,G'*fAJ3YoMJ*d<VPY;5=NGW*b-@L%I[C%h^\^m3FpKQh;\uYT
%N8N!;0K)!;oX-)T+sc/;ch\ccejJk-iGX+oFal"NiLgHQ'_69mm^P0_5$fb.,:!#r1,X3`##,eQ#n)@&,\T*TjX(%qK&)D>0`)D&
%6`_.9'>lPSWJ+stCNM=4`.F21&2peV&3Hb_6d/i(g>I[BlnB*"SgKsdgr-E/>aN`$6BqFg2M%sAMB9aJXkC4p4bd*.STXEX(A&Tm
%&os:`*$s8D-qjaU#DF9g*<)YQGYr'@e;X-rM]i.'+os`i]+TQhbbpcOb4EYXXh@^D@o3nG<1VggoqloL](>7T0hNZ(gTnOt$F@n[
%Y*_$16BP$71.%*bcUGNR8dr;/=\CBNbeW<U=F4c8_L/4.d)&nV_1R&a8"X7,0q%LAka5bT(`>MH8Bo>7k)<:K(Mj4WQ4XA/Q6CF8
%F-Bb1f'BisPoq?lRbX1p2k>mhNFM6`,J.)4-9%+/$"X,`dK*1g#b"1*dK1RFUXP@lQ"ON%E0"X1n/6`i.-=0jmPcA@/;m9Zr;##>
%)'7$RTM!.%-Fj>s,TF1RGPN5WY]D<gFq,*Rp6'C,Cpf$E1`8*Y1p\jA4JsVA/nAfUmSZC1"N;^eh0$Q=2>cpUY&tBKg19dagSXk!
%Z?0-!b)r*+8fhUj+p:d[FdQUZr,*``mq:>dEIl=BM.Z3gQ4IDf8P2=3+jj'0L`PnlEn/0$(0AAMJ\mY=A*m>FGae6Li5.<X@E0;)
%Xu8c#!B-?&1F3O88YRP](f=<8g,%e*<l7[/\!r2?hIsT?k(ME]U7175+'/aT&JR+JP=KYd<#a&!DdbMl,)[$>V/Wc#:;fj]X]Nqm
%T\,JTUt'8pa<nc56-_A5VOB3C=`(JV"%`NqNR4aM7[5@cLRBo_iMu4n*C9GcG.U[oHS4$>($*Sbp*)$0"LAR;U.-c/#:J])Drg?7
%B*@rP.&J@a5RnWBSQNWd+U<%G7%%Itk)%*Sk88#c(<fH."jLa8!Ui.]:9@A!>LY;?qT<><1\'r^Z*U+-bgTdMi!dV92J]D!elhT:
%A4h&Jh/K\<M`4kZn-YBUWE#f_(3c-EDNgJr/)I&W_/+*1FV@OXo^]A$7JE9\#ad$k<"$YES74Zr`6,5bc^[T]S7,UM#iJ@i=jLLr
%j,;2"^YS?6GH!Su-6h:#%>`HD0WN%t=-jafJ]ujXdRUUM`mYfN<f@>FB@!4Q(G\GM-s(`H*bo^Cc48.Uoum[j*6kEiOc=<<InMLJ
%a\!CTj-9^T(PGN**[o19"h)ZPfC5/Xp$a]fRb#oY0$!+"+O1eW$\e?\nMh2ip-!^%cXsO'mHqjE`ZjD[>-gs&i(%Eo))K;K;'HI'
%@SU[-C*k3EZjrJu7n'u7EeZ97abuB?HG)5S`>iT[ho<,H3&Ph`XM5mB7>dVNr7[k`)7s3`?.4bR9iF8.6k!L7V_V\/7Bnm6kAF7l
%a700cdoK5e.N>k%X*K-3)HSBP>-.0K<\u=bYoXVHG=n0d@5^KBq+aXMk(ri+n[)TFAqW>0ghoaP68@RAqFu5r&kOu76e0ZY(>+jB
%2K`2%nR=Q@q</HgQ]k!Td@&,`Y2g$j2_t^h.^%%VXiq*H82Q&)D\pr3"64B"FB0<'U!4pFr[h(/=0e:;/m*`Ob-N(]lE9_PUq/]q
%m/EPY-8ks%R04c^$?iKbGF$]C=E\"UB!tWX*Jq]IouH+;"CYlLTt`<=bZqU>^f7W:Qn[s`O"OX.LhVu3**+rG4MiFt#Mp^l8XJ1Q
%2%G9(3@@3,;JIflH+0RlX@FfK(-,W:h4`2.S(5o=I6>]SL/#!E/<ki4mGcn]XZbRR\AoqR;@19$<]YJq8pDWSTRN1jjW79U"WE,`
%Jb:IL7&#P9J@Vj^CC_gI"bTqf8jm/T=\m6Y(IXr3#&'2VZt,mg1D2;bUS!0*&P003Usj-V4esF8FQr)0\9RNXSr#19'=62_ZBlp'
%;qFB]IjHKPAa1Z/^dKC!`3[SdcsW)lPMsY/7"P%T?pelaJ0A;]V6VKOM2NFE8\s&dKj[s-3"POhF2o+X/B5aL6@oWub;uifk1EHt
%-@028D(nkSBnDK<h"VjX6,:lpNB"t9Uc0Agj+Xn)jf]P5-(gkFq:n`a@N3^Oan2>(6DBJs^Dj9gKa=ABiJ885*Zu(^RitJUY#e\c
%eBS(Fg0>;U=WVE6pTGp-&Cr-S$LR[8R'?dR@,@QE-r]\5[e7$;<4AZ323W(1&t$XR8!2l@gJh]5ff6u$UJpR%NS3I=HCkO.*pI"A
%(1qNSeYUK5->UYu-p7(ep\(Cb2+mWHQGUFN-<8VW[j]nW*N$6bI%0t/`X"1Qq5&J('*"Cs7[]*XNd+<bX0i3dJe6qY-mhgH?:2dZ
%i_Q@<Yj3pTpFF=B$F?fT;[c=hOHIRGACl'0)DA_q#)da<jG6J4$?!JRaHSq4I=3+:pqD8KeFKI4_dc4s5+X4D/nE7Wea7.YlB4Pd
%\U2=gR05$=Gu.0eR&a8s;qh^04gBYQT`[_,\7UWK\700MP/iY9fJEMU&,]jG0kGG!*34JQ6/dAl!ln4WUfi#Yha8*Td<L[AD>j":
%og<_p:Uo+5N\jPO3(6h='>i0"UetpHCuU!R@D9b"8hhf]bXSts4K+Ldf`]H28?l?RIar;))6loo-t&Yicb9)X"3>`59j4lcCgqM@
%Uh.hB5F@n*(<1h2EaEBP:`G&29[GG6o1I5b+HP]jd^W=Ocl&$^<R+^7'WfntB!N:C5oi0IWE@JXif_O/a@_kpqFSPk-.Z$E3C6<U
%M=_]nBE"hTi3:_llRlN51!5?Y.E8=_$KZ\\d*f:R=fof<F"u.JVHnHPc`3W=Kc2`_)2<,<.[?_H;T?7@["IqkekZtY-14..DT,@O
%8Jk-m0[5TM1q^4`C9sI$0QqH$A/!+Ho:dBGs%OJRS?-_/Ao1_(b\^0cLL)j[C]1>&*@<:s`,J*um,U,MR8p;?nPEaYR)50+qlW##
%o'O:^Qj=4d8?N@_EaU.uB=N[_0a;KqDo#<CjFE@#WOu@g\(XS/.!r7E<LRITNROt:LD37:<'W1Wcq9.,3O!QtFebX?k?@5/Fji@<
%$CE#o/dRZqcT&>=U>=n)VX=KLY*%X=i6k'F=j=(]8<MN]FYdo5U;@Up4XTipPW5=B-pIa=2q+u$08V?!as>G0<OS:!Jd%C8;&7JI
%;_`ih5cUs+,`jri>7*iBPU)Z$i>oomQWfa7FfU<(B*9$q7SN?78QIA@?<#3"nW[?*P=s6/5b>3AWK]-4GLh=2(Lpp!h4A?cMeZ#L
%*dZC3,L7!2h%K@!AfiA'Fel*mkKg5LKjmu.4>3kciftqCqrRof1#dA>(bkP;oj5thpmt3m9^:ZnpeI56U^FaRRR:KsEpi'=2?[;U
%nJ'jD9Zkk#:69^!PYp3=P"CZc,+$E57OKF=d9WWA]PaajjN-"qVa5mkH">G\d6A*d8:s9\&#f=@-1K>6rTFtNb2/-)'j:QnU73,c
%gdVZL9qGCD\;rI(H=7$$QFl@7.Z$i"Xk:soPa7DhWV*H-Y)L6/V&i954P,L^UC\(coop9=m[6l(@nDSKEM0=NE&KSC'fdEtW!qd>
%;c_^I9KftFgZc[QjtN9Si>sMCjku]u"@[e/3'nXj2+iX*(#]k1c'_QlYdu8so$@(=%pD)OEB*km)Gu;I@h9E7!?18!J"dO\E/8&(
%Ycot/p:P`01>5eR#cm*pNB$=LY3m3</gqGQ5EUl^]>m)j[S.!j,<k"*b6C3"Eb$cOF2DJ;<Y6Eo-PV8o#7lM6)ME^_fZ&e&/2s]p
%94f!62jMrkRMpJl8R>8k&QQ8PQK.&STN4"3BYA!_Ysm4-$pbf;JrnJU<L:N>IXn/#"Tj+k#NaGe!J'5A"EB6jX8^V$L<1kcj$Yt^
%(1g:@V\mf-POca.30USj<!UWe(6_;H2!&@JD2qs$TOK+abgtbfiscY5-7M)o:fJgnN=>'&i(lL-cr54C6DnC9)+Fgq0U7F=Y(\hf
%Wu_=<.M/!R_<#c,.F^CXJ+VqS_agrVSlR^>P8D[:XE%[A8D=X!Y:;3HF.rgQPngq[#H#Mj.#NB2C=b%`B/VEKO;`t-Pt!m></h@O
%R)oG[X'][dGCGo<';_p49h_k;VDb&>X#'`\^I=C'O76D96/5FOSbb8\^T#G:Ous76/4.tFCMHd7\Z`B=5Y<4<MBY\ilDQ0j1$NR7
%@7c_q&V=1ZM99PC6mF22P@(*=MKk>?V'CZr2Q3%&W_-9K8'<[lSC@^?PS3:9'<16;?M0K#>06bG8Ad/2QBDq][E7T:WHu5%oZ_DI
%UDIKM,DW8nJSmrP,73-Tq2R+S),W%U9IP-P3tO__-)deF,1uQoJ%A4Z'W)S/YYcfF[Mrr_50pMa8kX5cBKj7$O8KR:K^GG:6*5`k
%$=+<_o_M<oqdUFCjQ+hp$fQ$8JEjbGe]as+k]]/mkOl^AKOB>/pUp:=fO36#LIhPFR]&"KYo598S=B!m="Ld'@F1_l=k1![67&1=
%bd%PZW?dP,Z:Z<><B&mSU(bBL8Zm=7<4==^bo@nC[BqtfX`8m>Y"mgrpXUihQX/>gj5GXSV.RMIfe)`[j[b;hHVdk!_'jQIgl+[9
%]GH9"=[D#rmlHs8aCIn.-[H4/'n<Q!?aHBi'G:pT%mN\DTd(tqZr+5dR9Bn7ZRkg!ZN6;_9K!gJ"N;ks'BL>R$VR,=.IQ"=\e4Ig
%NFq#oG@495kZ,fZ]J0KK.)ae?FL4uO"=CT,IHGTP5;;k!P>(IK'8#IQHLdYN\]ocJ,6OR[a;$XEWS,T7$.7#MXahs$r?g8/q-]BZ
%jAFmq<BoUqXrF9bXGG(ao`jt:0jEe^LDf8RG!5*Nghgm%2J4CA$_lEN'8a]Q`$?FefP0tk:VhdtoWU=.%=1C5K1bf1ET4K+]*G%H
%#ZM&kX\GZG:kH3M"V71sb^dIB<&jm2mJjnV8"mu$\btAN'%4sE?.AVaKO=Ddo]DV(4cqSq^<BnZ?!%SeE:f9ZjZ)B<M5NcsAYf(]
%g<iWCC/SU["UntO9speVH+1H!f;\dV99c81=1MpGRK,eCP6:>9!fe[40,R?aiY*or=MGUJ5&TVGhl.\),CRGZY0)kR7m*g%S6f2?
%/J3-"\C)k.gtGi>R7"AWZV$R7lYY#p9LDU]]'3$pe.B_P1FQ-m9Hk:0b"-KEQ>^3)9:\pn;O3G-V4\ii187$*TdfH1$<j1b;9A7k
%\s3E1<.=G0aY/L`['2J-At^b\<GQ02GIFGp1bYF\hbI2-0%$OeO<.$<Skc]JpU\W)!m24?<*5B3W+M2LX"k_m-Gfm_nmg>V2$;sQ
%0sPe\C)XC5l(Qb*U];&TU[T$kfp-HDEiGc;QD,cU+BsYHR$S;9f&`m5U26`&*h$!c9<YF!Od\lj'8qHOo.[2DH'h*slB=D71&H7-
%3N7[?nS6t=ouGNj2oqZ@k[>0O;$@*]4>&NJH_?`ReK&S.X`-KKbP#s0^si@06!.Jo86o&d<e;1"U,Fh6?UK9$*Zm]g#@3QkD5C.g
%M.]D;[O%3L9X>fG,bPL(a$#]$Bb`G)a78gN1OTK34%^2$!>JQaMk\(bG&$OmD4Ff3"H#cr\9Mn"!A6iT.oQ2T:?/MNFCYO!P]hD8
%^kgb?XFqnddY_X/9<'5k&T1DZaGQi>\-)pL-pZE#@SmKo"\ajph@)8?@QVOB@V9j(K2mU]]e"qZCAC0VSFHd(&8?,j'Q]5k59=3S
%.UMsF\5oHsAks2m`tJ$^7?&.0A]+Qq)O"3ean4WK9%T#U7IW5`SOnf`c_j$/$oBFal(qg=X]k$<?Z0O]MAm0r;9`9+F&B:`lCtZ;
%gqoklZpM[]j4U20Pa&\u41D#[C4T?Y-ON"9=BnjQ+V%i$Rf,K'YG:6\@/"^Q4U_)""_1JqD$gMN]1(e>OZ??V:K3^.W&P9ElIBBY
%lQ"ZY;%)P\TXfct[@ArJncYQ$I*&AiS%9%N.p$>Kk-0An1/Jm^gl4pD;Y3^fjWuE*ZM%`Ra<`n#$eo_93!<>_0Jte!"cBnCcd\+:
%-A5:)e4&@4c7mjJI/S+jFhl]Opi:rE24*g]MBAcc9Ib62DGAC'/h&(uY4f#8FZdWEQ%q*[?YfH'a\;>*^nafs.%hs+8Vs1)Eem(4
%Bh7/Z(oMI:c`<>['[VhcIG?hn3CHlUC5QXDC-pD_/;SXQ?)k'2N+>uYoh]F=@T5'g,Sf8ijCMiF`J\1B/t\Hl'DU'g>fC!uf\ukj
%4:U`sW_2-6\J::d.cLQ0Al0_\\b[3V.-jcdk`/sZ'rssEUC1I]Q*F@s7/'t'^_8$VM&=U@go]0&"Ja=I'F$/pht'V/V:c6_&n6ZZ
%dLnL]fI&^DHAt(N4ADqE\=M:;G9B[-[p"02d^nCrW$K>shaApCBXLcIAZ1%I3[)j:8`W4_6ckh?@ug_S$i[jsGG$^V_?77iE`3`H
%MpOC]6`&A?mL`oNV-hSG4H!qq^?Z"JPA,a&SS!K&7Er#ufo5k`kn'Fqe8s\O9otHPa]#Xjo0ZV[#t3j:9KX"@qB*Q?_!6**WHFkI
%;(H[NJs\$LQom-qZs7G3dD-g&:("lh/KESnU&fQK`TOnW[u_@QU.O;R);6j<#UF(9ZXTeSH!=7L/sf=1pb]T"n?k.kD9M2ZKr3sX
%Qa:if_u&cbF_[p4@hDrii$Oj[hI#Bi@Ic\K#V<$.3?_"mB$"f,6jh%;`[ZR69PYX>]Z84WnXCWJQqi33of>BC11N@WnSnglYM6#`
%LhL1slK*o8:F;djnR`c<Z?SBA);J5h/d\g:Whk1KgVEFbrPas-eHNcMCk<sZh$\Wf7Cm]*<%F[KP&s*NQ0jWTC<-ejY99'Ee#K_i
%l(J7I<)&E*@OqPp_N8(,2!%cNlj@KABj%75Os4+UO0fGZqh46*J[jiRjl!))a&c*eO<B-I1s+6UZ7[12J=ma?2!$VGC[`H%"jB:I
%+Q"UuOg\(qg<uOub72P\@urrfXJ2`XO@jZcH7F#qb0sO^e^E$01?b_T6?:@W8'S'\,"PtO?s8"M4-c@6-J.#>^nk1WXQ(V$a-.rT
%&@K#gfMaYQ8f=r4DL+PK-;%hsm"s;9f`<R5b,A(71kit'?5nS"UG.pOmPOPob:$AbWjP+7g*1d/LK*i,GlFk$r=qtaEaP%K?9NoD
%--qPp`u@Xp)s^JD#DorDRS8AmZE3Yo/H]6X>;jZt%eJoYPoP+4ql$@>SpetRpcIKQiX&g;6@0RFhT?a`aQB'G8dqo&=n1VnEG@;7
%J.(;G[Nr1GcjCnrbW*&-aCXp"&#7?nP#Ofq7PCX<l8jl)JdP?0Y%>VB^t[qI@b$^+P$*@OjFcBkHRLk7np[W(C_IBiYCV^4:u6!)
%<>&P"b6Z&pX8rIV&p2?!Q%3A3&M,(/(+1[D8ZhFW;+TXBU*9tZ3Fes/?F.QOF00PW(E(;tHCl[_8<%g:&WEqj,aq:hGps@TN9o$1
%XM<_.pV+K?_5<LD9DKV1<E4IWZGi_#M5N1nj+J7M[sN,d4eI]o,QjZf`hTDGJ`g$RJ%56,ofuA74AI2p.dr3FT/+=9/cG3$og>FM
%++CWl?L.ugVI+fD`SWk+q>-#mS$2ka`LD>kDH#:#rBJ$rPi'.KqSfdb0>@A$DK:1"HMZ<%Sc7U:q==o3V]WDYO&bM/2"T]Zr`;ih
%EZ29A8$q3FIC`0GN`S^W=B:S<lV9-1(N73)_jRa)NU_CuKSa/DKp#nc.nfPWP@c?YH"!ZiM^a:^BF*6HXO<p.6>gOY1o"b9rh/+B
%[3UYuW[DCtS(dW*r#cbUCki/>Ocr"Ai@G:RG1Yj,>/@"8#b?SDQrO+d?43\WQJe"KJ.G!"'e)5pg5R+BiN$>,Udgn;@G^ER6,M$D
%I6Xo"(0.qEnA;jEQ:@FY']7Y79e(fRp%)3k<%@2"^:)2KZ!E/0rQb9VJ(/!/2oTO)K2j>''lD(kCo/tA>,/0g8=O,7`7b)WjJRSl
%'Yaq:6%-sL$e<5$`#Y<UnS+b&<9b\%)Tk*b@$R^,+NQ$!R6Aj;Q->[-^<3qsF(7eR8qJL.NBJL28aa]jQ5kLNFM1LM^d<V3aXs9(
%kn->kM86'?7<+X#\DE"8;LP9F7G1DXE+=r7&af.J$nrq$Tub<?`FCCrWdW!?lkgJZ:c1/Sh96oMU0:4/G;>&_Uk:ED<_[hBZUTA>
%!YDE).Tn1:3,.=TmrMOOX3bEHeh6>DiO>nji`sm6W^S/WK^`%'e5kpG:uHL1Zr.g02'PZf'!u[AJ<^`5X-e`7a^(S-6:k#<F`q5L
%&q'DmIei8//q.Q'gN!b=\^95kpSck`/Nt+2nV)XmM&s[9E\O9>FXRVd/>I?7nYMW0m3F@,LT.4*\<ZGS5G4\<'P^I(/enf*YE[YU
%7'2r7X8Ah6*eB;ZLs4>!P2+LVV\?W;C'%DHl03lD['TlZ<Zl_AGGk58/<E:QD[2H_'$oiPXNfKJ8`1f[9Umo(-oAh>f30-3;:JMq
%]qDViRTF9=cP]I%X2Kkboef\<ppf+J3]eOT&lgt-7o/@RUlgi;G_@AVM9+t"S$0C<`.coFI>&N&!al1!./,5(p']q"l)gqskUA?Y
%3\p=7M1NI<jeQ(t9EG9+V3t';i;GFZgV?+CC'qZZ)Si;j=+kT!/a,g,4BV9`gF>r0W6CpVSkpf+ifqCuCWkaliYC3@.nOTU,3Xp-
%FnM7re<Eqk3W%e:B?Z6<(33^On7Vq7,t))Gi\Lnu8<r"q+f0&]6V_qCMKP;f!p1X$8gt?fKV<(m"dMJD/:=h3(h\"p>$/!]aKGk>
%+>cS2#5GHd-I;Og\1@peWe't[CeX*M!9!9V['dd[-7U)a\rJ)C1`)#YPV:qa<UI`>gVTM,")c8f%n4_1U^<-C*WdUF'K^u@FqUuP
%ICb!'VDY/[[h3gU7D_J"A"aJpi._=(`XGg%fANnnA^=ILSeY3,[fR:NKuN5G[c4L7;S7U9ABdGOkq7WdJc`$lbatZ%$4roRnu8G)
%IMEo50[3\Z*k[M:IaA/]jGUGLY=O*G;7pX`7Imi=PbsdmXJLGNK_hXQc>b#Y'7kt7qjGZ8><SLKVPc2;Z)Fbl1`i-*"+WJi3h&^3
%n9f<Z'1l0B]TOqWV[d>\cre5s9]YK48;fcq,c&'iX!O_dHI5[6b47_C%W2VM)A0ER#a1IjPY<7.JPV.MrZN[Yk"iCl(jKb1&!N<G
%gX,*B3gq9Cb652T3=O7E$E3%@)FG,M<T"pR]!t00Wfo3)\2\9ukRn5<+To<eFooBPEQk_u;5960A7C4Z$:/NIhB[03c;WOPh]qI[
%'dgoo&lN/3rG,1C!m<j&Sl/uR"k5;hZKCLh)r"%$3"^`:#&GXg8-Ho<NoN60"m0CSK[!\;SgMdG!mIMER0XFD?l4G<Q$+ZeC%0&Q
%[NL3rA.`=.77f$9XPLoe(KFAT9CS4r;<X[M5*j<A5LE3&>]&]i*a&s`6[6.594-'PM)F-()6t`el&q?#?ANTQhF/mP_C@6?1]d/X
%8gqc>2),]_Y_V/p"CV7;8e[G"CB3aBPgq<"92&3p$#;,WT;f'+h>cXff:CFl@LcLE3k%Z@7YHd1Q=\/&L,`#/[j*6;+rt[ol3LD7
%9US&^#_pd/?skMReQT0;fc(Z9(KJ:q,@tb(\n$3>l7#]#6'N"DX(\Bhih]UX0n<+U(WWUD'Ik.o,*comUjCYloTZf]DT5>&K1R1a
%1#Y4&c:X@c[)A(?>$3f(`Ejp$&5$J2hSrQXNCB7\TaXb(]af+FC'$FGaK+BpR'cM$j+=ub*,V'd27_L6CVE10!]In7.f1NZ98.OF
%^Oqm,02;4/Ydn\24+#YCU4l:2V(ImLVVL8.3't`\`D\74*J6j_<b_?,9%\8V8K\Jn11:Tj0GD3[d/!$^U4O/s!=#X40,bt/UhFdj
%5p85$U8<.>V8LCq*:rV,ML>![32O>;NPUQ`@Xlpf@[/Z$d;)l".As%S&;2*?rR0#-dm-Q/MsCDfE!YAW<?)Y&nE[_4'N^ufq0BQ!
%p19N31&2L@WssrXFC),qA6@dVE<?Kr;iF5VDW-Z6Q[dC/EIWEh'*>Gt^b-,+kAX(qnKAj1:L@WY/+HVf0oM\JP#b7!R:CB0aX/FB
%kBTF0$UJ@S$?6U_ZQt0jUmS=qNi=ZiO$NGR'g8hGg/9G-8PP/7N!Z24eW5ej1/:fG;^I?P",`hidmP*eBo*8SJJg,B<<Ak:C5'C$
%/YV)<B"M&?[Xsqr\!?*Rm!4)k9Id&PSJ`9^;0Do&Y=I>$BQ3P]jE5Wf*CP<Yh/$t8=_cb%:@-Cp=!2:tOVZ,`f@>hBL'gR/6A]ui
%lq2,76p!7UN?J9\e_Jos,t5H0b:.Y3UXjZ#YJ<[Y.FfnkF`/<FJHE%7or6!bL^qtZ,,j1'N$5.`a,:@mAea:&CT.M)/d@A+W?SX5
%b:<]\YY:8n`JULoZP48f+Y$'6>9O8c-NnFAOrQW2KY1mh<q(EX5AjrL'U0:Y:Ik0m2W;+=\n"7$ZZ,CL?]+&I2-R4b]fJLs>H?eE
%#m"hs<TpMfZP4Z#ViFkMa<pU%-g`$PV(>r[WT79PHqDSY8DI)`369J\j3[G'`J/D;cUgMSGBhgjp#6&gI4\WKe3b:YoHsU`JW]5*
%PdV^1Zl!Lb(IH]Y#9d5HY=Bb+UE@r$H1c2D`?cp#N<>=TZ5/60I7Uk>W[h=aT<>3L/$99a`jq%i7r%?A<B2+ClJgK4Q9515B9^r)
%>bEJtf^'7oP+n.56#*X`H"j>5'u"N*^G;#p<XH<&ouPQ[TOjN174YB/OK:U1%VtrfE3bFR`)WCVOTP:H+=0YoKn0PAS&2jt9d%G,
%G9o8H^@:Fal4cMl:mf#c>*bGdeV\tlh67PZ/Wkpj3,"mE4NG#8TS0CE,KNM`Huc5ha-R#Zcj5Zom!p0tl>*=d(5RO7n<@(p$#PK?
%l;oC6bR>NNX7ap%CQjRU#_.lf,KEak7&]DNY/^nR"V"W#EE1GeQ#Xb-8=_9.W-+5<g`$iMF]m+]jLksjn.,X][5O&.\J,Y".sRp9
%A3uh6P@&<*M+$>;`F3uOh^GOm*/8)KO/bCh&T@lNl#K<&%bB>;$m7$Y]jdn_YWoqW>5\Y"Q;1cb_O(B3s1</G.H\Whq;`g_khpoj
%F+f.4*PZiU6U:jA%ta`N+C4V1RKCCV8jNc6_>7?$3oi5'/,8t<FU\fjAIL;/+]JGSY6j]!oBRp(<&'a[J6Il5MJ$DBLNWshS`0bJ
%T!4R>F+]-Y<B,bf>Uk*:[['VM9_m/`];_qm$$Xb==kW'jdq<D($AH_W700NsSJcie\"hrW--4AFnYECQ4/BUkiG)l>$rE2<\(8UH
%X0Np?e5%"Zi$DSZ=P<aSKbWpn+p_+!m9>!e_KYrD08Q06$h%$8U=.pQ3Pq?2LlO3[a-n8k/RORh<b[k/XrU7E&:iGL;08f$.g_Z4
%*IT*Ba8h"UM20S/$?/Ig^R.,,m',3J^P`polg,C4p@=!G?r%;!:2)/kYYV=?`gJ1CMg-LK.PriSb3WE3Q$:"/Z0cfH/eQ;=CQ6\]
%A_^Qk]OSQ*d3H(+KU,8lQ=fLt6^1f[5b[9Nr$32b9MU_H#ph5ff1ZImnb9DZ*2#_2@Cpk4fKq.GL0retB`Wk.iIY2Q-bdK-[`M^<
%r7%0^5DJaOTJY5CVWZ;nE-P$p$`;pfPnat$_,=^=6tYfd;mEbR,im$9.s/#2,FQJdPpo=&8/6tX]8_@6m4jIOTIm(%hkECYqku2t
%_I3J&bl]P]Yc1!,lBMX4gC2g'V2QI`RfUHF+#!jARlXUeLsf7mWWHCUM:Jl/!RV],nWG$6<f@*2O9u1%B&k9B$a'nNnYJVV;1s-Z
%Hr(QK!^^'q;/LB<kZ!^__N*/CX):reVV)?T\#go"B$KV^E<Pm6+H$rE9YN02,$dL"W#P:WR[gGj`]/$))]0jH4ST[0>3.P#;p-=u
%B,Z\DCC1K_I\;Jj<VA@uI_nrZWP.*VT!a5lodgK?NN!#q>JuK!23"+-,-.+gMBZ'"4h"Ct:tWC#Xpn!MCr2l7[?tQ/W'JIG/BK&a
%"I%\'DJCjq(mi)j#)"W75B+oB#gYOg&E[;ec#+B)1;Kupe7<$"CnB@l^T?faaOVr'G+?#n37&e85,oqQPSkj0VI5gm*'/f(Q]VRA
%\ml^+Fu%.U@V1lc&Ro?mCc8t7c9lJmeQi'X#,<i^3bj13foh+5HX^b?^\k\rrMkMh+laj1"JiaLYL1=d,Xgj"GDJu\AKu$jW6q?(
%Y:VO'@L8i9OB&D^kn[%f]h><G"`-V!2c%"-luFW5b`+Ar]7)G<Q"!C'@Cm.na9o4/T%J?'(&3]P1Ecf_VbB:@EVuh0Ha<epTV)IV
%I9.6PAJ2Xc*9UdF(q:f;l90d1K3^"Rf9)N%a'3Ot($cSG@3-nBo(l(K[3`EmVh'%B5IrRLf@=XrZqo4kn[!2Iflge<_/8qA(s#i3
%\8LNF=#9f5<ATc]PaFI]MU/-dPLM>+ENi\a2,&!R[J5%Y.BXu>/:6f@i_+n^*e<7m\M![b:Rl[-TK#!(3&jX<BKDZ.?(5@cTS]G2
%f-tV\iN"_MkmC+So`C^kDcFOeP\#I[VfL*rbT9?Gh%-eL3p9,odfpsZ?"&M8bV<t]iLDK@BL%>C=a8m43IEq_#7fp:QW>:Sgi2Nf
%'M^dKL=:CdauX>u#T.)*O/V"PQZT2/1`TGpRj?E4)Not2HGBs078%k=*AX-UKbgC'&Aq/Ah<9CJ\[Jg(NYa=o&S0St>WAR>;_'n,
%NO[,=Q2YH)iS#"qa"+617CokoY<dlC@$Yj,NYJY5g,WC]Ke'MWI,"o?%\tPRIc,lp4o0P['#&$$YHZu=;gbB8MN0[T5s+,J,&B6t
%!#DT/FPqfS-`()D&LSRj#,/#<QuE2-eor-2_XUWIWstC^eE1o_8&kmJK0BV74[M-)6Kl,a&8kag:9kg&\2*;nTEf^\Hk6#V*?Dd"
%*dS^^i'Lnuq$J(R/tN@kf\ca'&i1TUi:N*"fal0^o[1kaJIW(udT5*2C'P.WcrLWLfmpoH1L+1/aP[&+acnt5K556^daJ:9>iUAb
%+3<A%arVGUag!(:09-.sX5=iX\+Z$79!:B73$fA-595Lc5].&N2Y]a%J:fpdCDn-Q\?7.XZD3$[SdQY<L^jpJ(EdpHE5<er[4pOT
%L#^.\%S(b_7A@1>\&3h+;G3KF*T4b^PIbnii5)6<[,/=QK*tS8?+pgDi%cQX+PuY)[DeRApH(PuVQhWC%e/D.$eDV8%M(0o-uC?Y
%n\Lpoc9DP]E5Jc<?/FMU7F:N]FDu*AVDZO%FDq;nUNBad:X$PoU4OUP\>mWWDb>ci="1&U;X3c0A:9\;5/MpW/X$P]3]I8GoBYVu
%!rEG_,orY+-n>=>%<QR]PbYc2d(pI<!T.C[K.?r#'*![rY)(o^(9)69i2?e:kls+ld(V&%`"!;Q#Z#tZ7sK"&N=SI5#D_;Sr]<5%
%'OM`-J-QV=Wf(P?LBf2DUpW]_G]9rVDM0ikDuiKZ:Y+I?]e9!c*'=QdGKg404:5,/^;:'jJ<4qDlXY+-d\[*c*%a)Unb@VD%Tl"4
%CgY3eD_!)Vf\fM=_41rSgrWLM^qmL<F`;<7WrgUoE,^:h"h,F1pst*."n#+@&Y<o(1<=N0\#GbjJ.8XkefId2)dLKM!I8d'E+*qP
%E!6[l8dC4<d,<=A+N"Bm:3]d^SW;(T7+=='hP%al_g1gP6\BI(Wm*pBd,7dekgm70K+la//B&LRi.@&5Yjae43:jS0NAkNi\c5T$
%g;p]/WM<-.Yeb<0*L"*FK0sYRViD3-"MdjW'fNS;j48qe.;Wt^%1DUbJ.4,L:U!D2)r)n.Z=/B(V]N(Yje8Zr[pt$uCW^ieD:mc5
%SeDUV!?7O@nGSgp2RpmF;Zd0ZYed`bW5BQ3D"+*'"dZ`.K7dmeOOj0Yi+NbD`pD@9$u,5%g-%>RA5>"*CiCCCI+F#]Nh18ZeK$P-
%>&Kc61:RF(`]T@!@13m`+2D#"ZF5F;%'BU^IN^pom*:#E"r@K,._[u"3#^N(r.#1c:8\=<4#4<b7@1E"aP_W*BkjOUAFNU2R;TOm
%ldTb#""ZDa42k>C'qBO5>*]0rY,XSqE;)oX9C\NgLBLtY_`Ms.n5:;,A.Jqup.AoSJ[;i)*!R=+l*]=P0^qE1'%aBsJLb-(,2EG,
%%O4hQH:.f^OeOnk%KmgU8V,gR!J.<;Kt-#j^f>9RXdD-\\5jY1;Z.XB*-.5>e:GECEkussC-^]RI&!SA&GW82l-d?Ja2H>j#os4T
%k"ET+h/L/NBlU9c".jj/^;GIcEnUJ%F\Y6g^-fP"!>c0IU@92p>M*2$;)cYW:n7hbD'k60Lir3(V^Q04!4r-QjU0(u48?h4*V%mV
%JkGJt&XFTgrckGDn'AU-LlccjnYi#Y`lakO$j:O,msJj#*W[7U6T^u!"E5M1iph*rE(i1"F,p=(2/XB4\$e9Hg5ujF*jg_aeLLW=
%AUSqRm03Pc9VZJ'g]5-te:s7>7f[M]dWs[<^EKsq*..U%m?n:uAOc`U&Au<`%Xhu`"9(7*X*'^K!F0<;9a_44=q=6]e,]ST96gdJ
%F9HR9^;5rLK`J854D&OQFUSQm]Z:Q_Y&un;'cd9Z_54@Un\55-.I?8Ys"+U^eIR$)Dh2WFZ0:u?at-.3Fo6/HJep#lg>dZu1MbO1
%Fo6/$cH8C3i.%e>L'DksDcmK(hE(Qn.#t"0h&nWNDf)R-;nBkr$`-QTXW@CF@#)lP*T4\tL02@)_1-7h:T[FXnD@%^f_baLh9<j@
%B4MN(D7cDMruJIi%+0-Hs41HX0qS[MXm!:TX7,#^[4"M`D]Sg];T>E%)uMX,U&0lUphqL>p+,Uqha%OUKJF)%haBb0*&Q$Wor+#0
%DWot[%YD#I_LG3sOoZHihgr@W<J,DgD^^4I4J70/Tb0q(pKG5/D$N/L^H&V32)q7Yl^gEqmHEF_CUEZ8UONLLXG/7pDqaG%/KOan
%Ya\gfFTDGB3KgK0%fWTa-?3;rrt]0\0#Inm*QEh+*W0-f+:G?)J'6Yl@C-:>f&@[gJ/e8B4f6GCa8QS&,&>;%f\Zb+e1DX32a'-7
%44T)`9iq#d<B&iSXhN6n3q,((*sC*NJ\Qg>4d72\\#>J.*V`hQm0;*l^I8a7rW2duDGk<(:Bcfd&5&4R#N0M<3bdCnJ#g0q'^<]r
%6G%%ThnTsl%4kF.UXPAsQUW]GaPT$j^'=S&dBj/cZ;n$,*)p-uFl71HF,Ko+^u#3@'M)jArl4L"I475H2_;4u^4'o!IuC-Cl*s$/
%X+JUja5'+4HU`>7JU`H8W\VB)*R2%R/+@Ju^@PD2s&OGQ?=jHB-61s*jp1NsT%XQD3r1ceo0&6IkhkrYAsls7r>WnZH.:6V\QGof
%fqX&G"chQldD$tK@>]X8m@!;p?_Ms:-Lfot^HE\V2X#'nL8b@%2s>0^?-<KXoXCj=<)7mlr`3T$X?5Wa"iRbm6\kYAeQchMQQ,QU
%),s*ll-S<[;0e#I*r9*'QrQ]7%JuVn<GXUu^Qh5ceF\:i/M#=:_B&PYCH`JClgWfG6F6'+^L8FB[D<#gphs1/$%9"pIq*+N(ukYr
%>KJ!Rmr\>C6>4*V?\eZ9i_Y(/pi"5'#4(d9gnJX(^PDhiE)3?[L]:D#To?Pms/hd5g,Qlt_j.C<48_$)/7@97s/e\I&7?";hlqn]
%k&gB:`^q-G%JXiVVtEa7^pd:p/nIEMVIh9_e&Hq<p7a5BE!Q/V(%E^_h=874(8:HmcDA%Ak^0ZVn@rQ1c?%_/^Oq^.lB8UH?WCCc
%KD'iqm@gXBD><!<pQN6Ri.%f#DJ>5:-"ReYPO6rk^SC.Q<Z/L-J#b5#954g/W!.Iue%l!DTuDMBptp2IW\3N1hcS[7l>dC0ho+36
%OQqT#XkqM/48u\n?XCPLs-q5</Tj&_r,8UISSr]Hha!$edU#ZNs'#l?o&OlF_)cW>*'`A2CY;dZl=o1+;ePGY>]fm^/KXMan+".q
%HKO]#%00XKb-X<37f_^$M?CQ\&\rZs=`PM_*(KZ+m0<W1(u9tE"+WIe3)Bh[f;VNu"+V'VDeKRh!1^3.nAZCI\7\:[LAt!0\b8<+
%ptno:S$pB;AfQ3YNfO.AEdS,^DYW*/,=g\ms%Oqh&KZCVs40o2ZCuc3_slo05l[]YDYS>GDfW9-?uPPlJE-JC*:U^sHQi!`j*rTO
%4#ZFCptmd0LPS"j\%Kin'HUj^mJ&"\#68^e2FH:#^m3[EjY[JI*/^$o*Wa'Q/,CSS^(sL(*V2B9^`dAghZ3d`8Kj=,LB(EI0g7W(
%p`n,bqgol]$j*Rm8U6m4&Fc?=4"X!;+Q2+Mg,uQiJ0PS'gJ_^R?Oht@13p_:=$<6q\(ECM<CuW@k8jbrah77,3e;g^$=n"S?kaPf
%Rq,6T!slED;/N!e'kmo(N\r=c+Q/;bqVueb^N'm)/PD8KE<$$+.4KVBK7Ll9g:;9TJ.&_RH]T44_!1<rja7.2=*@R_a`J*`i:SGm
%$3V?SDl);V^mR\r[5C4bRJ2;o5D"E,C0X]m5eofcan#N9>k]A.4@$]mLFPRp#e6W_!/c"$!LJG[gA1gOY4Okcq#LPWB>3F2mQKK)
%ET75'gG-JY)Gh/a`rIJ(i&uP)!/E,XNe%4k>OC0sG7<u6rM5\ghID('<ls^D!*<j[2cJUDJFdkK.(UE$4D7OfOuEegT#:),%iF6C
%mFGG+L)L7U'Hq`A+Mc+6"+iBA^e$JLZpOgp1!6k0!J$BUW$QBWhc-Cdog$RtY&43F,Q'Ko^lmghr>WV<ed_PH&E$6=bQ7S[q*bX6
%5_!RWru*iWn(Ms[3!+T][U[=mr?`fL`r,r44(pK=M&YkA'H<5iE5.#`%2V;%*qpTV44PQufPetR(AStZ^DF.ggebagY9a^XK75=\
%JiRecr5Q>a!cGpRB(`k<8iu)m+D651*YH.AQkiuO!PaNoMLBLl>t5:LNc<l8mF):5Xf\^*ZI?%lWNO[t[KG%ROrT'u5^h*]F,'tS
%TY<i1%S_`TL>p#0*U6iCZ?8[9Dn+CX\*?fI\=.OFoF9N05VEX-hgLXJJGEd\?9jZrP]-K>q$Q+#bp?Gf6[Z(SYOMY`:#/oWY5l:j
%A!uY;n'+dDQ;%j:DoLo[&9O!%/[@u:)SWZd`./'+2\]C=7so6TPh/knG]17/'^?FEG7>Ur)rTSS<+[`[_"OY.feHe,d,(_`H/4"a
%8Q8OPd:'`ADDtsY+&KXd1EHb#\);1l^)b^me5B!9JEb<bR%VV288fiY@*C[+2c?QPHu9JY:"E:2pDqW8_m[GJh#hsj<[.gA2\\RG
%%7"j^`k`E\6uU/h#n0@C-oJFjrZ4]GAr+fDpQ475O-jtC&A8[S(n_*rDd&H[<o)]HQ+UM(6V$bAP,KljDrmip>B$Bk!l.Q!EX/*n
%@=Ll2,G)ARs!.pUT!uT9b7Z`rD[#r>NdAY8-<Dq,P\C,D.m2*TJ0U^GqF`>A#,!o4cCE.d!ICN?j[C6l]f@d#Qo@9K;,B8C5]=^V
%[fb"sMH5`J88l$k<G3q188j3E.0JdqhO#,%dgnuf9FrN"O-&3RPLbmT88gid!c]6BhG=pT5!jSi&G/6[<qm_cW$?Trcu>Di'r8=)
%9&M!)9Q+'$\\Y4_R,0UC;ViP0eVGY,)l0r:YgPeN2b7igi<"cVOPZuH96o25]n>&jkmGjCp]_EN&%HKfl3#D_+hctB&>qQUHACq*
%%nLW"NiL\MUphF%k:9)AeKZY=h&sCNTcHV"6[Fqkd$!5fUpj5NAHVS%G6R@n!516dMB<l^]bLj?&F#;5njWe$H[tac[6bAkLu(Du
%PF+9sD`f>T!=jqBM?:tcBo(UWf"%%bHV@mdM:NoG[u,2S!uQjNR/!glpP@Z]r"TKRLu*e%g<KojjTfY22:X3FD_:FE''b;0.Q`jQ
%GC]>*Irrd%%dAt6W;tY&oQD(3[\A5'oHoa]]6\QimhXO!)l0rPTAHY4Uph,W&0)XNh?jrX)L-o,k/ihh3'qp)lrT?p5^Ll_D<I!D
%Uc7A"<60U^%XmMoJa)RX\`PD9DdlL>Kr#g=>>b6ab8$n`@eIYE#GsEo-&2]%2h?>Od76lK7JF02TOW:8aU"2`l)j#O<6/s<l)dB&
%+b^BTgQMt*[=NYIh&#r15eVlaU9.<SW&NsIh_DHiH7LQp,O0gEXk^0*b8o,;&oe[Bk8r/XE\ZYVl7IQ(qbAtVne3;qNhG7/2HC*p
%UO"`nPmA>5hC96N+^Mp1/%-6thg)GsVlVsZD[;6d*C.:qAQ?4q6+p:c]rHmrJU0P(n\6a"n]@ii&;%V[i;i/FZ:"bJ"4UOJoJD1]
%W4,TIVe3haT\a"!R-Fn@/LOR\[rbGbHrJq-l2^+/eYRu7*Rrime1km7hK"`[m<>lAop.n[C7PCjXb)#rNuG%mj/2hN^&%c(F`97V
%0LM7(Q$<hIO@9$p'h'];LrBiDVCUD93.V;8i<5@g-ImK(*,/u34P&'j9n_>9ZpN"R#6U=Fb<I"tFfb!t*>,:#l<l/?2I-rM-*W!$
%k>!9V8\HKL)PaAIZ;`,`LK`B$W+.-O#"##@L/Vqn$pg:R06(XZFl2;5<C+?Sqs95-jiE\5p[f*BO'Ie1]4;LM'2/F76&QDB[\#up
%qGc(\<_C+5ad/J9OH"$[_kZ3:*^Xl2W&"#eWLkVDXDLV(eTWAJ%eg1(D1GSiW`[Qj[Kk15G"hsV"cn@3J:rEQ2'?GjfgDoF#\AdD
%3\0Hg%?F3XEhGZa[73=S8o.#^XDR\m/S:p56VsI9^5UYN,SE)1EbM/6J_&G0j+tiu!-0t)G'*:[7BA'dn6J9*4/Opn*fBEL5^@>Q
%V3)BG)+:R=.Kb'Bm@d@LgQFfoM_Ff0*C<V&:eE)B;k]F8^f4Ip-(>@LT/q=Bh^QRr:jdNuPe$\>$);<S#S\ci_Ls@;)l0%kn0J!(
%mOk@l<gdH&.;DjaO-ahsBC"3o.IVL5BPX0M"C]DMgcma-!O.\!JC`4`5f'>lIa8-IB=Bq(\\Z+%6ebIR-4T#6Sn3#UF$FY-d/%5_
%!Y@Fdo.Z$]/nbOQn*EmP=WN@D*42FE`,&&5P0/Z6Hh[q0[M,tl0ZroU07YNW`5<kd#t^u(/U!1Aa7"gJO<*n(<GaVN*LVOX8=6$-
%q\Igfg>0"XGnaVb=^,,o#p0g(&_S>-"4CYk7S/g-<\+fe>#YJ*(EA%rpCdoO7T(^5G0Ob0:^U;VPpf;R<a:<ud\<=M)b"=6ToFM+
%(Z0I1b)n#aiLF.s?#!-KnjJ%[Z!\:0<\6lY*(e^X"d]f\AJ5UuoT7Ym$&PEP]8i-;#ME2KK<^[ecWSPiL1[XU6.QC%f,La7UP"cl
%kG4rVLk?nIG:9HUR,V4CIVN[j:uNs%SX[!;Ui7)O)E7-T2P_M5i_-J*ZnO'c4,&7f6$6-m3NsuE@/QaqqLO5c!=hGSr5!b_(4gOZ
%"kS:@'a8KQ:(CU-+Y:_MPU`cFWjbZIdbqUlQIBgX8TGm$bk%nLCdnVOVdTB%)tE=1Y_^n^bH--J#mFaXl;SpcJj,cR/QUoUjQhrV
%4LoM67@ZJa+;(:f&/h06/,"i(Ob)YM4;1'/*@S7LU/F<T"GMgQ>C.)?_j?:KH1LN#FK3oY_9J\GV)LuhmC5#YY:[t-Fh]kLPIKHO
%C8IR,J8_-g4n#9uS=&B\WSN4>RGNVc"Zi?*mC4Y]+CjXF:rVq.b!KJd''#@X8P>^<Qn_K"YtB?'8s<>O<fsec#`bISiC^gRZZg_5
%bbV?A2)p8t\Q<Z?VPF[D"@!rNplm58e[dM4=R%N$,/r-u`^\8\.W_1bFcPs!aG.pg/lVPf0rc2@^7HS7k?9p"[Z+pU3`,Stg6\&F
%-BB<\7!A'iL93cYgMGoceKNe:]7RPEOqEN8>m_:=UidTc1_'<fEhpcGI*1^imZBfeJk$Q*juKl8,B.B3,de\<Fe'u)"MS$<[Vgt@
%o&X_eVnh#.WB$2jdV_GEle8dRLU%I]C#Wk#jH;4.'m)%4m/b<)-<=##lG@LKCna(8HTX&)g7ac/"F2dX@*IKtM81].h^\K#$2/FQ
%-rMl[G&3eNn6f-VJh7iPia?=E@Q$[,,+[Cm0?@^^fl($t8mY_hNjUZ&@u54Q'PYuJ)r75_=qo*^!$Ok]Gg0R5#XuRP9VE>c.o?M^
%":+5^pd;#35F"f1ksO]cDNM7V/`rGkA8,m"6";H,[Q@NU2?j:RC93atJ5-[aJ@qP`PE;5@/XDI'1^QdjCZIKkkW%!/.;T=DD*aL8
%AMdEUJiNB[R?)K5o-Su0_9Fg[Zo;N;3.0995r!iVRr]4T?GmRq;<b1?[>$4l)H>H`2>Xc/CpWI)aK\)^X6b4M!GN>EH17qbe(Bse
%JVbjkp2-'2pW#.P.91#9@hh4DYM[bs[e:"ro>;9VOX2ef)RV3bE=#:_C1,4][%"3ma0MoP1kR'4Y1ZO]dVI(j@Kh#gAH*`us4Pq'
%Z>GZ?cg0I*pH.;V_DYic?lT^`@;s'fk9qSV1.&hbmdB]+s4O$5F&hTMdWQ`08>7ue\A!'aG,X+pX&baSef*sMbS^aLQ_H"Y.hPNM
%?o96r'FXOVa?rc/_";%jNsiuInt-Rg.Q#DgaTpWWSRu^.aefuD[2hnD]!dE(M=ogF$"Gl#2`)dia9*6lej+k69EbZ<!5:=t*VQda
%SLpgMTGSmj!!aPj]V^G,)sXSfNa`p2+-AW#oAr?]F[V.!5Qj)<EiHo#LF8da0\4VIKKdm!*c&bf(/r)?@Z)H_N6&:."p5D3Pj&7o
%gt&(:(m7=gFbC#Xk@e;<)HoZ3TU33D+,%Sq#tFc182*%f:co!+fpE=cm25[^='TjSnR0#I!d3JnL<cO#ZZ,'&Dr;i6N5_"<rqX,e
%Q^COt=_nBQ*gpRj'>YU?8;%P:_XW%!10pOaSU@586:TVF8dY.,&7i(C;g.+e`hF12n.*qE]u5:+Kf>FB"U-%DB;g"SQj)$m'WVft
%BdC5+=\kgn?X"=[`i);AJtbqP_%Yl,oi$1.a6Oi&mD$J@EZ%i"AYKJ)I:O#l5G4Vr&0,DhHtBM&H&=Ai=EDohKqEbE5\a/1<2/<u
%6Y1W^BLTc.A\f&G!sBX'TugV,NB1ALe[b>0i,^*J#31`S=(#Hs!S.D@_F5_peX3^%U><&J=HJCd6bWuXT\28kY*86C->")t8:pN5
%lim7<`+pWeXtLWqGS=Zl@m;d>b%5Do>lpl,^>5T@6^hFV+cPE$WdUl7LGI&S(jRG2&3W;cNCEDY"Hp12pg@A\4qNub)5q6T1H)rV
%_FA6_21KbaD<=KGm5m,eQ>['EM\$E2Y2Hrh2aef$rD[b!e)u=83Um7c[L"%C+Tn<M#VC>1G1HLEU;OiWnsD$4@1d9ra0X`DJC9F9
%,NtJeHZtZW0Jmi.H)q1e+sPtdh?l8iUAb:YlOLVD9p"ss>lkR4Zr/8@_CHs`FQs-ET`r.H1bdB*&b\W',ZQmaA>kqbhhM+qBNut>
%+UDMl\=QmsSu#b6"q$81_Q-;BS0&meW(g!?D@<TRZnUc*E'K)m*eosa-P.8a_X<$HQoIbLP>Itp,[?%I">-E?+VV"ont^9j&EF6n
%WY*\.fo_.%YT6OGkHP((hUKoKcnP;([R^Om@nkm9M,m85A.)9R0L1Ld&1ph;cr^'1f&b:oo4>X,VLfQoKf%_Q:[UuR]i<n[Kt3ZF
%&6Q&FaRY_9Nk'orJ3r78k9lMgFF(jV*G@q^Zile>3!OA;kZN[="oTA4%9P1^M>-)D'!F(_&\<&Aa)m7jcQb:Q%U40sCiNZ8^X2Ro
%'htPO$NqTsOE]'+4KZFBh@@,<jqr?WAl_K,Zn`=&0mVJ-@)[f5<U?RlI&'WpV:F2$-;<MnqiIpME,e^]93MPuVIkqJBog3;*5VZ9
%#($!i_E)1I[ThPK)VR]a7!_qQmpb8fjQ_^lEnZ[U8Q.-DH;'8J_kR]$!`8[s^/j_/$A>;^RKuRk($SPpL\*]BARo]h@Ta,hgq6a%
%o5hl@$-P'(m_K8GB_5r!:ns8u,N]*=Y]]T1Y8`tb?SmsR(jjN(/\i-beH<&u\hbsmMk#IiG2h,OFE9Im?EED84_&[jXYF6bVS2:N
%@mT]hZS3"APADC1_0Hs8&Si\2a1OP0Hf/6X:NbSgV(Yi@^t+]_N49Sp`eTY-To"2WV;X3F'BHoiPQkmDB=_rYD(BjhHq/OpZ-iAi
%I'EC^PO,RB_,p`PUWj:k.h(#WdL$d6M(X4s&MG2cNmOTmU/eo1lCNB.L?+jq)D&;@g#?D(&@GpJB]@c-Dh@Bk!`B:AK?l>(,s9(k
%&Z#Y5DcFH5Q:^O5aOK:4/V//8iMea^Ma$J?qKB-*Tmcf/2Pm/c/P5l_2q>K2ZgSiuJu#qLVtZ<n9VVar^12i"O-hs@DX]E3"8Cc<
%6^W`@6MUPV`M\l]!i\dBc86l=.VY4*$5s;p<of\<;@&\lJN`);@AadXQ7lkT!%gcjBg#A*?Z\pmR1ej=Bh"nV8Zq]V=H_AcduO?2
%3k#2s"c=)<7X/g<nr?KjhG]'YZ"c1\\,Zi2VVVf6:Ze9p!hA9!#`?T=:8+k>`q3s#"VPSE;(;tHKH=?fg.H>t5UDd1OkEu';QEWY
%"*9&.^HVS"eC`\2<-$#lAs=NG#`'p2iZ(=fLeAFh**XU<,OqQqe%s0Pr&J2=%AtRW,m&c[!7LH^Z&!#MP)U4%MBJ"T!1-q?Y$%.Q
%Xi7Mp>JafO\dTAZ-1b5M@9Sd"#DZchZ%]Fc3*D?9SmI:+Pq_t.KKKYHI[Rh]*gA$D?.2KA*hn8-qNacKP.F.%77RohGoh<`Y(D6Y
%JK=g)2f/jS$<&7h+Z$%\KOEr44!X+TOgIq7XdZRb/`BOtBYkK&fi$2c`.Ac!cQEH1Q*t)2US\M!LsnW-I_Z9KplZ7$aC*1N-ZREl
%9Zi36G+==-92tm8C;tj?O(lL_+B#)@"OLS5!QEPmTM+cI1,'S[ck2(P=7Y&664)C.XHFj+$#1_*.^IcVi#K`t7LVKh!UPO8PL4N;
%?J<95Bd'^s34c"@V1G2I.'1K+U*n)FO4\6V0J3qQ:hu>f8N`":j,GNc*(pZ&[M88*-!?:[RuG6Ce.J(K3#9h^,`H7t1H"En,Gr5l
%`6gWR/UT)0\-8B/Hub7N6]A*^L<;-V/T<m#8Y0TB-4hO8l6i,Z9`0M"'7i:$N6k@hPLWC"l8&WTl2#M3>"Bq&qAN6ugJ<t%!Lj1F
%3K4=CJPZMI/>`\lQXN$I;;u+3FF-Et7Yh,Q&?LGg%dV'`HiT+h,g[q:4u*$6J^?3i`3SW%7<p+@+OkHXEc!+5\&^6n<Y5F],iXf2
%*B8s&YOnVXi$/3A5DF31+XFnr^_JkKA/&nopcps'W"rR@deL^R$^<F/WgZTRFpUjP.3]Oq2#%\QAeB`%M9lG2l9pKK*U#I7Cc/@(
%]EUOfBo=R^RR<FQJIol!cX7+^S`Ve)N:b^tlF;F+q2""^9Y#`I.c2)sM;SjD])Y\P*sRM(;g"`Eq7\@//otHb$>;7PTI*YPC+]2`
%DMjh=m"*g07g'k%Xe_#tSsFHG#m<>B+^a:ZqT(c0(`W/p\Dktu8ifsZr&f!KE]Xj2i4/l-$D5.6P,p@eB!c/O=C,Cg>>DtOSl#B=
%_T1ce!Y0?b8<SPb"16G+LrU@GUZ7jI1QGpi=7UN(?7$$_0.\6FA>KYS;4:cPdTehn8&_%Q>Q.`&WkKSfnjER"WmA8%-C&8](n]HN
%Z"D^r'2Wg"p8i(`1%"baOblO[N<;Q'K9"I5d7h\*fG,%nEAY(hd]'&OO0fd]S`5bf`=c=u"<T$/;H="Gfn:a"@nK<<bh]?.K$#7D
%3XCik0^HRE@]ES$9ne-=ak-X./+YAV!i'PZFpG%=LF=6a.3ML:PVIbiHc#/::Bk!Y]ZK1<Vkut)P#r2:h_O;;*m8nn;[BB+Zk\qh
%(maC;Y^))V6:PPh)om`.PS`EjUb70%7jpPj$/h.uB2h$[Mn@3F`[k>f?s#0RNIk=U\61XQiD`M^(T7^=+PaP%HY3bB5sA7g`(=ns
%ep/[0jq=K.7+)`PHl.Z5a^aj0/7a$_?UThf(if0JGe1VOloZ\A@>kQpEmuhJ5Xf&F9'JA$+NPg`(7R6M`K4X/\Ur'+mZ8Q29_55K
%U4IV_aCW"iCf,nG-2@]h+R:R^804?*_a<^0k+a&ua9V&Z/5mnS7"uK0B,ujSDKDPlTnNl8H'E7iTnW%K2FiY8mK)rBoH_>,"tTT`
%&rCR:aX?cbBulD^^XQiXZhR+\),A4dAqpZiiF>dk!U,T`TSY=*8^7$Y#S$i91Q0F==G]_8_3sEU%(16;%+5@nS(f0.9dCcn3ohst
%2g-M:k/"jO=<5N@+E9\\//DS#BP(D!ru3P@NnJ]dSm_qBH('ph]:2-D"uEe!?775X"MeF-Li7&#i*_51#H^ZZKPuud^Ci]*VXFd#
%*"BqB=X]u?,Ig!To6mlY;.>,&M:fYB#q^-,_$k;sHsSia,Gsc0P/ZH9])XQ>P^qNJpEUdm,INB5MEqC77CsfqJFaW!b(3SE7HXt7
%G;NKJd++*B6_,9o$F&Aa]n>S`bRdQ7]eiSY`T\Md(]IVY,ToUtr'G#:QLf4*\7S,8knDG1,!H)>P1Zcc95l)`0XAMMM.B0k:EL*9
%I#d:STd6$mJb"@MoYV*o#L=<p+onPBdn8[%B`)C%bk=<-KBHf6WD2OZ8iO_^o;$JnGmA;$G[u-n`0Hb/#9`k[#oD?Z[44p?CjmAg
%FFrLsYdGFAFHlXM=GfOPmTF[_Bom,3%j!\+lm#o,/Z(`FNp'DOeJTQ>^b5?fEYD+F";s"+K+R4lQ</6kG`!8gcXL!-<W6EsH)U=X
%L"9Q+&\3b/*iP_%)2k1m43H'5j/&/n.3\/Aa"[+L/BP98bL4&"M%kY@HLs!.%*c^YoU0S<8d6#s[*QC*\s'[8NN-Fqjqe[O6Jn[[
%&?Oq*M#jZW0?"kgbnjR]M3^MNEOb-;mZ0lZDYA3rniQFOLB`:t#qQ1N8f`sK9[sJM?@eoN0M[t5LHN;5Y9t9@^)\2'-p!#P7LOW?
%#QWOL0!aq\S"-0IjDMe*'`kqi_qLbG6e'/p`mU)&pnYiHNDGSFnrYEF>a@YQkrqaci:7,c=.!Z[_O)jA.pQ@4j%cc<55>5mY!i'I
%!^tUGWX&DX:`W-_K#142'eWnZeB!c*B:!<OYYA14cPX;EOq"B##C+omb0;227(n&:Qa<&q!Oi@Z3qO084%+a+%gp%QG6>^TM5LYT
%F#o)D2Q8k[>)83udR0sd.,9rJ"A2j(K6;th>+C+n*3D#9a4Zd(W*uFI46*0$P[[FPMu)En'42nuo'rPnMrN,#E$UhO\8ii,;O9$5
%5UbQr@6hXC/GdT=AI;Wa"Ns!/&m0o,pqe*8,JXZ=1>FELKCMNML$VkFWT!LS;b<o$10H#V(4CPjdi5G'T0t3DS2TkJUE;;,!,qqI
%Z-R7.=>G!2,Zi3&$F(uSUPopq![N8[n=Kms*(sR$O(V%H]sJn<d#A0CJX8t:JeJ>/bRZOZ4-ETQ*,RmP`JdUnY;8r:cBe#uGU;Sp
%6]:"D@dd3'#gKd^6;hPf0ue*(jtIs(rD8,I8;8oY(hn,["mokDCOKq"QDg+Ts7'(QkX`[MNto`Q@G:jd?S`o?`J:s8OCL[d&:KiJ
%T0D6oNb8VHc)6<&QRX&p";m-:K,dF5!E!]t,qCSnU5[O'Utc2E$U6K7;,Qe%:`*2:lqdD%**08]Zp/'OZpRtarLP[bV"fIrVQjn6
%kDg5r4#A)LXt7,9.18g4Zq0-t:09FqPco'C@?Q60"tbiL[Dm_#)g2Nmj:(k)+AWPY&eosS$S1bgbbg=96j3k"bC'/LJ'BR#6uma'
%lAs$k6\m4NUmQZ<.l\kEj[ZlqeK\:c>Tc[;enjPS1@GK4!$VE#Po%n=oArBUR4LG<[56*!T.<uim?egWEsH^XldXjV,Q7;!qJ/Bg
%/mY.l=cY-9P=Le--a;\d*fsD5UaR:nW-)\j/g.!X_2F1JbB3t_.RVY0!'9FU\]=p-cR4nnOpD0Kg#8n4BHf&nDI*?EMZb_i8U(^k
%5q".*N*6deND/_946//M*IZ?h,BZGT`Wb-"[+i^m:8Xi&f-'(KJ;8SKl?"@0$ciY7eH#SDeOO)@OB%O<0=Eup<?WWYnH=@c+;R-N
%_D"[)U4&.gKR%)COt!.kMf="FZe?XYD4J]l@MQJXTu?2N6*Vu!b"14oS(7lS[0HfRIR5G(8edEcZ0^[n>6dPE9Kc\ZEld$VLg+c=
%f4Ebp5#t38CrZO`\/N(\At@JeQ2oI@"Gqe8Tn]C<;%V@g#8_=oKqFro1%;kReA-jf+f@=,6K;d'=<rba-")TV@/5C"8T9njpm)fT
%7gjlkjAOJ7nHj/L>6<"d_RV*INeZhX>lc&>;gN@$)1\#pV#!N/Ck?pe>;d7cCDKi0L+,Mt$J<ct(jQAf$V4:iG;\9]9KFYm6\,AM
%H&TX].e6C2;H=!,e-O)Y=u(o]#Yu$IOlg$/BKU[e'^l)'=qam>U3dJ%(1C<C%[1*!N)aj?<5M37'-:n/WQd7(_Tr"D/8,q(2C\(r
%=ce4%bL:`;b*=B-M`a9m'pO3D_YUuY?jqj7WXJ@=OdPW#Tima1i9@U+kn2ad[dc]Dp-KUp'=IItZ%,,KNT_*c9;W\K9l3gi9$CG*
%`=?[Fq->k=.p<3M7/1,MCgN7"Oi^L6m#F>l/73Q[Rn@#^I$e<B7G<_OpIOG"JAXd>-'p-EPr4@O#mOd++H_15Z4\jF:o@MZ"=sn5
%KA%]o(e`O=EOB0Z^a3l$RAgmb42B\*Y$brN[@caj,R-9i&b[I1)E^<3S<;`k$d*-*8@T_?j#p$J_9'h@Yn')T&mU>[16s(7KPCs9
%nUU7:NmOu*THGr<\`Mcm,/gpBU.r#!o%uA+"9eB*'5WOkF;fpGF-5Bf#QOln9I-:u9ZM@5pl\(R&B$DQ^Q99J!1JKrG'&QV/k(Z#
%^]<'p,`"+,#s>IX7S4(_3o>LG8hf[0>T7@4&qGC`;3@/53_`ib3,!'c`4gbg<l<6-U.ge8?RW-!HFOPs7LBE`o$@X+qEVs+&qC9H
%PCh5@"?`=&!/N79F7!'o'j`i+A@S=0k(MYQJ3f"29e8,.3#o'I1NJ/A&:f.^Did9c+.=m(JUe%615dGd$ZmKAb`t#q#eLk6Y:>WA
%$r/0?+Qm85:uo0`N-BiU$tHUqPX,R/;["?)(%QHS:m#<C!RqT"JQP;jM\uN^*#g"ap!j\rhajprk'$@V`!!omI#rL#0eRk_*'$`>
%g>JGj<X:Cf#jD@7JMjm-eBK8f`bZ'MY%0e-&d?:@@U,)@#)mq`$s54'PY@Pmi)$ZuVBi*LaUQV%M0]4k4]K<A"YS2"CsJ_IUJ(q\
%OE\cD2TQG]%:N]jg2jEa\9d!E:aT7RJqq@>`IlGJG^Xo9JBaEkaUfhlL'?HMAbU/jZ%Um[U9WZ1(OO@Net>aOEh%):FsCDr,_GDt
%Sj$LkmqJI0$:l'I%(I9BL<c`JAP5l]>'+T#&^5BC4a8!`BMZE#\-n-&bkaqf0k,`)6?7qq3([!i;<e7PeWqmd!P@1X)((6:Wnq/H
%JG8U<#XMh_lUj*obcV"ZcK.]01`dQdS=^:f6tGpl-mY*+fSd%^!Hs(1/R`Gi)K8mnYEbMrM<)*f<@%aZ6quX:-:irDr@f5u#L!T$
%mS=(e42`b-aSlYY:iNYtnUtqcPqc=DHYd;1!kPlsTHaXJA&<Q0-kBesDih7KP+,RZPo/nb!f5WX:&pg8=r[,[ru]JoG#1DG"PK%(
%>0pdDF!1s/Csj<.^R=#6I7O\XDJ]LN`j@N>^TTH=$/65@,4G`?J03@*2$uXp!dW,Y'"jE]*\<l.9<?=XP/UrnP_li!Gt9J@&_)@Z
%Ysp8N(+5b$6qs`?k7J-NPn4Nm!Q->!e<Y.jMQrug/5]nB)?S1QSXEqY3:_K7S\Z%.&0.3_-u![S%ojaK(p6HS-OlR0$;UfK*NiYA
%SGF,p.3MPDm6:*``_nJ6(9"?)0k>o6W.FUaE3$RK<O)^_Q=]Pb&[!I"$)9n3E[bbI/G]9EES(ju?Q$R(.0Ob"Eo^ZkTsW:A&\(MP
%ciF;D#Dj-8-G%1u^R??kEgS9L+@6mP6Cd\\)4fP0&Xpt_h*cNt9LrX"&>`ZF+1$[.V9!+=Y\_s.j3^,/i09nC$aCAcdm_PqEPN8A
%kZJ+jh]jNnm9r#c5SkkfM1Zb&*]$Y<+fS0LIL,9%Lb1s>.$76;5]ds;O@gmJ!>i:Vrc)?fT"st(if=+mpW+mqR0Fk(_3BNbJab5k
%-UG![X?sp@Gr/%51'<*8Y?(quJZ.H2^3n%Yq>fbC32a=n:LC+6U&ci>Z,F3UEAK9i"0j;B4>(\.&u&K0W8hSj+JBh9U1+;n(b+8g
%#Q!cLFGq^@n.e9Q:rB/^X`7msJ*'<G/<8cqR_8,"3fJmDp&]_)[XnbCmjHus<X]pq;Jp`6WWcRXXd)C">Tn'(_J4WI3oX<fm*4o:
%^e[A-O/!<$Th2d5#0BH:6Yo(DOb=]('M0a$8Hhmn'(/lBc??N?:6&Bf;J2r<4>lXEY*EFUeYofn)>M&Ka_6t_16LuNBaHOdc-dR>
%X<KH2j^p44&3"Sd)5f,1]hXmd.s\hL'7am:J1F2l:ig3@JSuG^VEJ]kV-,L="[Xrl/.j'>,t[!Z#Eu@n8]/WOa"n#b8EU[iLlfH<
%,_SMl$![p;@]5[00Z7C7C]DThUPCOCcIUpC:^Q,X@u:lH"YJ4U).l0F;"%F92+";sgke+TK92A?Snq^^_K$jZ7nM2H*SJiF,.'l@
%T601tiK><!=d05X:ojbpP#*N:H#Z3fpi]r&V$GJ<,RK9DUink2Ob@A;:fF/d/,+0I=D5hk#]tp1).o$lROFc'.9+Ls3KEB7_LTV>
%<*EtC$/-Tm&[5F%'1"pra.O^ZVLOt#7l"F<8'hq&NJ^K0Be=mX%cTK75"\q1Hrl[0,7T<t'nT<$;H:R>0Ef!1#XfP4I\->5O$kM)
%qZ9Ll9:1cj#G#@B*_XXKWbo#T")85Z+./]p5Qd8c%;CV"S#*/l#*;?&gb9R3m9dd%eoMnRM'6pMD$&E.Zi"W*I1lX4$jNfUaOM=O
%K:X_PNp8@M>,^O%3uUSJj]F&_V]hV>\/Am4Bo]"iJXLG(3S+053noI)l(74;/TN;qDiiXd7rfb]^%,d^B%%MS"'3WXjuDo(n>UE6
%8-:)n+r-OTa$ARuoMB\sLf6gQ5>nVNdYS`!A!q72Sr-W3GBbR<9L$J)%Wq?Z,re-T8g9+^8s(`6^1C]W*5H4o#]KgBJ]6UZ:R!H<
%&;R\@QYO;tK^9"$.!UBIX)X+]_.3%L0Os&hZ#1n>\h&QD-**Ut];Qpm1L(7kRO<L=[-j-_8tVqMJREju9.74(0ehD0,!"J1c;N2Z
%@U0/#NmG3S;`Kd4`>Sh]Rb6SJ,Z95eAR(D,,P<;:8h_TRqb<kJ441K.[`&Vja]HmO"d,1;TcN>p'kuU:-Js_$l^gXF6Cec>b^iat
%R>H'h9A+;P91$F9(.mVC"pO)>O[9sUIfn[-OpUWcq#R0aL01h8OXjEr;?bCb2Q?FB\^jnC'$J,NJ1lW?+4sr!83j\UGrI>V`K24)
%?oDuG':TW;/L%#9Y;;9u0b&"dkl>F8Ub*NYlqgbF:>l1r?,:+D=kA3Q:P(omUbX*S!,,(<8T=h=]%N67Y>AIQU_9OBBkC&tkA^uA
%J6?;=$uB<<VZ:u:mK0G-9ALC-)p-_9\I@@[>?E5)<-HS\C+mpR#biU951>u%d1r$0Hn&A2Td7k(KmYnZ`n6]8,GbJJ1]`5fPd*[5
%;G3kigImtu6+LLQ4t-u3"R-Km8p"n0jhaPL;FU`4T,:t3`XV$H;dqk*cTn8Mb'HLh;s8('Om'_\ZCk2@k9MrXKZemP+;P;W)0+Y5
%:Ec\Tc>W?3"%".m+uAng8@X8pJN5*_TJ1W-=qc_/!J+ln&tp\kJZ2d?Y)SmBLmRZ8K,,+s%E(OM0_6/a2;"\Nrfi)`6a\J%5m<CH
%$_tOp"/4<X[fsPLG[V`O:Uq&7@'L8uOY)X8-#d$A-j<,+hUAnC"2eRoFrjl7O[=u)1$2A(o+T9N!3+o`)'2XWTLJ\+kq#--FGZ,J
%:QV'sgq!nlq@[9"WU*/*@44`6BUnD(B5jf'g/>#sC,(Xl#YP_!"nL%QO'2b+c=SZ(No_Ee"gYtPkZ,'efL$`H^/U:>!$qaXa@Qf6
%e$BCGd_kb\U#8PBXDl5m"Tb;N#+a_*N'bOs/BM\)Y6hECBJHou6J$bW)@ACD8;7Wl^s*;&>MtA!VK#DO[+%)RCMX*-1?22'4S1Ci
%"UjXen[u)*M4?n1nYXcgd1S705qku6gmCq?*lLSO14F(m?V9Bq`tu$>K)'2i1=WsWE8RBpN=c[HQ_9$B>>b]h=;ui?ae0sO+IPb$
%0LkIL3(+`!LB0+lQLLMc@KIDj2R>mt-=K_pON`R^NKDTjn:T*o=2Pu=<m<OR;,U6TRA9WCOp9BH\6FP1@"!%tTet$,/E5fNr)fD1
%)3,KKXbBEl2i7<_i^Y1Wh.NDckB?ujf6@q=@TJ#[?#6Uk:V8b1%BmR6.Uf(F9/OT=MHaI2=T_AgZ"cH)l!N[r$%9WE[oa.)C76i3
%q@03+?D]aaS!!mZ0QV%7-R"GiCP?!nS:;n+!Z1Ysrc)M@^`\DAUdG>+)3%kL#!%i+99KK[fd8:!Os+_R^/Am8=>Bp<0X8SU99^ip
%YJU%U.s\LV!e7*'O-,IIU:ck/K<O6'R23N>(Cjf0Y=,sRj;DWNagba8@sFfaISRqk0[F;5#>m0cNP_rDA5jNb;B4?sXB7cW4+U7r
%Td,rKJ`sR$$^).hf16RCOn9G9PI,dY.D/X(BOJ*GDi'D(_TnH7!c\QC4K'mJoO(B^jMXDtUK!-V_D$TXH@"XEABD^O^f(>h9ePJ)
%Nl7m;H1Ado,lJ->U4@;/^WJI)e(!2e#[9>A,fr2Y_7esQ3?aL+IOm0@2N%UC/K(8M(HEFK&r:<qECa!oL6@Hf`-s&%KT9a6eD>4Y
%'1aZ:-6:_WOW0Ccd'b*;,mo6_B?-;/O[lIdPW"79=b:$T(d:T[(1O'q^G?n0Xcpd9Q,uo2A')*AgBn7K,UgO-Yu3rCN%PBn=LKLL
%&:9`NL8@i%Ii&i[Q65@R$$?S^Do>RZ'<;`7f5`/0,Y`n'I!SI8#^Ha=$sR'c"WiM&TT&i*7nfHO@Q%IS+B"$'7t^WP_"$Bgj3k^h
%Oou`:Upa.+Js4*.?8GB]KGflI\kRPu*$%&nCd-@"CBgW6#[\,pN<FWb("aj5Jae6l7CfV<_a*S/BJ0A;:o-L;>[!c$,tQ;uU_lOd
%Gh.`8c9MkLIC@-,(S(O`2G?D&p+its+?5MT`2"pB3K&Rb%FeYiUqOZN,BtA>_h#CPFAb5m?k1nAAj;I6Y8kG1oQ:;-KS!@5<EX@K
%fHg@u-63Rn[)>*J19F[A[#kb0=qNVBa-4FXN5-aC)ShjVS2Ar55cKGMbF0+GaVB9EPb=B]lF%tn0_FTB3lKG!PIBPV$_8X2E.lU2
%@Ro"Xco11IE$1`1+eo`aTZAHU0V7sJ#In;ORMegii786_rLKpB0ZAsd02!"CjP3[3c_m7=\;h_q]LYR2REUF21QWA3ZkE*KJ;PoA
%iLZpm_Y^C?;*lX\@DFj>7qecfI(="S7q=EMDW!$R$c(\F+X1<a+\&n:.ZrZFUCPD&7J!5Ia^r>Fp1G:Q2O95HN)i$'@YgDW7un!E
%LY0u7>&uQDA!B5J1D.urYcOK]==DLPK]ePqDaNpTCK?oQ!F)up_h+hd:Pf(t6lT20n<&2@MiU;nM2BA3/f[3/5bBcf_:NuZ'cup^
%L!h3bm=<I!ZNg.KTcLSJ+-JS'Q?+^A"?]g@IW?m473!O9eJj&oAY+J`(>"MI83B*n'2s\jS"r'mr2?^KAD@CB?,!"&A2SuK_#S:[
%^j(rhb]SU%9<D+DHn@bE>cD^EPO-_RMWqbDW%:Lt6cAARigpbISdl.<_8M@dI7!NTdOkq`aG+_L)BdCX#MEM/;l)!A>\UqI4uI,4
%,[P^%LQ9P736b47OsL/"B5U`ukDZ#'5\#qlhBtWCHtf:2KZ+kA<87d6d=ObZ!JcO!a]fFS(+g<dG=\*akSbk-MK-"-\qX2"hd^YR
%7BG<1kncLcfb/59[!5lm?q2jk9/^'a+b[!EN!5>['fW+q_`J7O-EE4Q!VI3>?d"X5%8FaL%2338p$7ai:>BdWVBVRj&=qlYe/1;)
%$_b/\hUe+jRPP5nOi3[.^9og?P\l;\kSU*%i+jrM_8p5A)KY7iqOol^r?qaK73IjD1>*@m#-agd^t'(\LdFKlR2r9tds@KAal-E2
%iYK1*9&AfQ+:9r+jQbZ*RZKrl&'=>3"]L-uSD_=n8NL/A9[e,0D2!d7qU.pHYUq2_90o!_G_0g!TJVYE05D-pHDqYg8/O,*&j8=\
%AGM*@:#p>cYnC7I,D:'7KTR5_`;$-iN\$$3r@h`=,>Te1(sen.O?+?M"p.R+=Ca'-"Id\!_W<1P+ZtCbn;('UFGC9q[P$GH,n$@/
%(]$bf(*'r_=Y_C84cs\tN>"EqP!nYP)Epn8h\SCl!J:B&$__O8-D1a+iPl0+Z-+Tm=Ks;J`l]'N;kB2-ck`Pd!YbCXO'L'\fG%4X
%GZuau69nd#;VEfk%7E\$<Wl+0#rUQen<%s>6u(N\bRo$1U\X3YMj6hrU$Mq),m;0&ZZUS[Rq.Bgq*0lb#EV4Q/9E62U+@b0*?b.a
%^CC5[Qu0kZ;F.o]qo1._`>2p-4a4>"R52GW[;.<L7:62P+BCOGW;);tF'F_-+J9]$(DG]ZAW,ng3&qUWSC@e.OUdK"JL"u]R9Pl_
%+mG1Q"k[\=&qd!k)lc0=*)bJbI&(il=J%oRGjYiRhLrh5#kHJhC^kR211r'E-lF.k!(&XB#^2<O0OlOe2*2'LcPBbJRl^\o\s!-(
%1NuLhE.sP`"t#!e>54e*M2G=E@d><)7D"b/70Krnfh"kZlA87a$lU0Slf>=T'6XOdc2u8s%0sOa7#McuX"20=7&kjtQpPFn]HgIR
%+USo=+nMF.M`b_`I[tZh>iZCja/+&l)\LOt_lOlH=d<uZS(uEt:W-Uo2jCDKN8&=epeGFn&J?^lq\b!UPXo!8a3c1_&ensCT=,GA
%e;P"ee*f"JBPWS%+OgP_7(Mg[4s@G"kG<s:jHd>;3>;\4G$O7\i0-P,os=L1C\*8oQRoXHi*(.fa]j?@TY4)c5li[</r<L>""T41
%YLm.7f7])uTg9$>BB%!GQo#a!6:S2GoY.Sl$3e;=m*"?WNA3sJ5fc=d[5LRk1J&C5U&s?neISmu"FELKD2SFSO=\j`JL!\134pjF
%&`Dj[Jd;Z=Od&3h]UiBN"CG3gg7!C_^g)uA&qn7H+)>LF6dR[,_6:j@G"4oP8.)OPJXI4_Rg()._r3N\744u\T?'X#`$V.2-!3eh
%r\E#LTn)_<='@]g!k"iq$X>jPnC@;7@R%Jf:e+naPCsN;RMEpXl7kU@Z&[I3+"=aoN'[=\'S%/G>;1&Z!FNjI3O..+j!`@:]=JF,
%oekX:Mf$?cG%;6,E4?8T[&[oR,h<`V\nosIC!dU?dTKAY2K75/6=qL'GDL5Yq80gTZt<nX"&Fm#9`JWQ/WF;Z6K(rlhBkf6r!\XV
%_nqpGGdgegbnd7jCdDV5/5a5r6DVpd1sJ_>olW6TJJ"m`N6idH6H9(D#1"'=&PhKLWMCnnNBst688,ljJ_VKjK^;M_adB\<*a"6B
%GWB.iTRAlF.:_LEi+_24UeD0*-J#;s@EVcnAGDQ4<+!eL]3)1tJB^X]%Utrg0:08#8>X*)Hoc\68T>l9C^K?W,fN"bkR%2(i0N.P
%8k\kkN[8ce4C6.QjI:6q::Fa,X/h.7@nf!L-KX<fTqUfZ/>dGTN<Ld<P+H[++>=dmNp]PdRgtZcZ;T'i0e=)03`SAj)2W[r,6<^B
%M&`WHR2L?n"\M@q&1In?=b39UQ[0\S5h`dP%n<+d%hZpk"6^6J?dOu(@8&Tf9`du7go(TAe3Z"$NC2GU&-rUn1GYRZeY4j7^QJ"A
%"gJas^eZNFZuO7$JlWZ`,;k8,AU&]:M[8U%U[*M?0b[hP1(H0"_fu^sLep21,#,ueqDt=%$B&](mI_H%@f$^GR(;Z:I=O^NN"66J
%\j.F%Uhqr0,,e`[n-S$p,`5&H4JjNK1=7SAi4^QIDk(7i>Pqa"`d<;(mQ)VAK-m$4rkK7[)qmVN7$cb%$6<Vh50L*c5Fo%GYl6q-
%T4>umjXqp8#$OF'3)Y5Q$%P;SjFV;,Op>YlC2)Qn&;opJb@!uQ2OI%SNJSVj+gm,KYq,r=R_((K`s]O@Y'a8E4$l!MN)@T=i-JmI
%!aVf/Bo/%7KtJO4d$P*ObEP?aOEsf=VkpjIoaucYj@^3maa8geKRuuHb!KA[;ce;3@FZQI$VJ0.&m)_oUkuecQQR0`)CUn3+55bV
%F*u%7kPI;29_T5Bb.tYA/g`E:V++hVBZS'Ce@uZ5d>g(u=AjnfBi[/L;lK3T-Kn+d8>.Xu]sPW/!_7[ukSNA(`m/&p$hejF;3d3%
%$q<$AEuaKc<>HPVNsN^+[Ve[H[1]3R\t2%tBfWbr"n=/F;THoIM;lB63CF<IgtK\J6n@T2(lEHY$a]KP64^V>fboBn`+:Oi;2c@h
%3q8:_99CiY@Y,[!LP^Kgc/MYhc6N&r<2b>3D71QZl!+tS*fE,di<FHN[m@;sV(`.3>NeUuOp=83<T?.7ae;DR!IC/bP6FE`(9(Hb
%6:I+#WLj=iBHZ'H_FI4=qR456!&HeO*5mNB:\W6H;f2J[X?$e!8kc='CpIbY'#;Bf4%Z+mRcu!SGD2a6";]Dj@Rl0Hd.52--!?^G
%BY8(RC4rY<,riM13uLuD@!Rlp0@9=3nkrEK"PoP-170?GF0Q-K0sgQd;IPdo&oJNp"J1PRN,0cOj%H\P%t^(S7mSmRSlU7fBV7=/
%6KQ01&&k/LlVK/VoYZ@.'=g@Z6U\(Ar-!0WbNXq<nKbrBA9ae-7L4tU%jojk:.Ml$cp4K>cc]j3,%ld^ANJ]CV1B^]!<\2ncg\+m
%hqWcP'C)ShW71CS\]hC$"L!Re=?(-0PRA5b=$f$)NqTq*%dlpjXmj4`n^EXi9l!.(M$<:'Zq`Y;8JNJH1E.toA3`GB;66-3b&gCg
%;dk'[E"O0OJ;%B5'QaYPW&)Y2ML"QFQD3uL0UMG&lDbjFHU(RDR;tY9K7p+EFHAL<H#W9B;`fM18Y.PR:EY0QJ1fFh,$5c?69LR$
%nmIbk$%qE_<W_Cf@Tmlq]*pnK6kp'F=!i0"g!Fs\K_#?3PF4Lk_qM8X8MFgNL:8;aG60s_*t&OUm<B6a%NV[o$alVoCP@Y15hS[a
%IF1loTg_lqK$=K\-L2o5)9E[nTHPi;eflki[F/emP'9:h5VGZEd\N;X9V41*r#/+t;)>'mYRUqal*a(&j6Pu9Xt^qNET3RFCK0kZ
%4UF'A7C',u)iui3@^@gcgsKMhbV"t$,Y"X846I3ca=.1sc\a:>kHgRc8!cZ[OcE4_A7Rj:Mm.U2<l2k2d[43q/TW0+Xb!?uWgOMi
%jp(YmZs"B^"=-M6.k?W)E+8U:<r9&Ac!ZeI&^$abZ1oq,Uk2S9*Q_BWQ&HMkN'B&dIF?_%Su4@s`JA!IcP(ior)eII[%?GrqY@c%
%8fXe(n4l2LM21:;,tO%?O-+NYYq<&#E:3OFb)f-W6mifqa?spa8plcdZ\P!M/"t"iOZu3n].?#b''9H>CY80=:.&%#OQ/VqFYq34
%b)M0$2mW@Gnh+CK[l[!;(XNo`Uoao"+JU)'`cDF*ioG@S=;FN[:;`!&V1a*E&/1Wp'&AcX%p)]S8VljU.W4qk%pnfVL'E^:P:g5e
%-j8PRF;!_<n1\s`"4/<<Ls[D#S`de`2BBdd"WgVkUMKA?i"q5AAXR,FKB_KLR)KWp.4^-:S36gWTPKGuqE&0a_E]jBGI.[-qOJkG
%K34k]A%:t/k2QXpoc6ZYad\T-^6;0.59[`c(H4>(%.>3B%\>i%HUi:Jk'LPsO&-u"`AXfA`(flY3:G?j1=D>ihV$85kqUMhhUr/9
%O_N:KhUt_[D3>G<l^a$p@F'je=RRG8OFIql4%Mli?0=39,"HZT'$@i-O^c=`nIF(jU`R\Lh*kF=`$X&WGD'R[-)9/]?mD@I/l-Wq
%K7_7[iOXXB'S;Cj:u.779]%hK'4V=flmotq#80IMJJ4b>Cho1Ck'6<'<"U=oBP?gM45i-EdbNN36/#b/d+m:[?TV,>k>%H*>!pU*
%gu3tg$6ou**Bsd(k_/+Odurh'P@c19H1(HJAEc#MFg`;^6?f$bc3D-5GTbFp,X0$/1e`+-99/:4RY_"t>^*gsbf5>%c3?fn/aFt>
%*En/IfT=qBcm;u<9?HVK,3]UuZ9*268>I@O]<d?5:\q(Bfc?Mm>__Uj#3#YtX:<pT/PPp<&DNcCBkY)2m1'\#//h78mJrf29V=N$
%*RLB?'"Jmc4((G_25XfoZcSq1(;;?S*AF@DMGKGlZ%3unF5>eAk$dG`mXWSNeC90<c3?%glZtp/G;ec6m3j9mZcQ>-LFLoI%?&4N
%.sdNJc6bWKST<Q>!l*]k>^'ji&U^29%Q2lAOZ-NhK_-HI@@$6)-LW'FN8_>mZl:I\%+cLM6pS,AkIO$>'ksTQeX]Ep@5;_8Z9-!/
%M/Ak0]*$u\HjEGi8,TpE%oT\pil5DoH*TN$[.D)!2Iq"i@NHfgb)tN59J1I>PjH[B+Kl`^A9V_WJg%-UL\sr1T2OK"h!B8Q9R!Ee
%EkNklRh<tZb'h-K7he@3Gib=\#Y%+G$-dQ^=@EEd%+CcSBGXB8FXPG"P>^55pG,]lo$G0_$7,j+NWElR<-RR4%'c@^1t,8oB-_0q
%_BeEj=Ce%6]&O3_:>IV[faMt!:X`!]pb",Zaq<H<K*e9_-FuS/Mc>FHU-".O=O;\@7!H^<(9b.i\cW:p`0(PVSO3oei8og`!!m/V
%OcpF6!JSo)DRgq%',\i9R-9PaP!Y\:M=(B#-I,1MFD&4W6,q2*h:\s3)<M@V*EiTDgb@R;W.H27=cV_V3*\de@$p?f?Ui\L*7GqD
%(^/gP0\o;.3Z=m-o[4`.*?ZJXWmEHU!N/YD@>="VJlZi:F%ge>b!JI5R-l*h**6'AV+c(m\hj]%B"G=**ZE$Ie"'30:d5k-]!LYg
%YbIBH%`aAG)]U?FFGEmdN>&0Np(Kn=c#e_.8eV29o+H#`=^K6lB+k:#nPc#@S(SBk1dia&PDCZl;k?("a$ANU/d7=o;1rsPGED`U
%,Y31JE(\;_cgffDaP!IadI>pWj'd+L_K0?Wqf_Y/.F2:q'6Oc-*Uj0LQ]`Z*K/(YF.`662)^*Qh!JGP&A"A^MA%33+W\>a/"7lc&
%RP_c"e@?]DL?S$7g>!f^[t?<kfdXC9i#@-V/@?Krjd9@jR-d`:9%#(SC^3+cV9_/.42a`n&8l1KCs/$lh`S"]R[Ii]d+Y24-IK>s
%[BhHkV/iqdBQe)b)-T*@YleE?(KrmW#`Etged`dT_,%s`#F0pp*/;t'lAT>n8QkG2ZUg.C+gpo9bh\B7SZq$*Ef0eTauPhLbe2/@
%g-Hlo??<tk#7XVqPgbpp=CuRnES*SZIBU3BUk,+G9fFF9L-r=iGX*)b3t+bK?385[8IP.ZDuerP-'XjbGler?oGp\co%-\$\<bB2
%=sVK#;Ed1:le.4>C-F_79I.2mL3aA.)d1+Bj0Kt4;hiQB@D'^k;`ZuAq*K\ol0P'V`]U1.SK4`NKW*#>fg0?F?.NV!l0J]O9^!,6
%AqpSM4-F0]ZXZ_-R./e6#22i*ltf%\SS,:H/!IOoiNm$;U,a0/?'lY<*]M,PB.*@,L<iV6R5GYL+DAW(GCnf&#>'k*))cS[2Xa>H
%6qq<,1TD6$Z.[fh4aB?9Ak*T*q$oDC4*78bT!6naEY-M=_e*PFjM24Zf^,9ed;hq5ltiDW\F'otS]r..+=4@h<WVkG+gV98Xt>TS
%=Y`'Jo@f-,BJMZ=^^<AtP1eMZUkr>pLs-@R_LcREm*J'Gj+PVd/W=u<am>[$"R4#qI3I+qeqVDo-L+GBjXVAH:`CH!6Y9seH=f6+
%A9Q>U,i?k.fqHA#g+lB78&ST"QT6f_)a&#3JJuLlODr<cnm$?WOt_ieE7n)hUAQM"Z@c2oR\Dp4SP>423)%H\Cg[e+)Y''5[qP;R
%=>rsq[4P+`Q>kNN76kf#Q^pi-=B=-d\a9)fo'dJK46eprNA=a^2N__@+Y#R4<&.SbQ(;=6_@;j,Z9tssi.fC7QtKNE$'cN8/8\C_
%<-EH%+)\%D@-Z3tQ;H8^*?^Lo94\>k=FA&AapuH/6cOl&c6aufkRTE$U"QdNPfV-n8ACG\f\(p`FbXSrCr06MECs_rf=)tT9PNiI
%:.qPGZ8?`@VI2;=G&/?#\Y69<$YUaU1j76F,Gkth)ESnIAqjlW`X^5phIUruCmX#W0]fRG_*Mn]_M#qSAm@YMc`mTZG%W?DCmrD)
%ICru,3u^2:+Xp--Xt$%$`kJ(lf\n,Ypn+IhK4,mE1PWopp,"*a6=XXAQIEW&,rBd!CkTCO&D:Jb$O(.&a:?H]MeK'U+:Z9f@ArN8
%8;'bp7qIHfTt30^G%_Ite54g1Lm`7K*1%]&=u&W*QQ6:m4';A?/j#Lk*gJJ)AS4Xq-qLo8E%dcdPNB*f$qNFMiNf53jI.c-FuH'b
%Zph<+G%ckfPfZZ?L3?1"a.pK!T(S>h%P+)p'q34(OS[0Dc4Sag87POo6=`TA)<jR!Oe'bhh7smPZ3.DHboCOeA;BsqG/YG`SK/V`
%4Mt]b9-qL$0\O9f8(-<XP9&L`;r24<4!5>q&'g9i$$h']&!>PuObUYFaR"^f!4+7#Z\,^F=h^@QZ\):F<nN)L%W4HR,r9(TjHq&H
%?B36iobYgP1LtZRKP]lmR2u6U<;d8o*B>Nq>s$(^2a3Ml7ZP\&l5#HLKZjpd*"kXcA9P&p-d-apbRW2#1qXJW4#ir9+1.Ahbg'Y-
%X:B?KA9RH(d4K4Flqh@jNf&M6Nnb3i\.s'qG%_X][:-DJ$)+5[3fu^(I$ub]LY1sl#(*^M24L/]&3-RU@oh:djFc<TA$ZjC(SM3o
%RiQ2^.'7Q,G(dVqi4`g0UHah]+N%e]aRN(SKI2Kln1TY$aKX?kKoe8#S"5ede+&c9ZZB4]JI0\>Fp)ko1/<kSNn=WGXqMNR"B3@m
%2/II6paf[kZ.Y8j,Da7%c&Mtq>W4Z$4-Y\L?pdK;lj+QklWQtJs$e8e*-sV'42MIf<h-JK&_r9QSVGCLn3qBp/=RZZ(W[\5kj2ED
%6O%_OB8?3eKXrk\B?(q"fLb>oYh0,C0h5kH4q`;d6Y@buTpsK`nPX)Cdb,5I8&.SOSK4EEKVp=nB8>W*[!.t`%OpSXmV1>?=;W<L
%>F*MD?UJA#@C$V.OXNuXm*Gua/l-)7*;4n&O+tl=%qRuMAVZe$fb?G!4'&"Oq_;?!K\30U@*%]U0#c.uA$[D#/%%LWAk+e"6:7;C
%H=A1Yk=F7lBP/734+:i]UlN`H9Bkf]r++'2VR%M$NRZKl3]drf0UFgjB1Ja-_]19':B[-Z]Tgc<.'[6*LsQXI-S2>j#jm:O/'LiD
%%=872nq[/'\iHL/d0@img(@_NUGe?[19&pKRaM[ddFCA$kp@YF:uFhmUE+',W3@+.4-C,2&t5Z(,EmgldV2<8P3kZ7rl*;:4gI_$
%P]jF0A*pU4N]%;q]`g6hh8tfYqFSArP]l=\f$s^QD7Es(g3%g,)gjJiH.H\JW=egRT]YE[qat@*]h[^Vs8.;lNqo/]acG2[f.5+3
%]%-iZ^W#8P$ukb(djNI&o`kHAO8YT@Q=ab/3bl(QO7VW?]?T.t^X;)7e.d),_gQ8)buVO4O@aY.(,stGoLJi.s80=B+4ZU(.CG0H
%WaG,:\'&sn;/Hbahe)hG54.WtFA_LW:3.Wu9P=*(UXif:%,,jsN[p[8/frI_^W`a%Zem8e\6SK"NRGCenZ`!F0UTVqHO+84]^-4/
%)Vks@X2lF_CtAIg"U:^uNV?fj)U855IY#n6NcW1rH/)r)1@"dqB4JF)CK.m)mt4*A<b/fOocM_^FtOh=HZ8Vif!#'d'G62TcD):V
%]<g=3p1n;X[*6mCm'kG['cL;ZpS\;J+*;]3/[]71(Cs<E\o:orbss[bMhf_toEMEA_T$[K-u@1TBD]>c^0$A.ls01N1@KVib`Ch[
%1trgrP0S'B>O?XG"[5Q4FhCdYZ[J-%biuLu26)4DG6Zl,A%c)05%rN)N2Y*R7_W514%I>^?F+!T]DSP8TK7Sm$S7S_HS\;.A'0'q
%;f6?mNRJH9VVJZjk20[k(%?!5W$PM1bYKh$EO+[!\lCW&X_42:DedId3gclu2mqcHnLC$^E`631'%q:UN?=/2p-H+Cq=@JekN8=.
%@-nXI`44P`hIX!:$4Z.T@dhA=6T<Aq4^Q.Y_WgaZji3@Yc7pbU#@tH-C0\BQ_-&/9"Dc9JeNpCjXL;3U*o2),blsD;]ng@*O&38$
%)+0NB[Q_Pq[b19jHg0)6gZp`nkNmp0hWrKJ[Y`f$/KF9$k,WW.SaP;u&'hUfEp([(XWm0Mh/?8.Y!Ci9Dp[=@ef*;NC9[g$\kbc3
%Il32AEMN5TE7Vc!0BL#`eF*GH:(;NrWchH*m9[Q]/i'GjQ],a.<q-3nrH6n02h#Llkp7!XE%$@kZ3nh'IgSllIn",'gVnn%md:Cr
%cmXeK-Ut(FCiu36rf^f7qqUXeNGZ@/T4koH,*e`m(D?L78&s7P"q#,Ms)&iiEhXQ6-34Gn$\r@T&$d8ZS]4db4EQL?_&_u!'TlFO
%,8=0If$[^]b`0F[h&*0JB)gefd4Z,fSZ%bB-Vfi058AZX]R3,]VuB`)H)?9T4WGiu#lY];n"f#d4Df37)jna(e96^f[*/8.Id:33
%Z[@4-QHs<Ddotuo)ZM5tK,FJ"T79AY`dFJ=PHjir()Xs!k:tZ=4JoGS1Z<UQp-O<kokq1o*#&u(VW4VhD8"W&('u`lPb!*1;U#Q-
%@:E]O7D?f<W"L?*H99sCK2/JR?f3ma6Si7&`l;>D>mB9\RnBp)FY$JMofoa'/jh8UA_>iC@RcQf^OL5TdjR0M"D>Odq@)Du0ruSa
%eV$ut(Wb[.<qkpb9rn/@PE72%]hHYd;d_;CEpua^5f$S`3`uJ[Zohd8FU:JPebJ<1>RG=U\%o;<*,/D\0Ol18//8GSXWCHrm7(m'
%d;%0gq2A'T190lX/.b/Fq=1#gAAkB?\_0&^<GRSh7_A]-H9@<[N\t>G2fmtS487pWhirU+d7[3SYnePD0%Q)`l?3=d#pr$70&TZt
%S29FH"-&==`iYsPq!!&sD7nt7Tl2[R>J3Q^ksXNZ'QE2.cE8fSQs[Pma)/;.)cVVGSqq-phX!1N'KMQ/Y+tj!e^gAC^X(>Dnk6At
%m1rs-dW8ATZ3h"Q(PGLO*5g3C<'r)Wq6CCS4T$'eE:N5:pE.p.pBme7mPS4N@elb#d1)u'CcA?t8cibX<paV!87m(Cl_k"f5l14:
%7J-)p#ffb,.b'B,=@o\N<gWNkSYID+K\]*TNcq=+j<t2&i8C+6UmsEfF<7Dm;/J7Q$GH#cms9UZ!6d>C9f#Yd_Eb/-VG*3uK:*GJ
%`<9hJ'`&6u^+h5tARH)YXD';E*nrLfjYr$QbERo_A2'3foLsK^8cdI_6?5p1/ZS?e7Ca-/5j^>gU(eKh1`'_lMt4VBD(]BPMZ#3L
%74BKM`a,ZQWa(eBA]dFj171Y\W$a_EV9l[gpT8mIF&?\=.2Si%?m]I:s2lb7,j*SjqNa>h2+IBn-Q>1O:kmTo92$Bd`T2E&hte+`
%I"TUs?W\X%ba2]'+e$@@X,+f7MY&]F^p6U'^AO0C1K1jX1NG(7b-_:L0U6EP\Mf^g'-YuY\uK>AY$EZ&XauNoQ"j6sp@";^;e>>o
%.;Mk]2O/%WC8mMY#^mRVI!aYGUqd]B[isF]$33i1dEca+E4V#99Ykfi9t*u;c1okK?Q^:b#5ti(6=Qh\W3e9**4D;c2-O4dlJGrt
%EAcZF#4t,-i0m(0f50%XHd29;>a;inW8g@T?S7!8OQej,mm"dfRGuZmYD7.\bb'8ZRVq/aF66Mk1f0Xt0jn]J*m@$'db%"^df^f)
%r-foUd<qN'Hc`O)Cg[-Vc)CYH;LbbI^SH=Gq)pSfUU*47#4Z9[<27XUl1[CrF@VOe>DQs?@ZpME%HlW9`]k[=khdG&)>b'BJidT"
%j`@PFFPQ+048ep4/33B1b-OqPJlOV<M3J&FS:-0*`FH1q"._oYFqtq4=_U.30t?7,L*H3RE.m5NaBCW?S@LB,UDlS.g[$"%2>Ta:
%O9n#i$`j28Il@;]Te]JXjDP*,]G-.^,R,HAo%Qo51=3DVD]8YH]_LqKL?+iDJ&bRU:?0+<q!U'=4,s:>46+)BP*BJqs#k]>NC!K/
%g*7fWNjVh_PFTX?a4(,Hk5LNXb]ausS]6&,qYVnU['g?/U$$`_9IhNa'/]IW#//#kVl^AZG*/>:iegTmmdEWGebSgr+h!j:#CY-2
%^'7]e![A]!?t<G.!Du&EmO<Llkc2jN+*6*omO,-n#aaaO.QjHK?6M6"OA.lK;\.P7FL`)FJZ!CkcI>S^]+s<u6@=,Oh.38-0C<s&
%NV8O`&fXL/+E$UkQ@:YPX[[f>gSccJ]%-MBEUBb*C_Vsm"h^7_QMRe:rh`BHOi`HY^mM/%Bc[`[BCRA3p6Or'@Q.#l8X')ZNoQ8a
%VNf'HGbXk_M-TaH(gUV.K0=?@N4&8NGMK-re%5G2.L/EW`[n@ZoZ2O!AU3j0Z//OXD:ebJ<bgJe%5>J+l?J^X?D`aLWT.RTGaUU!
%VN."Bj5n-f(N(".]P&r,r@_*ib8=HV;od)-3*o'u!+2<[T<WAYD/4c:U-2&6'PQLsPg]PqP@a#7)Ppu5Jkb1NUBI&7159cRRj^%H
%E<hs]!gk\GRi'PgMJ(S$s69:tWB<YGX7s*'bqo=ce&-0aL%;_qN`.4#nMhMd85*N@3<#_a2>.8cnH3?3cGh:7e)`o(qMFZ%7:2LX
%09'_7Q8ZHn+&qQs5Gobart^]jb>jg7!*a5BPs7/V_8M\H(EeU:T-\W#\JB[SDJ9h'6NOVqFrKi:1%s%rZa\P%oW]@HNI!mQ4DB0A
%3QLo5ZiU0Jf=d]o^pnf\b=\'`[EpP2Kf4XIr<F+l84GUXqq!JB=:lQhKIU$-5nm1>8#Yb-SlK/0Il?VHZ6"/'OU];^173\`Yp@2^
%j4',E#*qM.oj^[W9f)<gN9CoL0oCoulGj`G96\hXr7$c^oj`s8Q^R\)VLFI1nmh<mKlX5k?B!&=B<M3me<eRY2(fTY("o__)O54#
%qk2?>'i?rGqN&jk:`sDW4ZIaolW8QMW]SLL*n?q;SaCm4?TZH#P;B,aDl;8<1q$ZX;%7EH>?1:LHIcdGWH=6f/f\#7qp@rk!ab8N
%6!5ZmQmooD'PM.e2"[9N.Kp=C.6,XFST>.`o;f:>!i/-\:6@oT1V-Fg&qlrFWr-24F&Z\RYhSA`gu"*V1cjgGcbKb`0#u;`TY!:!
%WO$(iSUsf4P9N2E&XKU81(u"Q<Vpi+?;jAY`N,c@nKeo8?d>ZWT"7S8/a9<,DU+WIHkdO9\0lZ,QRUmocsZi)$")88Fa9PJ"d3#c
%^3DfLZ1,a,0/=.ebnH-=?,!D2W@^':j[R"#VUjPPRY*J!5_#2*F&QjlC<]JT\]\p9'u1u[:h-ZDaJQu43#Qe(0X5A-c:uQoWB'^"
%G0SO,q\P`CD`XHcI^`Kk.o1#mZ*<?Pm7Uj3'cY*$gN3@*ZKDQ(k20Xo>rL,_!]JgJOC@c-(Bk31-\M\Aic-9Apm=ubM$_+c(uaC*
%O7<!'!#_R%s0\(g-X>MPG?`VOiR3ZAFcNN1B)h>3KtPsLrnjh%N^;K><9p\0Abj:2UOqNoP\jC9_OJVPFQpH-rs\[7m%'Y82p>5_
%(njpp&bL5=Elkc3k0#:!dBm2[(/b9U]goKW$B.T@CT_j7A190@q[?gdWmUcj:^DoNV<Q:gc]a@A!=iHjWpphF.-h>RHdu;pkb?:F
%T,Os6eM%?ZdSA#s<1IXrOoq6X"lPR_/bNHSh8>Yp,<H7f!og$PTB=Oo:jaVS3NDUG8<3b7kBEn$jX*dP-cI9%F2.<8-j6.*6Z=6W
%\Z'0peI4nqCO_5*G@Iq3!lfm2peP!*-SH@jp^/#;k&&`L3ps?o5;g7KP,V>9<Jl7#;Dcp\Ieen<lTIAX9$sJViEs"rje#EiVFo4b
%g&4]29n@rpn>r"%p1'cEW0UMI0q8EOPT,6:hI@rX[15\TZjKn=LM-;%NPQ[l(olD(s59hQLqmDm:<;E)h=3]M03]'0X4cC12U=3'
%Vha:L$fu@m*/b*aEBbG$N+(KPa!,;5H8nZOJMI62AFTb5H8\Otff4g0j=/d?\10YV7s7SOp\:k/0p+!GE`$d_ApDuXf@q"&BPGtX
%6l1IL9X)f#iP7kTN2?Pug0[Fp`SZZ)(>35qj!61qYs5g[Wp4a2^fr-P9WY:qHfq3#9sBji3R?1G51Xt:M9Dab>ulcBhd6sSauqTO
%(`Dq3!@20hJ?:[%-lKeGb;>C@4T?MR_iAd3:GBl.V9?"<-gPUN@O+13Iu_355UZXTB]i9f!DdkO_9[P!Z!V6h&UrPme>KVpW^&H#
%V!Xn5=/[dA^j`oIkZ4/.&c+`3m0c!3"l^?sl>EZm\u>W`f6^J(RkO<th0,QX-C$m/p2V@ra?hjrbtOJWj=IY1a]rHO<1$D..U*d)
%EX5AZPQ^GsX6nbM&LN2d>k=<-p$pLb#%R,ppc6<7,4oRE8>F_2Vll*0^(+)u9!-[o_YL+qFdce8HVuDEdi831$.ALpL2D?ACY'4T
%,e!M^qXU`:hGSP@`mDA9?YSjcgY#s5n,GO4k&6C[[ac:pJ"Mqn8%h`uhUubiXE4]\K:/XfG'1RISU'(oX*;5?`u4\q[G#@QpZ;>%
%?$A?#etW"b:cgYukJ^X]$i5S,+S)`-)hrOUqdBV?^#:Q6#N^1d[Uo"/n39F+T76b)a7<H6gYW2XGY`1sa6h0ED>k@FjQm,Z*3)W2
%I8VTYR9ColZJ3X!j&RDhABd6W5:0qLs*Is=b=hNS6KlC^UB\+;KWuPEr52ELlAsT'4[7F4^+J:VPO\>>DuA4aqWjVcqbp5.bgVsj
%T<+IWs/@)I@Q16`eCD_r+WN!j]6%OV7V5a=cd,Y"e`c`H16AWoT6^%]%klHRHMoIe`+l/'N48i'm,``l^]1cC4)Lj,h[g&es'0rk
%WXL"OCPVc7Q!MIU\_Gnur/u>-RSgQ"O4RK:0on5`F18,JeH*&+R9<Oi^Y4/&h$+#0"h-SdU>0Up#$nW]k1"RW[NQ59\D^8.\^g&h
%@)';-l.jEe/-#L.\^@=Cj%SWc1qt^4>;PU1s&SPlq?C.Sl$>s&c-L76-YcN>2V6&>.p`/5^/gDd5ApLL[+f<R<r]q96m$/,lO!Ea
%bFRAF8:Ad([BCq<qNjY"JA%$DbipLT+eu]?o(1P7JEiXQ"95FVr1^*ZF_5"\Ej!]1rQFPeG43V8C:CZoTu*Wej+e#51!/2Bo)C`?
%;mk@rK-TmF'O]Hm:$Hhrs,;"s@(NZ"kJgu8m8!Of*F/8QF_Z\k$\>VY-Dp+4>SR5:7%C=/?N3pi>;tO9/$q*iI,0p7r1=c4GCL;C
%$g9YnM]CcY%=7uud27\Shmu5Ep8ZK-EJ>r/;gbG@0D<Za`S#)-lh@qp>Ih6;k8:;h$'=5]<jQsp`;$u\`='-9\hf6t)qEM"j1[3?
%R;_WiR##U'_1qo1d@`,9+.$%GQU/UY6K%b2Ku5B.%EoV[aalrH4N@pJilJlRFN(bAq'$]bi6dT]/]X,OkIcrEG5=hWGgb715OUN)
%06U[nAPQPg2C\lAV>0AuSj"2VKf\M=i]W;?rG#Ue>JK*-irAjdY1C#$UsPRRoOa;M9!5ATTsPEX<4i+b::4;u+hI]44gQf53Hk*:
%c\]s8m*'Pb$h2$9]BKkXZb=`U\9crocLdPqK3"EV>Mst`pWVF>[V*g?B+E\=7dUW\Wc)NhI"'sbYG7]H:p8QF?XQE$i"c+0=?*I,
%JUF,.frV6`r_K<Q]V\V=T@p@1]eXYCkD$=nD=eb&+,u\Z`aA\4[<f/dh/0ThI<4&qJK)/ASW2rP[G(UWm;8bRRJlW^;/Zr)AmRCF
%Zja;d3a$<I<8tAc$MND&VP7\+he9&da`lspADA98Djd@%_g0u"*R)0tpA0bdo0<08RHKq>eB2(fI*b)Yhsl;VXCPihhsX.E]g&I`
%2eKKZa4[jCcWFm=)Kc>Jf9r1qS8[_qc>L&_Z>i!?ol<jO>eJNGc<d"?nKlJhm*CU]NpVO,j9D2YjK%+^EN.]kY+kb<frc^J5#6B(
%9;+G[U8tD.Dn,25g,g9llQ(2nrS>9%k]+"J(2.A^IJp[dOG]4L`_:*nmj)9!Zm?R7C_)PeeI(Nb0GZA6r(!N/gheA?8ign"X2h55
%X7<Rg6`m@AeTU>Qe(s;fY.[a]EJ:<'mK5mLO0(kfct<7=O2ecbR:#G8fDb'5'7!>[I[sa,=kd/b(:%([LS^!QT[bfUlF"3WqC:d^
%'2h9D:p9_jWK,C[CMh0948he^*UVU@etZte4^\AsNfA(?5G,(_,^l;,C=O)C>-<(X`suDVO#HU%m]4R$W[VY*lK=/gA`K`BY!6j6
%r]]l&1VI,f)B3hl]LFDsR7*-J\deBooncJFLQ.R6m4d4q)$,ud-=+%bH[F#PcFMb3[tD.oV17^ggS2=P_A$Vde&gRAn$Bim?5("\
%@<C3tn]<8OmSWYq[Qmr+AhOanlL\gKgPqV-^Y:bbSClYtGED&pD>0MU8d\NnlZh-#qs'P.F(:NJeN_NHnDs&rbrP6:]s2pDI;G>.
%7K&7Ir<(NjbFF%XAAK(.0rX(cRsEHWd:f(19l9(:[ZYHY8^OH/-D%Ma:hqqLeVOW'g0a,ehTpS]ZS"6ra(r^d[GG&u>OB6Pe>7Ut
%";=Co)5X1$3Z`X/)eSVqku"("=I3K?reHY9lHiT;:mKZSHAAOq>jHLtNVY*MT36Qml0!Q*ZUa'0eoiO0H`+N2F:gOJpf_!3-2.HW
%4jTW@MlB.O=?B\_cYK=hJTZ8d1Wu?g6)-O6Q-\Yt48R^%EjNHGlROb1CTE",#Jn'ZOH&b"\@f0"Cc0Lf`_j=3'%r]=d]G014g_60
%$O>jRXBY/e(A7t"=tq<RHg+nX$Q6)GbaUP9hUKm9VJamDXq,E@rK1'?Sj't^.+UDmk]XZ2hFmNl:ngY+abnPn@Rm#>Y?Ij+B"FTN
%>N^)BZ'eTZ:[>)UM'5SKfaL52o=L)Vl=o(c-Z3Ui[W7DYH;NA0XlfJUg,mdroZ<)1A,(-`ma^M3h=6Ga/K9kVHJVEXa/sJZS<CEE
%m2m?$8B`BdO\U<OH="6Lfr^$oL%?Wd[ZZr@]bB\j=hF:G`FJ_pg$L`qksuR0s3qR2^@fJe%ah@fm`ZjA6A)tMe$62SRdIf67K$uW
%F*Ar-F>LHo(Z#ZMk&.SRmR3qikj7[g[$6#F]Q_,3_W!VgF#W+b%*n3g<:(b#L>J^kn+9<]FO%VBBl[ghh-[+io&mn.SW:=/Sb0"+
%ce+I"[H=Ppo`i%AoA3'pB"*V,q>C3KDX:G5!1i!T1'/i>"`"AagO5q9S?ou?Bgl'mGQ+ZAg2CTqb&_H$D7;Ui8MIQ?eR\<5WlHLJ
%EIi6\hV-ti-.i1H:QrEhT\!!I+t_R@"dh?0(CiJE-KKc-(WdlF#dqB]:F8R*NLY5:Le\tc\ngn.$)[XqB$6/s-2Zs`]78.k]4rL3
%cVRndr<9b??E2lG2>>kUMnY9H7Q+4bmO5Eqh.b#,dW&@c]['oMGVC.gkBu2o^P,#U8U/:r_qr,63o]\mWk!A[mX4Gg^eN?h+c]`o
%)>@Wj_$U(h(\#e7M*-,.MW-E.6>kr3ILFiiknGDBM)0&g]8Nk^ogWTaBkLLqS$Nf8FX"431b^\&`7)?X)s.sh=aMC&LJCe;+F@4D
%Ek]2e[CV3DWU.lNQOU<_DGqF((EUN[%5/KWlH,ISk+$Q:X6P:rLYF,@m&hW/C1isHi1)G0EbFD9IFCRXU7Rdjr)@H*9kUY1C\Q,^
%+PH"h<D,GSV^p<GYM*_:HJr"N;ek1Z6)XUPUA$`/G:di,lketuhJ=Y2mit!/A3/"H*.&K)jCdp&'40$7e/.b3P+(c`g36/MRFZZ[
%%(^SHcI;/<3\8<2^FOt([=?RqdQ;7dX0p_H/GO[+oY"2$HF'riTeu?,7-C9^C-e1EB%FTE3]?e-[9_DCNH51?En(hJi(@:cM?01[
%=66&#DOI,GQs<\MBg3V&0m!5fg?Y*t4DpBZEM@0>PP.%TTBXSDpY.^I4)$&1id9duAStKn\:qCO2kkHSSQFcE>h.]LQc%[u`'_Xj
%)KrgUh7:%"$'*e=hJ&-qd.'<_q<(MsfD4m%L1Au/e@@TgCst\MlS8jn*ZoU_jQ2/TW7!,i]h"Za[f)]__cEtEjM[^>^653Pp1iEs
%me<E'^X5685rD#Qb@f[V]DA;m<2hWI23F^Yd@j4@[`T=JC:Fp<a*jBAr#@0%1@nb"b0J8k9%+3Z[(X&U&c#uqloHYnY'U\OhtV0R
%hOFC$Q`=ue2Vf=uk?!t]lUM2(pY/b-.p(kFDlu"!$b^>lX%-sAe[s#.efR$I*o;>9n`J<^m[t=resrYcFkcMj>#qj)Xh6l2?!CY3
%]Pr5nhV<*h\bF`Z<0(0gH?,itH>W@Wp)gtmZ@'u6Cp,bc5H'h`(2iQ4Gh/)T48$Cn>e,;BI)"MkJ,?V4]q:oI*HdtGe>2aJmQ:cX
%%Ou&Yg7+@GXda7YA'0/Lk3f3m],&D5iTh:%5*g@m(LEa4e82n3T9epd<^&+mm4B=6.F29A<+abJHg3>UYKGHMcNiRF:N++8eoL*D
%h7])+roufEhTjBef,Nh?rT*kH]n\Q(aGn\BpJsNIJ*s8MDL=*Ue2OP3bX^QnQ+#kZ[cJgl<pKk\R/#G&S_@8lIkeQ]i-eb>=1[hV
%\?kaBmd$G*eXN`lX,Xs_#Hp(i*\>iVeO08b]X,'@j?Oc'>Dq%9gV!7QDY*I3IAM)biQ_2dSWAEOPO0=H0n<KO9:H0hH;(R8qU9Ja
%?+YB(kPir,`UN*OrFQm!p@d9>\$f`&3P9,T\#biRH`tuDKf9t0)qV+ID6>KleOR'?hOg@2CTOn[XWn_$]-l3s=#]PQIBtgJq^?D6
%DgVhn4pY4OTC:Q^?2nlqftI6=pO1E&Y(lQk\:#*aj[8MaGgXN14]j_W(!PtIqRZ[EZ9MWC>$e;e]2?+ZkC"/-$1PiFhM#7bA$"KN
%2E^uZSHkF,qQG6aefIKae[`)kE]<0PZ_:Fh>O0Re#A\BUq;M=$IA8aqmk*))4o<I,RCof9ht%T?4@]!Ifh>`2;u-jpm/<:7eaV5R
%?Weh-iH1D*]n]q`558//m?GBA.ISiPrk;F8hRp90m(Rdcmnro(K@8%2X^Ben<dS$(EEk&G;Y]M4<HV1;rS$#0%gU3-al:RIf$B-9
%h4iIepQ>8bmlKRDmBo!Q<8G$0lct-`95ilAiQg^CCL?EiY?/BGS!E)QpY_<\pZ\0&r(<+/liu__hO_?cdYU1!cXqXifr6o/,p*r4
%;NFtlF+5lJ.C\XYCX^&!r`Q_!Eh`lUDJ+6/VuK8$B<sf^3L`BC1Ge^dlbDgn6/)l[g@p;5Bm?W^0B5N5p;ZX)eUufAqmB_qhX,?Y
%gRYYh>PFJI2j"tLVW5dEl-#sK20X!<CB[r9nNqN]>?KER5e_!?rVbr"l1sM-Vj5fGc,d14n('"ioqQ_qUo/Tqop&Qss%Rh2T`=*P
%qisZ5=76[5KR/T'O2ge^qVh+%HIe"$&2p]!GP=hpjSKG]X/WkrqWl1Om)JRd-1BO6S1JOL3d[pP?8J8<SH#hTgq()e-lpo;j6hmO
%[ARBg_BO>QkPjW@:%Qm5O%Q:[lIY>tDQifLe;m5V?T6/d:%+-#\\[.I7mUkPBkMqkp!-%7Z51,uWuc?VkoD-m%t"W>*&TB"PqTVL
%*9bSJYLXVd_3CD_k2&7+086%%oLd\e6(%@MgKj_rXgBt[n:S@t`3ah!-$?Z6I-^%1\Z<uaV4F.rF.(Lu[WVmk2qqOYP&GD`BC5BH
%8*5?4IA=GVEZ:F!+ScaF5^-<l-uX9IIm&)Qgo')T_W.l5\'kf/S%%6lY?tYooW63UAJ`+)e7#dMW0D$=p=)j@IofpI^Jeq3@HLXM
%k&0GF+)Iq#`kedbq7/Yl]^k^7Ca-+Ogg09L>mXkeWlJj+0/'AU<nHgO2HckerX/2]l3"CFkLqC6)9lG4?'?d?=-G01f+p#3/l2=D
%P(-L_pu`t&.@Vqu/<?d3jdsFtR2bZNjcfF0?U)6`IbDAo][JA!U*$_)N:]F,>2,oKm^AQHB'Y[a.\67^H^l*>Bt39i_qa@sk\qV\
%pX=JRP0V7m7)$`:JkYF8j=[:QBX2"2]^K)&@gmblrL!4eX=*VIR^>4KVCFeT19U76=-<ScL0d22-Ma<%UFG\8GcgmDaZhZSTCSAu
%QcI'\j%4,nl$>@pEof#gcBlcN8o@*RUY\1M?Luom[?=\>-Uqi'P/!0,%)#DIBPB]P5F(tIf&%gFOikdA/(:tr]]GT)qNd8Ca(>"/
%]ch0tP$%j,hnmiJE7&XU+6^a],o7k75BG5\\aggn7P=(+FpY5s:Oeu6[@I_ZYQ%;gPD9CVJK0@A-QCBu]D_%K9A>*bJ)nq:N`,Iq
%ZbcO6[3MW&8ita34Qp#\XNe0AX-!7gbI,mN,GgO+*3-?Tl"@(.4''qQj-AQ";W)H+aCm%bRtEfU1GISP("C'7eN_lKb%afJhe*G4
%`'!$n6j!J@ig`'MhquTdah#(]qW9>^9tB,,nu5O\h`F2d$('L5WKd>B`E2.kZgFfia7$Ik\R2BZKC4XfgWT?R_`u;5GHUd&UJMi$
%d(>$s>@fj-k@S:L^YH?4p*;TJN!=;mfdf/A93W@E5*gDXTmFij`($U^XWA_U#)g[n[9p(mf%E8oG]Dp*lfr\hk!mo$7a7d\WARu:
%D-Q6McWC!Zn*AU"SZhc/Q:8-1\pa&5]h8)BC@6ICU:_i]Q%RPsY5RQo\_:A>",6KRZ=YUsEBAssbO4/i_Lnlu2(_+54&MK%%1h;f
%4\">r8[)+'\+Xebd:X6?2o(;S?as+7*YZ9ae9G6THdUSSCi4Z'd@1@CGF^r^S8V=A1+;%-K-dX$`iJE\g0KiM+RU4&IBC`]4^KO>
%pNGCT\#t.nB/IHk<0d4@D`s=bo"t@^.6W.Op6s])GIWCY0Ug4038`l>]SWp'.]%/1g#k$](ZCUm\Nc_SKD;\@Ga6/.C&Lfgl^%ir
%H0*/[_c'kVB$C70b,qes'";lG%Cj%7bg-dT2`3Nl>=4lWMu(79lbcmhWdV<6&$(b]Y=l@6n>g]@IakZfkd38t`6R+E45obYj*,u$
%S*/^%Z367P#nP,Kde8"cRp'P#]?]uJ/$WoT\SI*Fm`uB5L,-P^m)]d[R\qHKccrW4H-:0Z:gUFK/q)hkg94S[]m+ZeHPm%VY*Y_%
%Y<6"Y"tQ!&pSsQrhG4MOLjo,(MO,C1-U6r7j7U7?0\j4pYVmU%Z(r^oiQfm>h1LfML-P'iVuQ$Po2q3Sl]jKsOE',!?<o_hGie@a
%#O>a2jDM^$GieGZSSNEjD!e''nLd#BkESEtrg!*\opEZhifkB`?9DG+2-0(ok*6H9Q%3.c;7<VJPh'T)hf&"B`8A.GV=JnMm:N3e
%@RJ97obV'B=\_f)Tk3oObnXe9mDb&[?[aQbc>LohG]MW)Ct&'HHck.ODW=7&V+FG$$[-RGWc[rlCualOBG2JK8\>)tqWd+ln1D*j
%[9dKigu:qIp#*`fg@<#.Y:&enhb(BJSHnUIh)=01EZTTm;PIS!b4>:^[>+LC2[?0mpNV2(Ie7prMdZkQr4DOV_A-FTo_rI3B5N#u
%^R#pBCNh_<]*ffX*sBn@orO]GO7%MiS@jL,H1^W=BkR,7G'W%XI=D"[ZbpC$KVb_FS?Opn]mL4:q8:okkNSWR0=Gbr\'f.]R/"#6
%gH0MS]V#5(%^+VhlK0rO4jS9&Q&]#og[<\aj2[^eeZX`YT$f?FkN.]WSJS;Ca4C*<IfA-fr]t+%WGStk7,(ATn(2_!XaR,f]8Q-I
%GG"7U2:m"qDLBd22h?5)G&CR>Y'dd+j(7>q<iHTWp[7:L^OQ2YIDbgjGYB3YqlTZEXmj:M8Ea%=On1$32nRk9NsDKt\''+Ko62.o
%6VkC27ou9^DS=fi/#CCk-U0`(F8td:HF\J=c_Z\',Fk=D8un1o]M[GZSsT?Ak/$%Cj7?>nO%/85oaTNVW9maf]_m2s?;cs.]t-+O
%AK_m3>ga-U5]qKoGH^Z6nX7);AL$ua\E'1Ddb;EAq/WDljjo43O)).Y2uN7,N@WcRf(EsHjkf-`DoQk!L!@`I[+bH<>+kWMh)4j<
%/&u_K$Ufb0((Z^<n%Do@B0OV@NVZ]N2X@!P>Djg-dAMu:qPq;Ze6JuUIBGQ58hZLe>gFh>qEr9/jiuX_>A`q=@K$'!a"O:_qQ"Am
%hRYk>hFd*J+8"8kW%Z0r+%n2nS]af%06`_sB@V&$DMq,jI<)q6IU$&^^AI&>1OS5oNRCS$F(4)gro*Sds&K+?]$u1Nqg7F2V:Ng@
%R0WHg=5OhmNU"Xcr0U\<%l[6j-,J+re4VXlQ\3R@GR%;V>jhgemCAcUc+<A0G$[Bq>e]sjpfZk3io>B$]/T[E]=_2-_Q=jha&4+L
%0Un-+<`Vkcp=2D!?f4^1D`r5<hP3$=gmR&FUc-QI_=7.XF0%qu+a]Odjc=Z1]f#hXRdLCcl%`=QqXMkrJ`#?707H'u^%/:TeBHeI
%c$`A.(b^5OGA[Y4=j:7N1Oo=6jn&'/C]/_Y@TW^+++G<L>FY(GA]>.@ls?k9"mL+VY4s@Y^SU>sLLti#`hQSqGF./?S?p`?]QJ29
%U;9I>M70+rcg;[:eWonfFLYsUi@B'&WaA!7B"r(tGu3A4qXL,^9kJ0V[G]WLP4`5SBP7c)2-r;No&eD&Dj=^Y1p<5=LNQ9oDC=8:
%qc6\"g=p7elHRrX9'^m%[CgeBFk/`@hu-O2gM&=:pI-@h+Uq7j0&5:4nM=`IUsd]D2sP9fj3mNom5TRWJ([enV>X:@Tkc`d0RgR)
%hj!"d4&UPK,^L8EE:pHrp2?9j0AB:GCV+q#m[s=me]XGAT<#<;HEgLtZQ'Em2QJe25'[+uG#bM#2rC3M?j(sYT&.7Q==nGtfsAtM
%N;n@rr9SbmGic&mr.fVp.^P2fj,@\pcBd"]5C(Iu)^+\*^Mg23mluaJ0ZaO4k-#aOSSp$dU,QH9fRR#0\C)icmX>':_Ii,Qqe&N(
%>'ZQ"#34-odMUhGe!>^uC;)?<miLph9Zaj&=NQLZj/_\<^CMC@II="VreZo+3QfmskOqP144iA#^,/V]q;Kj_=JiP40IYIt=oS,j
%ntghY03+Zc!QjuHiFCAPrV0AurodH9qsQ$_1m"9q6T%m#2'mr?*`bIKT#GKWo;/e$K&FIb*MQIAD<'olMT5@bX"PP_8dVTV34IcT
%p7i);6@3!PR1&8Sbn<R>*^>/7^;Y],,RXCph*.VRE-SHD?rio%`Eu9/KBK`44QsJ>':B&5W`60U>PDc;gj6I#@Vbem@e8m@H`?8T
%/sS)l`B^DC6#/K.]>%C(epDg5e)r6fS+Egbm8lfk1l.EFZr1YX`6IVU>-f)EDP(SOpI4b;qS!tcBlDA^l9KY>S3+4'MjZ)YD4sH5
%"Q/Tk>FEspQ-/[sE_EOAS[tD^i;)\\6/A*h]@Tb'0C<T$KESe+"E,:QXm\D)D9jda[:9/Z480R[e8DG>#(M"L7Ipn:PW*5n"[h20
%hKl6Y=Rcmep#,MD:TpP_iT_X=Ma+R2I.HK`>0ro(/#AS6\kEOR8(cX%D-+E:="X7:3n9k6gi@>6pDLVgq,VpN=*#RH1(c\"L&31^
%kZYT&YLdrnX4qjUhj\uep%:pmhVMCbpZ;0c?BQ0LQH68jC_`)/h)4a`enGiTHt9@,4)A9A@igsqhek+1]STk]_k!uHZhNSd+.L*!
%n$eY7C+jJ\cabmcjj@P64=DASq<`l6G]1lo=.VO!SXND[2t#HS4hpf,D*A6U\SL%#K<c\I3EU^0rd&f`.:I(q[cDA+p<oF+ji<j_
%^/I@qP#:,Dq0<]%1V=^nrU9F8'-4[W(V/dW]MaXL2XZq+h:5#p@EiLe_^sEkmQ>i96^a[FHK*B7I(`P#Iu/G/qgS#>-/Wb<a3gBg
%:[be8&6Z\e_<`NkaQ.`]pg^H"Y45r"qPNkd]X[\&H=\[S.IUePWpg&=9$\SDWm\gbqrX0=Pa-Sm\NX,E?0[[JK$5(aH0]57g7/_t
%f;"mPm9o/?VXmts4U)]#\&t$BV%7N%Xe4bNermf']<,E!=?Cu<9AkM%rLR&-Y$\@\ob>%'??L1i!De'4+&-dN0RD."*]hGb2k#62
%I.-%:TQ7*FZ(?7*j9BAZh,j0GF^m]hOSO)J6JnajB\mU]^Nu,<_;22trSlj;[=_MSXPL7o[pN8gqr(.$k:EHj?J91smjgJ9oc6H`
%j#<UulK5q62g$UQIMb,n/8*>E>(4,iG&?X<Tma0#*E6pB/+#!.bFeJm=ioFSjB_2U`p\qPSNT%bUJZ&l[ccZ)SOL(.6jLHk[rS8'
%cK6>]n!5HR)c+pfWQL4n-c^F'=0ET'jULs`;nhtaY1:%fFl0s>HJ;J(qP.BYp8p>NM;>YFes>dLe_=m<)]SNkjF?`H?KZ1%gjagU
%oWk6NcGS=2?a%$?hh*bb0;!)_-BO:a</+8?9rcE\gWfh),h;*GBsG_/G.(p3a_UOtNa'cC)Qg,2GHZ!AT5YX)!]BKO'-LpPCp[@J
%QM>U61DsTn_Y"V@AO[mJEiWI@ZDoFi9&9+0nPsK<]hK[!3N:]o`g(;Bs/*'u]%Qkb^hX3.9='%Ki6GQWrPlkQeWZlr::GN@'QmXC
%jl#=Y@3o.UFPa-V5-U4$;P#hY@;M0d?Xr9s6HWQjQPWUm@E$E#<0**HhsQ*n509(=SiO<INW&2XcgDc0HB">-[kZ>rB[#[lVO:bc
%%ug#7bb#-"p'bmqeC(J-B<\g_nN+"n;9CapmGZ)Bc.9Zh/^1lmn]'kOSm7Von_]nRb]-9]g1ekil:q2nf8uKi=.ATFAm;F-a_\#g
%)>2qK#&Q6mR=5B"W\nCW9TQ@%[&S0&hZ0*C1YHLM?H>eNX:4BJ2rGNfm^LZ7aclDhe6EO6>Bfeh(M`YU#44cS-S1dmT?XiDGHQ(X
%a8&'n1V`R*^Y5hl]B<1kRB?V$"=T^^InNTN+??kkC3V+V.u%q<'ZB#'np.QjSp&hYg-N2he0qAS&A[%aob$B/"-!bPq4;BmkuXq+
%!fPSk\"<RCE0W4#?3n9Ak_0nMKC`/rk(`[.@eoF;@VV/sCoHdHI9-ZmJnIh/aD#jKrfT8`rA17h:Lee^?X=08lhm/2@jr3r5oAm%
%=othRB7Aj6C4bcQ-JYQ#LH"sr8WD1f1RraWj(>op??N\q(A@T^g+hm>rj1':9Fm'Q<e:r-C/8e\F0!)?GB[p8G4De3]DiM1rf]@i
%f6F3fEb)"3])O]c,Zrdfr4!$)@JHLFP:^&<$/h(:CIp49Up))MJ/m_\0pm@3F5FZ^#WX!(kbl@3AgJ0(S>BDuZWlf]WW(`;?6HiO
%FY#SmI.*keQKK`M1<Q-rY[W.uX#KQ<];>`.n?Tas]JPO0o*N)soCsiEjNEIc/^D!aUNN,f@rqL(ql(5bIq`MVkFW#B988L\Mu'%p
%="esLl/1ItD9*+2gP=rel-RsF25`gn(>ON-f_X-IA*76=[+h`A>8QWj/oIKeEsqDHiA45])T`nCC+nWZ6@WlQk0,#\Co^;T+BK5/
%o;$Bm=Q^UCkE`nh\T26jn["K6=5H)bi0G1O5DkdWea)&g/),DHY<HrmSmAnTI:HQniB;LtI/!I-s.?tXmuB0Dq>Gfgl0gk`OHgO:
%QN.'')CX/Jp+7g=JLZrsjup1<rO';\I\)./)Q%lDjN]o,_[i(U=d!@LQDF\qGNnsfhp'E$?[)H7_sbA?4r>ib\1eaNc-He&$Wl:&
%_oU6ES%k<ik<:\0BD6=_;"oa?qs`4LkOd64A+tag\)%(P0pgM<^:>43RbNN#o'F&fT,6<*k3)\M0>;\=E>AJ!df4H\S!.LCY;\i/
%]8p:#_I$[G^Rd6jq'YolKc0+Pe2_U9h2_B]ibA0<"@HFc+.bR^riu[/B'rnfpAP8?Il`#\IX^hbhNti%i3/_OH!tr1jbs#R$MFFF
%l27%Lcg]O<q!6)A(MfWZi"+T1s&chWG$j\7^P:-<8"5[*dbrRLSYrB8pLe1V?f!(bQVLi]H>^eoB9r>hM3V<.mXG.Um*`lG,mJRL
%:G9FE])!6RC6)Z1p6@l6>k@lH9<$dCSeq.bS_nphqfHr[XAW-ohQ"1<%j/'7K9c*C]9BYa,STonpl?4JLi@,WMK%hYUB%$<4hC*l
%1HP]O?@M<.ppn;G\tRDVHfjhlH`?PZ.Z!<NF8%=,G7)1?/'[qXbqk)=\M9nHf,m2fF7.?>1NVju:Ws/AdDGD?k@_sSf&!%53;;sZ
%dcL-LlG`Vse^qjfIX\f9N\mbXHP?#\H:BH14nnqsG[>FUd`,"XY.]F"O&oAK04#_t\F\(j(Isg0.":gSX5ACknc%g]_=H<r^5cIp
%E-4%o0YE-$?[D9RD$]*EqVn9@9C$4lDnLFHinD\`d$)LlX.e_Qac.rTDI.]^Ndj39mG[DlPNTR>obDiN0t__#LRW_u>Zr5m@kXm\
%LA!&iPaU9-h7#lrcY\+Oln5JKA36.(dJXf)p@pDuC@&#ai>:(K?XIRP)^Y?m=6ABFZ\rp:0RMg0A2*WOb.GLJ_L:C-GQ7SKE9?Ed
%:c]6n[^bsOB!?O?_<8Y_Wa52<*i/+j`7_cl'`L";C#Pg1^T75^j5mUS(>g&*V\N&!_;&F1mcj"Ep@s=\K;38YjkuMLZZtp19aI[<
%bcd2QK7u,Aa+M?hRi_l.f1le\bI;-8#KQ9r]/Ni;Eq.snpi9qcE8p9AklI4-\il]noU>lR4ZGL\?anNMcCMO-:rd4@%5`LI5;6`R
%o7=S#Xpe@?#1!K$?hlI8K@=o9ojDY(lHR/5H`,a2c@2G0KD!ck$\S&3B:f\ecKu\o>e9V(m,6$k:JV062a>OsY-!(72]-BRHTnrZ
%ApJB8CJJ^TDSJ<C2qZoq/d>P@_:IQ$f69$'#9T"6*'AOr)D7Nb:EF?:_6_nV-\E4Zjmg11HZq@QY9/-Q3nS_k2B(q2gccRfT-IDA
%PLYG\#9Rjo0+U7]])R%pE1C4%)/O,=SXKG`IXPgGI<KL?@J@UhbjtQcA7jrHYno4WqY&#K:9VS6gl-WiH?I6_QsZ4@\bb:,bhE!g
%WL:*i%mSC1hn??VF6V@80sgCl@luPnEolH-c.CRdban:k%l7Dpp[6<h,d*mikJf;6cSl*TB3n?gVftmRYaN0Vf>2"ke'j^\\',&(
%k$WX2c-C.n+.\r9B6Io(pKl^K?.i1YAgr4CB&t">Si)`!0=.Q_SD9MqHfs4[faBaAhOM9b8M88Jm_:tLHgAdj0miZNl'9qWZ]"F]
%:[P'Jg$N"uqm14tDGFg$Z"rg`B4aB`3PRZQAa\@.UGFjTll;Q\IfA`^j_'p(O-5^YhAql6XiXH;jS@u6CY(`ZNh4!NkDrs.k>mUL
%?bS1ShDtSso[3QRe]UITS@Ee/kk=<.j.e]fYO*BZs5M5RURr#K&!%/pIQd'^F):9\NR>#mYObPMd2Ug^Ni@YPbK!B6Qs2Y\:3JOV
%?/E9.HgLU:du27)p$h=QLGK/GN]e>rs*X2+]01<'h=DGlNd]W,245DrhA12(mpFtD)pV/Abm?OSEc1OcI6;^smi7kAcWsTGY0C7%
%nG^>\h7;RDk8rHnr,Q\Em"r9^Drfrh%i=XEkJ")MhOgG;EdqYLjirVeoA\WUiV^gP-_JVd?i)862f<NIT"jr/mEGM,]nK8RcbAgR
%TANKVQff`kNT]m<n'@R+CH0(PHE]*YYn%V7<N?M*hjK+NMjI1&=Ldd8jMK^`Rr\s5Snu/FG^]86BOSPKeAB&u[@,#0of'&i:Rke+
%[AZTj[DarJ^'kf2J%kD`n^d4.lbs*1cei)WnSrMbEGt4sHtMp?fZ9n!(HsK*%HeeY/ub`b4tiJ;,2OtYiCDcVh4FMR^%CgSRqGAI
%a4jCUhX<UU]QEZ5q;^SU`OAX0RJHW*q;dg/Qcg1OOIbJPa"NC<mpCRK^Uu`$jk0.9lXmYS0QRI#d>oqCT3X\,/oBB'IVS!)j5Urj
%>hV8go@92\it%d=il>E>i"qGM?G=1h1@sJmqj!FVCWe5SFlhE$\Jq10Y?W%8HsF30TCA*^:[VRsGsAsJ]CPX^,;NM1Isc[Ck$F('
%B6QSVB85%+/_hH))kB#NgqL4>AN7F#@=2PH.R/&bjj'E`-d:mZH/ebR/'guG>Wq!m*c522G/C5R4Rr6uZ^532iS5m![q=N]1NN@*
%\U&41QJ?h6iBDO4RnN=gI@))1=FclK8oH8PTVj^bGNm+*\PBUtC.;RYo,m4P/%=rOA"WM@0m7klRB:nM3+gdf5C:Hm/.F8=f5EQ)
%q`L=<kDL-75B%na?h![X`>64bf<=bCp?5ZYDY2M9RJSq"qi!LSE.1r[5,IG\eVD=(ika'j"7bO4d4aJe5Pdf$^L'$`p:d,\Qd;9g
%-FZb*>a2Emh@fY[pl\ZN9C$5TTeERI9C!r`e_N<Vcdg5/_H;5p&*NT5';;d=Hk#TgqXUt.&+mOmp0PMjs1"l>]S=DfqT\p"e<MPV
%bdI'._E;!`H,JuS48[=KhE8t4HZSS??(\b'akjbAHcj'IF4AH^F6`Pcdb_mrX/hS!#0qUe\\.e.c0hL[]t:0q\Bg[-H>WTMUc<l"
%d`Dk5k.dG!Hf=5QjQl\Ek>*.8PP_9!_Q5kBpADP9;n$pWD4K<<:DQ`ShKebQoZESWk>/95]j<gL@sdt#l0%f$?9A,MWoRs9043I@
%4+6)Le$U.HQ8[<c5Iq=SYkDf"e(g@VQ1OIjXPMNYHKO@fdB,4ZQ]>E4Zi=aoSiq)bnqj^91nR"E\SuA(p@[MFVfRK':Z%f)gQ2*S
%?$uV?mCE+4n*ccn2o!&<5(Dkr]6/JtlX]tJ-aLMdD#NqkqPX9nE,g&MG[lT&5K?6/k;Nn]Y+FNrH26<NUCY)Q^7]E$pi>?Yc/J0/
%e,-c?/pqtbIIlHT\[B,/lXjl$ims=0\Vkf-PD>Len%\a?l/[\,Hg/P>pKNtjhE:RRH*Fl)qQa?\cRs,eh?_Mna'N&dr-<R-rsH$_
%c<n,$C]F?u#J1f(Y"Y/$D`<^6]sb@hDK54&`n'0Ok;V8NbPP?W^Tne[fA=_(?erB,qt01A]f0`Y(2c>8Ep`LoBD8R>%>f5IF73MD
%@.k\&:-WC\,&+DEIr8u-HggL:l\fk(n+tbpqYBH$\+\JIGO$U]2jX-kh&GP,`Q'q*bLmgn-E!G?\2h3Nl/^(scNq/YGin>^S"D@J
%T>/?g[qBVrS9a\uf(4N,#Iaq6GJ;olQTi^M^1eCD\^0'f=]UH)(/EX/GL#]%qT_6Filmt8NNK7N-f3'aD-fDGkN1j4Ru<p,%VD:`
%h_fW(S@X&_FlDK=[g+uJ\!C@VS)%7tHu4#ldH9-:>PiV?^:u%fSYl.an#fs2[ki6uh>P=c:#S9Ws4lA"Xo"1'Z'kLd4)5WSW%1[$
%4h/&8E:Uj"pX`b8>^gZl5J6K-lfH$^O-t8Mf\YA.[(8=[oB>W4eW5b<(DfT&l->Wla4L+@B9-CaHb&i\narluPOlig*^+f>o$c=A
%_:'R_CHjt-A+es4XkT>?V]YAfoeWkTAtRm!4PG(hVjFi`&%Au"52TJ8qY@/s]?;iC`Q$LGk<I>f0:k<jGdVsAj5lKl1M?14hgT\@
%f&l\XNE`l!T"K.1f#rEDn(i<#^\%*B.s'_NhSHt\r'DL?qKQjeqmAKap>,&hYK6_/ah>`QDo>X"hqU9kB`63Nr5h#^r6"2(4#cUm
%pq$'Gk:D,+);f[cF*$dFg\5&=%X.[8%juR>SXA3e*P^Lhh\/d$:[[&q>(+'XiPl-Cds(*.X,V=m:R3Bs5/#c3rSGhZ?ba@"iLGAs
%jkZj%nYqGUc1p7!qIVMS@'V[NHYRUWH,_IBr@kuok<E4AVb]Lh3^HMj4KaGE+0T#0pHS)[>W_V8Odi\LDJ_Ren`f*)i2Z[uBCfS,
%I_NS%4gRB2_`.I*LJRC+5@;j*^FUG\Z1Uh4g"D*Y.X^'rW@3VJqq>r]'NOo1FV=[NWS:5Bgf:+)g.hP'@o,H.DUO#%<J^U1@joKZ
%.lhBlKJIV%8a63u!?JlOm9^78ob"c[AG!\[+.V(Mkc<OJ[;k0HlB0Hi\SE2g7\76S><-=2&GdBH7JlZ7&,n5K,QGZH`48l8_mh_4
%@d/tP_iIJFaL!!\_tanR,X^ZL7Ak_$kG,aT8"fo@4gM<b!L!Ao54UUC"d<h?.qD2P%(3"8,CV&.@(`Bc2H+WEQ0XN94]F`uq"IIJ
%Ps]GV54W(_D2j1'N"F[sfEb3h+P(s@E_=<t=@L!\o=FCY8gp.Q=DqDYaA<_M@bYg"_<fOa,Qes.;Uo\@Ul#Iq@,+-/rn/e$7mjWq
%*9qXXDMX23e,NnZg]@5AqrHutPUd-k#q$/cJ'^e\?B]*]^JJY"=Q):Ie/C&P`f54s.RsTfb)@Asa01;X&AjYK8ns$W.K?[qc+i,'
%3ift&Pfbh0X/jMk*,L+L4+=NIH6.qKs52\":=@Frh8fI)Dt`WZc2RQNFd<!+eg0)FCjc#e1Np:,EV$e(OSmZ-"'f%-q!Zk-U5o62
%=8j0MfH:)bpg*[7O4*aBItteYJ*9s*9$RVP:u-S<>f#$@L,1^:>-_kDHNU`Y&"7S2VU<D=4fDt3qs-/9bKO6JiohNYgKd&ANpP'-
%It!1mljn*r50EME1ApHOn)&%AGIO9,>MK&0P8p]'rNm^LrTMDtLY(QFq_tO<F&e]U@<L-iF"<B\U24M>>H!FmaU#=Jq1lZATrgA_
%<W?:3MK%b#J91<HCTEu;W!t]c>[-k94>Y!eV;QE7:+[4M#;*aR3#@PcY/",f+>)aTTVO:Ng.897dhWo[jVi1/ZF"TmS>>#4F<)<Y
%YS"a>L4&@hb<PCudBES%iM20_n'LS&;SsmHE1.qcX<&$B.b$-Ad"HA-.S9YPX!`\V*s2D)NF(D)E_8aP-qd=jVV1uH'<lJ*1CAV`
%Irp2'db?gVLK[j5%l64FN;K_u!<ni_#BJi5UbeAg9_';>Y\qHtG73F(mnO[hR5;@@gT!n>!F\>>m1F*'J_&`o8r*U\o#Q+>5Dl.S
%+,:BL+]jmME?:r"#!V67D7Hq8#][F)KnKsPOK,"Y9HR\bB\iC:+iJ5UM*j6E1+O&*??qG[7FfPli=d?)a<@>(X:$rIdLuebY8\'M
%.R4pu1o'J+e1E#$=`.n>(jVq#ds/7YGfU/GKnrWD'_TY0jo,sF0FJ*i6?(()/52@+3:n%[7]!Cs=H9@a>Kh[*#)*C3.;mifU:_3,
%O:oME$PENXdVab<*.bmeAUuA[&ahdXIVEq8g*?;TmH?#s=4)>>f>HUN(j`%?#0*#>bp8EA$FAM1N$RCRQ`!,O>JL-[*a)T-o&+uq
%kHEtQkc[&d=q*'RNRj\UF0ck"[.-!\MB.W'6U,n\D]JTms&8n$=)pjiq"rFqpi#d`\1ql4Tsf,(&=P`lD.2\H9*eU:2'Q3\X,7O-
%3E!;##W8k8.k;<h,n;O>WeHDDAPS$Po]148=:[CMaRR&B=X"EG>S"!ick9rp=/"FlW5=Q!r)W-W:jrSm%?4k]n4QdP5<)Vad[iM,
%UiE/aatX,QI>E5aII(D6:\$f]'i)U[F(8+AaU@&s]&3>NEHX\V2io-@`@?k_%36gUp")%B':C&\Y,(sETiZ/Y'Wae6HPtM[nK,75
%$IJW2UZ.I[hBf(qLWSHI9)e[h'QoqAnBWVLg2P>QlqkL">sq-f_+2)uQi1Usp#/L2T`akHF[2m0!WMRc06JV6=Z3DP?ZAE21E)$=
%^#/QNZ3t-+eDP0L/&H2J/_lkN9pj[LJ\>!"$V&N)jq-h&,8e-+?,:!C85I`#*D9e2E>L';J.^<BiS]=E3/!i1XVE#5>AMSJ=E'fu
%^k/h7]3,N/>7`>F;8W@B%X5tu[u#;ogVuQX+,If?]"O-(L^-GM<M$COK^CBH#!<1ta++<s+R=i\hYAr7%Lri$8XI?_:N";+T)''0
%'#@EKAet,4U>+_eG5#s`q'W@(_JPk12!`ks2>5cDdN@913q&TkW?hD>Q5ORc#RL=JXtsF7nP\Ck%,gO][pte5PS;[Y2%aT:@/g,'
%\(>!r^\[uFo^ujcEp'J_-\2>%CacgUl28tCD@ek/;*+@(N`"V"5?`BcJPEUr>:\?V<$)h.XTXM=+%.OB)YMI<efWu$0ne9CK5faC
%NG^q9:t.AfTc^C$87<GFHcG?'"JS7T_[qd$Y#,`.B_=[R[^),H;h'mC"VI+26SM]T`]`sho`q%3iG9TO53THDN/NE6(e%`**r=:\
%K5N?g+BZ#M+>Z@pB+=M=&W4.h4nPNB#Mnfu_ZmaP+E9kXRt`('79uZ0qU+S\e@NCmfmM.:iC_fX"J_f/gd=;0Io%!gn85%V1N^q/
%[IdlAFcC_28*^ZmkE8H\Rh'NtPd[D!USqtX6U+b(OF]!]NL!IOL.^]B(1@o"NI'eYWt.7tXhh/AhojDf\1n%X^Zajo@.c+r+K/2i
%hbqbH;q_WhJYcTCo3SZtQ7sI1WjZPXNA@%>U4B(Eo^cCnRH`"SgLbTLZ&+ae$A^'Orcp/!I;<Q?T>:9!n?la?\fV@L%t8ng`@_-%
%_H?+@GY5ggaiYdF?qa(#&#8!18*O!X1QHD/J!M6ujTYj*O&SGZmI*-IgR*P-7$V<>&JCDF!5UCAf*uVMjq3+,ke%f!YH"RA&lFZI
%5KgF_E2F1-W_`^dX],H\pQ3aADng#4/NJRi`Q^`di#(%m6elS3Mhc<T%onMU-IO5G#3*6igp@Z8W:EQYh;Y0`&JR(pnEghc<MnA3
%**>kqQ(f/sLK/rl7K`n6""6<?&TmpK<?gXUh_.I%2eH5s$X/Oj6gM7khd7W1.G_RQ=qO<pmmWuP#d&iHHb^ihpA:mYd/?.e!7h9]
%>7hRV)HV^FEGrV,8-IWTM/EHhSIr98@37h:6,h_kp:#JL.d"4t#27l7+>df_UnH7o)EPo%I4![)CI#CB155$d[t7`d2g'RLF,Qph
%;(i8W1Dl1,pm5<X[r*.ei$uio:I9r3nca-"_JS0YTPfDE"1U>G/_YkUm]X\OlF,=hTnH8`;+YFdNDhiS!\1;4$$BH#(>Bb(&kZ-5
%Lim&\_/#5QY4QfYbW2$$5q.#TJsiJ<.cCi'Cd-uXR>9o1UGS\PO_^5>4ZL;\*j?`)eH,/oM"Y>HO,bn;$Z?YM+Zq9"ghr4jLF,e!
%+^QUkg?BoV!cDC_660k%&9L$^V/V!$I)HnVqr$+k%LpWU#PthjN(_!],"9"7jU_W`39/o23DeuD_DNg&JRI7[iCGq=&YWF(&ebEg
%[`a16kG'ErBf/nA>.=f3W7'WWhi5iL/kF?i&9d1ocg^B\l7[8fWiStir(L^4D2!d,apD.+1?YV3CLQD30pN1j<W:d.^m/j!\_B5D
%/gEtf;?_"WKLb"LJ7cc!rmV'IWOP[hjd+&>C)L"f6kQ.=.>4m9RJA6p8!_n$X"7RKie1bbZ5cgeN!h8<X_kG"JBS=8d4is`<@hN3
%lWhfp%ndoQgRM"X#o=_%f46laE"PEi2k/*u1OfntNF\YuKPAD*(qkXu#&i2&it#Yq@Qk?W:mdOogO%)=76QTVqu,ap;H!iO@6rQa
%E+Mq@kefPOIUbY#)a*E%:o=VjILDSmM`l"mX<C%hUYI,h->HPSQTDrT@9PM]0^e&?Y>U\S\0g+mJ[7s`.Z-aCbHIJn!DgGKS:3pS
%'XOmiDu?7S&3&@fL&q]05ol#8i-J;mkpVu/SR-gB>QEADO<27XC8OpI1q4$sM__']Yp340PnKW/&.6fIKSl`WKj\UARiWJ)IVfEA
%@+j(I%g[;b'3aqj.%63NPEglGq"r7s=GOALDon\[ArReMdq#o9.uMHX`$SWCbNhSq&*%@JhW^<\jBGOMf8)o=j(TF:djsY(FJWq_
%6uWrh6)5.,l4[d;FusB)YAe=:`@X*H-H%K<2lDAeN[:N`+We!PX21-Gqjh1`=Z@eT..qS,hDkmkMUd,'M-O&6Zm^K<*cZn?51)dI
%0=BN%8toNh%>eUm/l(g*p;r:n2\$=jONP#rTiqc6BGtldJIC39SM(r,QlB3cDK%i^G!-TB2A<%,Q(NORb0k7"r,gb1&'KIM6t^J'
%:Xaq7_b:WE6b-0YKn9P*)c.`\%B/#ed=cgA4oKibgM<P@kp6#(Llkq5:T_$._?/a[A#=W=/(6i],D$b3_i&Cn5MRie.Xk2CUBA=9
%oeE'_OQMo`\W*2G#];X6VmqdTEN"H`Y_[>7R=hPE(ArIY).rsa&7q@9/7Sg^gKC`bFP@!<DiGILU098doun$@mq^,V>UFp#6>2[:
%i6jIC/,59"T]TYbT]#35@Z'dNj6g2g_\:b.oquLDo^2PaeeM=SCQ\8tZ:eJ!^ObODYOMY?KqG,[!]FK7H8/.34^gXi_Us7Jkr9`.
%9SA7]8sUZ[WTE4g1g*&f+pQ(2.W3O&4P*sJDJf<HU.St#3TRPY$=$f^a:oZ(fml,#M#'DNfNple\$Eiq3NWlKJXhg4VW*I7-o&Q:
%lCg+>A<[oO-^Y>J#RH.%$KjZd1cr]^jDHCWX!NC8Dar]fee*Bc_DoXX-lSCl%c\:<A;%4tJ.`HS3rkP'`^:<_<+6\SIeW:r8PDTj
%4Mq^Q#ani@Kkf@_2ts+a\qR8mM+sPb<K\sBa'k!3)%X'd-HL-__EhsZef%Y;4;X5j1ndM0-l`c>(+!?l73Yf0@Afm^J-\tH7HD!p
%b7dL5&+>9X2p65G,&BA'F2j5PQ>s)PJ;U96%b3[5bq8K5To+ubY;&06+M$H.)joubEMdkJS5>i1l9b._Vh-VE-5!UIHAKj7Z:lC;
%nP"aYP,FFR#q_@)JQbM:Q*E:V!4@uf*c0CB(=.86F"LB]Pqdus%d7M%479(]m%AW/!8!])_a7#j=[PjqF*-p`MO#oFI[/^F4uDse
%lKpNh!WIXP)0Z]gj(8'p6Ha[$SVIqbb'l&DIam+fq4'?2PWgEOkeq(e:45YKhBDWgLkrLkUmK"=?KU:!2,VlS\&nH?6[0Ke<Mic_
%ag]bga!8B6B\#*L[RkZjJsD)"'B,:Vr6J`2V6d6abmP$599Xm(Xjc@>,,ur5>FjsX\Xap=+:#C%UJup<?N7Zol*t\9SkoX[ih@f)
%eidZ-SO:gV]b9o#)::"a_E,/u[S&ZoGui$EPOQBBU[XXF`pGKPI^ajCQ*ca0b^TpE3kA*BT&!o+I/o3l,g?&eC,u\t]:rk[6R*e;
%^f?i[eGW.j7LL4$(2qoo:10(t]$VaXb4+<s:_=LCGYi-QgG7MKQ":r)ZhTsQasM&`)P5](+8GqIF-MM<2QfRjYu:+-Np2.Y\4RC7
%9kLuEEIIB3[_ta)i`bEWVAfHF'ij#POsAJY\CMG#$(d*Jj]QJ),XX"\-Gf)jj"fqBO#K*d6+Lj`*$(n5f\[lGY)R:g)!NDNlgQlo
%0e&m4ioX%&]/8b^6tW,1Od:)88I*3bJ:Le&VPA$X7h;CWKCOh*U^n8&E*Y8V-tNuJQ5-O-4Sj^VSt13bSkU?2"n[u)KShOMSZA1*
%jL)cS:cr&6)(G.[O#%"<.B>660tE#(MQf3OSDP6G-CeSh)o[OfA)9Z7J>]L@5I@Xohion!/A9s=8PJ9$FkIW[BuNj:a8J_7_bSL9
%lLHa"O/`'LA,@Q&NmJ>2J/loB#4_['^u0F2m@OIqCTXB440%>HOS=6DOY:t5Vrbla%ZSo:?!&3[/<S1$jBosnZs]a/T7DoZ8gaXR
%s!QSK-eq+Um2om&0Zc8pgHP_NK661CQU(YPUZ-7ap91-6qZf9'f'`PX$Mc]BeGDJh"'VH[bkjV[.VkbAc20^a18g8^`o[/k!-=F6
%H>0-$i&ujkNB)Y.KpjAGR8.-M@r5.P'=1E:C1r<[:%S'S^gUXk6/MQk,&eJK8)F2qcK(O9hYe1[6^p<ALj>?M8<lArE#OW-IL^KY
%0_.<or>b*'KP9cDhG:p1Ue^ft1r7'39\rlKcpa6e)=k-NIUASGB\N>LiYrZ/MtVT*7=2epbejfWq$D)0!Al_1n&aSn8jZDpm.%qp
%84(MDP`SHrH'6:!!S!F[UWmQ5Fu?r&K700i.;Dqs!jgKbNM.Gb^@cPJ*X7^CE87oG'Wo=/GnrlW]/^AM:,K\8!sOOFLXG>H30;.F
%S/5tciOt&-lC`u-TU';+i$N2']TG-.WjIe['*uPuTL5\TX^?n2Z3s#?oR^b+a<Balh,O'@Vunc]r<T9ur3@,mR:i5uEc?\23aZ;B
%\!9XqhFCYKURu]Hb@.P(elA,k@ccfTUd"'iqAoNgh/I!29tiK;N)&=FrFhdS:4ul[a$O/;UhGgCIZ5*;3HlU_4-ssM-7i#F4W1At
%j]6!L&SqNbs40d-i4qLU\0*nddb&e8P.,:Y`bd&3)2HKgDp51JWR7a#"&Xog,$K>r_*k+?WNiHh)_Db%\!rJ2&d[c[?5;b7+,)fX
%-BmahA[2LuK:Id/@p"P(oF*N6h/^L0/>j2d*D#oT1od-7h/_;B(^S4O,1;<6G1JqVIQ>DT'6*ncUC5,EjU$&[F7eE"97B2t6%5O/
%WS&W9p8hj\\%FCN34\u9YaG;iet.>?KeH4^*;>2!d/=*aCaTr)(Uikl"]4r]W2)=H@6gBE*nM`/5#3S*,jLB9/@L9/$Sk2I=q^uU
%TpUEX;=$oq!+0?n2crJ=o-tAF#t^"!D0_,6D7obN1ks.."eK7(*$.7h5QsfF=_^YtPN"R*eAUiGLJelunC$].!F\?-_mt[1@lu0_
%I^ecGb3334'GSOG-$&L%\]I!J:6L[>j5%<dRG0+-[Vi7*KIT@K`=%<oH'($J-M)48J/F`b95M>#%=X1IH+44$:#Vq%P.KnD6fEp4
%cYud[8\R<AR<&>739roCk]sREBrRG<CGr1-&%^2j77daqLt"JpJ5&OJLcU?ji9@2W[5A9`i?-TF*`-L-j8Ro`UeG`%:?#hYoO<?[
%7b@iAP-r]Z/FHNFM%LO4::a-Sh@n1/MoM19)/qp+994Nhi'KOqjhOqH98en]\UU7I.kEVAo8&2*k/dqiQ73a)r@PKi1`c7a%X@^3
%S3>+Xj`\TWdFCOR(Yj%@.S<?=;!ZS?F6=4hK]HBGJ0YTjTFbtAPKOs%%8%q2>D][KWBJ2#)\P;:)'b4d#!Ek8kUDr,#W35<P,56l
%J@aQV1gipDMZDN&OH(!D.LO9\Q"eI2doAhZ10$B\&VuuS2OR2U-Q-SZ:%rfVLAKA\[k<3V:h<V)'Uroi8Mpj`.djNh%nXN-MTPLa
%83C0@CG%CH7]!.u*TO@e[3VJdQUC_kSAbq;[X`h9SZ^##M3AXT+_?WD6iHGoUb,^^RHlCN/]19d9S&!T&WJJ8;R!MU9.p91kUN9(
%fSnO/cJ`T)8g@8K9*Mar8=%W$G@5,1V&>7F^0?(U&l1toOA1euib8m-%!?XhK6Ke;?Gj#XduAA;@n?KoA;:/\W<8)?pHH!EL('@f
%D.9]7'Fg*!#N&E'CTu&R=&qaO;,B7&ZUq?A&&]7b1<nF49`_g^8_6#F.)?`kR`=#/!@g+sF:^I]Hn06BTr[-h^S1H0^*&,R3q9`.
%q6(q08OOH(ahEEY)*hoI#4iS:&h#X*@,0N(kU15<i5)9_4!-pZ162LR+UF(_"]!Mdld8.LYeJ5??E%>S,0,Zhon!"^;09^7cd3i$
%M_l@3,8E:(-#h!6g$QT"]lZ.VEX1BU%UBsS`W3_tg,eo"Y`G+?D%+([d[W0:F"4&sC?]ae:%=3B6l1dVkptJM3TI,QEs(g;JVf1D
%_e"bcUt\/;Qu:8c&3bfSSr/+`ER]V56&HBq^P8I\]h6Imns$;94W6(j"%o?Qo?Z=B2/n!M#7lh_3l>%`<>G%^DL/RR(/i4*b(OZe
%_?)8^gFo)[VhMM)huqAcBh.,=a+u]0*@FQJPtn5lV$AA"R:=IafA'uo,U]9^k&\&ZFqb/3m;tQ9j/NF_Wt9[^rPl7%_#(W`,L7WJ
%$$E+!h;6'8W/*JmU]]Iu3nKqSUS"sQV2R^7p9^Mh7ZR;uIsDYq1)rosBgLnuZ*`?17]tK_+;kf33f^X<PsPbPN2QS/Ym?M9EmLJ!
%Kbcfb2h@_)7N_!jqpVW]GD)/ob^d``@EqiNJeu;$VQFJNh\^DfIi,h9iB=8\a;t6S=_5o74INVdrtH8>KPXPG2o?s-GVe#GYIp:_
%]@U@Vm%Nr'in%pXj;7SC5+>2XQSiJS]UuLWE_]!l5)kY71<TS.?L"DY*npVlJt:oIZ:&)+9md9gnk!:aL7#&>5ac2*3pM2Zmcj?+
%fnAKtPNcVo[AT;=;+tfVB-NYW7C>pibi,W3:0$9>ahMtKaEaOW6KS45)Su0!B-Qj#5NOK&IS9'8jI;Z/UGR*4RuBCh#gt,*E4OtS
%$hn?6aph0!9`f%-+pqo)"OG+4g-=].E8/2"q'2*^pRksb1lXk_kgVn4$^pI*gFECs.pWhH1fQgj:JE>Z/nnFJWc8&3260kV2>,a>
%\eX=t5,&&F&d<-.KbLoY/u*F&]4KIMJMSXM*1KB?iMM=8\D&219L07mUitOo#AHne>cXQDPf+i?DKVY4,f&UM/fRZ<fel>gOsp7)
%?W)t:$959u/Wh<q+bcmAJQl_PTMCUld.\+k&?Ub"BO$A,L^-H`%^ga=:q)-6`2SO?YCuZ6U8>\QYdUB0KsToRCau5;W4@GJ(5A)l
%0lIF+8.:2U/?pt9.,AmH-7%KBH<6r6%18L-\3DA!l!7<AN[8Xt6)Y5+O11KRE;h/\U"$m'3lYeM"%e=8<)gX_*q/DHUlPLWI0p>E
%j<R3I)*#qcdntU<'Xi9,Asr/=7XJ!EI.kg((C!Y\_e\Ib1biXubK&$&$Jj3d$JiikN<'*1G+K%\qEj-Tdoi3L:cH%KK!Y@i3".W-
%R%$DR0<bm,J&084&%6lbLR$fY\E6Vsg\B]9Qoc2f@D)TI5@)[f^f;iY"2YWPR6dKtp()Uqr==@Cq[`m;iu914+crt.g\nIMI!7I%
%X#V/_MHXUeeBE6R#_DJ[/]>h@&43#DTDJs.Ft/:pM$CGLfOj8f-J<XdFSmS%MorQ"<r4G''0NE#:*".(>=tNL3AJ`u"@BpFl"sDo
%le,)1@BgVLit:qkV0>=uZ&eeY9QWn:*qc_""h[e'BpIUefmB)eqlNsK/arZ]P4OOQT0Ua(-.p.0C:&AM)2M2?;o-OV&&N%WO+!LL
%(;W7oY^>[@^Ln%'9]rp0>ZnG"q$5_pH0YEFLl'kf'>t/hp9A.e/m53c,FqNg8[665d%Z-*r!WB/jo5\:`E8at).'02;#<Z$3MiFD
%%Eu7_O)6qOh6/ao@IEjtW[$#3d(`O(&UsY+4Y5XK^S\fg^q^jkktA:SFC*7bKh"UK.N6`dj[[+k#E4tP-$7p8_^Hl2jm\G6--lHL
%KZ-o$5d7Ms0fT>*q9)SF(bK+4`-#c2jWq\A4\nKcK9Hr!;SaKhJ=-UN)TqM!HIJcg_R8h+,@/ea>Zd1mc_kf8']_u72`"E4[AiBt
%MMW`E@'k:je(1?=DI/-CX(>"qS&3[r-@$RZ4/H[1LhJ2$YEFCt03(S!45V.A`&^WX5+brTRuhP\9"b/qGs+ahHI;hSHbUX/lR$cH
%H11SB2,6`-fUl-J2c4$[ZH.#=%?\/<da*/?d7r[^-';ehd`pW:RQ\b\a1X;T?0`biXV7gG1:eo7C\6?fA4P2%WjK'[M.q%\G^$VR
%RC9FWn4kakJ3FP3TT"];9WDr0G7-=#[U%W:d2ueFJL0*Rj>PM<o</TpnCJeW5%c(bMgAK-(f[U.I"lmDOCJLCoYY6b!J+V_#:OU"
%kY7c[@>"C=(bB$_L;Kf5527Y:KrE>)/7i!.\Vk#>e<bOl]>3jE.Z&?Bb10hqH[CARITQ/)=u)\X=5QTYlqV>i,6GJd0K'&CJK_bO
%M_cXjc%UgmnA9f;4'U^do^-^lCT/Jh9W)SjiK[&0B8KFpAJSaF0%tgLUM-jf,rb_m&0'eJE[YQ7]gGSSB%/>V\69Kd8JOiHJ%@0t
%OcI56G'&qI/p=F^fC'7poUAMn:Z8JrS$GeZ"Euu-^s]`/J2+!mjScb<!\$5hYl;%2KfYi%q2?I6Pr(WE`MhsOCjU]&o\/1rj70uH
%Q`mDdTb-Z06B`o6Y+fTfk5B`n(`>-tj&Xj$robotnoZ_L[%[5!!eEnYb;_"/o)tbCWth'LJC,RYJEfV\#VE(($_jWT<MK!tFUL8b
%0)XRp1S7SO-CWkAgI2D0^@\5PE1#VY?ZAR_@G(r+YqBIK5>9]gZob%]K0R2?^SjRaZCO\@K8a7Ag-7NnbbL,o*lc\$CT!L.PNg5S
%d>F("`oE,;@Q[@!TjlD&8/C)#`+8-UVV&J=_Y`\a>e-Mp3IbeHp9Ah>f*k>&[/+0"/)km"o,gu*5A?d63X$c-\n,R#L:b/eI:?-#
%*sDfi0ts+(E!IIIQ!REgaN!$3,lQqV^b=F+[1/<A>W;1,@.J:Z:>:h=p>c_[5r>r5Zh3pY]LI[H;@"e/f+-!3Nssr5gMeAj\^ArQ
%3DW(DK\OF<gLg`g$*fP;7Vb(P^VA]MNPi98h^CVn5k$iMXK`Z@XtS<]e]*$N7[)g"'qAq':I-R`$S#8dSR3'<IA[X<&8^E+R\Zne
%!>%:S1(d8<+lWi[b!,l`WEA,XD[I804RVMiXf?kRW_flLV!l3;bokSdL^4WnSJ)1GD!glk'A1Hl>NJ8jecI$2qTL_EHW^4p@Vr$p
%8?)/-V=iFO=:#BKC\[dWI^FL)g["&BF]K=6";+U:Nf#QoYFg17lKdNVa+J5BgQ_@/lhWmFb=UC4l[n+6$q:2,a1X)RT%DeIs11g!
%iB0TK)Bfh,MaPA)7NZg.O!5`iHMtB@MX)ths6EgW]*lcW?;NCSB^+`sd]^^?(9*jNEA*M*XQ$hZ[t*@Bg;eWTNcG]oT0>7kriN@j
%-Zp(2[dakl-F,u8,:ND`/`6VjBjMkhFt*3P6KG\uiSfn@%)h$"a?`7JT\f54n!@FN`hO9h122,PX'ot^h-VR'_L,YZEDn^-32<]r
%(D14-lEm4-R,2bU%W(X!a1^=.OjP3FO`9+T&Tl,5L!"a+PfI:mAQlq.fAV9F7/@%K#E\n<1&Z6Oq.HnR+6_\rEZaR_)]9g+a9Zp=
%ACU#?QcZ1U"C8<&+ZN+eIsZjEK[Ctk+7f[#7VY6ffYDrfTEJM_R8t%Gh]-0'WWe+'+t1qA&lc?p?RD^#,Nt4(Nt)$;.Mbt&OH<k<
%+Jt](5;oI4+=%,1K!a&sV*c\t>"AoN6:)\8+a(EqAO;h@JdtqYE3%%c(QFdnM?N$;bum,tIV`CV5u;H;"XeN=0Fai('^]^'BFtsD
%!"#[[m4T.&PS&#Y)MJQ0&u,E1TFct`j\Y4-UfN*DZ%;jr6,?#gq=II-R'6nZri%7\'LoF%E!Jg.4l-)e5tr:aLFciIKdRM/SP]Y]
%Jo^i5pMXuSTRLif5=&*S6K<LP$Q^W.c4X(4#R[7o:oFIAW,B)Z9MeYWcljq,bVa<N'Ln"RI(D>TRMkdN"8`CVo(dZDX,d;`rInqg
%L!V"le,^1]\(b7:W$rtTO>RC.3l:/o7UZu;$D)Dqe]t*8)q[ptP_-THD=nL$)^3gB/LZ8f6(ndMTXrtY1-nVP6&."p<>s^k[PJ8a
%85PDi0a'mQ62fHOIY+4LKM&ON*t@"@cuql%Zj7"]J-=Eip6Q)cIfs&_]N2k<%+4E`0o?+1i&Nc8B@MtOCe05/SF/%@.JNRg`[@Pg
%!U&DGWIuS0s"N,I>\/;#H\kL!-5]-H:AUT\oKQn96!FX8pO-fK=!Ofi2%L%!/g,HKckj4L)rfcB1K!u.n^W%uG!A0Zp(F&P[%fPc
%A/ai8U:254'$V(@")#nCDUlKP@j4We9k?^1eN)EWpd,_S]in+?k>:D9iV6e;REP\SRVTj(oF<Lf!aq$8fkChFCF5b/Qj36BCa%_q
%LGW;MQk-J90jl=-H5[-aGI!nL:e@(W8)R5bPL/L?[VZ+Z6L8ef!M?n.-kV;oM;sO\hRf.Ff_F/f1n[N]R8FUf,_8fe6%QQuKc34X
%knXm5BW`9e.!PrQ%@LI.%kj7H.RSgo`)PKbY^u)57De#o$ts@EfaFa=(T9m;&Ao?K=sI&:WC'[d2ZC7sCfRQSS(&#k,T9jI34rO]
%[cU>0k?-<:^rZ!l11jD09TRLIA[a7"`3fK_kqg1fG9CMS>4e:te<EZ<4Ct[*#1]6]HXSbm'Ne_>Rjk7E_8CR;.<lXMhA2k8#DL[u
%e)8YT3Vb)Xp'W;TGtW`]YD=p@$>S/5L)UJ_WX7'lY%jH:>e3?*.0LdH+^1"udC>95+<D[(62\T:$ZC%"71P]>+u;nFQ>[WY>YRcC
%EhT69UKD\0%Ojf(e4Kd.nBA73!p.7H^@Fl_&jC2D,>>)0g4a8E03((%^e,f%=WN3:W$\URpX0l5ZRlW(\J)%jf=3Pj\VRTq:g]p/
%i_S)_o<NIrfT%@F,!sd'EMAR=d3C7d2*i5"D$tQ-^I8d&L*AKK0:$PpRY2Au/JgIj&@Fq$[nN[H&kK&FhD/NJ6e-joB>P8oi%:ca
%kZO>cr^(l\H%u`6)6VC#.)8/1)C6NDLM9JIYd"[49nNmN%2q))c^0Mi:#P/3[:Zp`RsBke7=7T^+;l>KOZ_%DOR*Q$OIdSdiO4HT
%\DJJ<9LFp]VAIFcN6S'TbnK5,=!+02^g0ucf7=Zj_eW<+c;/\X@Ou;J"=YZ?)-/=cT=S+H7ei'SK!A?R\1`N_Ba]2mD6&0u1F8i2
%C#JF*[U"#8e>2**;&"cmWEVfjg1FrkIM(TP%7j$G?6i?(2C*[g#G`c(B=Mg;0CH<j!n1!,L?ZZ4c=:p"0roGt-s_7WM?:=@U:qg?
%n]?_VEY$*584Fk<,9qFj:D@a.$)o#6&rl6$Hp/n>5^GcUnNQ&O>NtoM>Q'2M(8U"^8Mi]<2POAq'guB:^)D]^A6Omq[EZ?Pr?As#
%)N]mh]h"`.Ce48U%nKJ-cg%rq^UW/P$;<dK)C?7n\."A;5b"2O*GlY4MVJQe.`bdfr5Y5)g$ZuSF]5N#Hpq^_BIutE[Eke)71\iK
%REp57e\o6!1lSn\D('e]oP6f;R"ben#=`8t08)s>7SQ"FCbq(9[Y^?\hnjS26]htX[tk]YXb\%iTr8:[)/`[RMu,*3^bfT,@</W+
%bKpsa`0W%p3nb.q6jd%3Bqm!b2+faT'-;Br6(67+5iMN_,>[gC=F4LB]r/l>dfhuG,Go;c"Vli1qpgd1OL6oYfW)0A?LTmNQCT#"
%7Ytgs<40up7/\=L,8uZ&&A:W+BP^65L_!$P&C5=M_I)):OThVUa:6UVAR*4ZAU#bAq9[NEW$lUM_E.AnNalm@:DfTWdUq0`P\8;;
%C?Ia4gKiVd4-\iB*ipa5-g^/5CCHJF^B2P3k`uFoDq&\%!JRF/NLhiF?J:j3WbH&kl5$WFOaoiQa@5)V6URS<Cd;`e=GGQGp>UOZ
%-nl*5C7&6Wi%d-.Krf1Fcr#Or-'5T5g;Z/CH)!B<S.hNEOgGaq55QsJU^9\oiU*Z*:rR:P-#N`2VP@!";FRs+qh<aF]X;E5D0SdX
%Jt&CPM=mfbNChYWZP%D=fT&Kf&jkY'Bqh:EaWi\d/O:r*D$t]1^KD2:KH`6H/f&CD)O+Z$LB*#;*G$(]S.2d3-'0`=+&HLV'+*id
%NJ&FY_O=LuHnJdTqAYN<=34K9#WS(iNUdB0H#'/t05u_RX_<5bS[GmOB+(lL"@E%H5q(_geMd"3oo&U*BL"=>oHJ:LYp%L>4s2^K
%4Mu"DIrW5+'UXOt2,#WgE#BShbHt95Xu6D?Z&mS]ihLXo-'l(>^2-R'*N1sJomsf1K3oqiZ[K?4&H84B\d!*r\*8&Zh&&BsZ[X3,
%[=kX-$-[gdpim^*gd#R<7Vaag"PEN")<e6=JSlR)lDoNbZJ6.Y0%!*Rr\h>7-q'e6Jhe<fn6ZB[mKa/X:s6^Le7W2OqK`_b,.!*2
%N5n6dj\W=]%(n+^7Mi?o@9p[KQ\iR_R`WVHS-OpO5I1L=P0CS=AR]`2B9WZ#GSV8G1J8Q\OK8h7IT.oJoK[g?j&8-JbS6eW=>Vk+
%@f4ToMk*6u.P25k9:q%/jm,H(L!3/TBg>f?nBedFO4jRQ24q?">6YJ7T64W]$p9M_-7A09K[0sTAhe,X6J?64hu1i[23n8$DR?ep
%::/$@`\P?4b?rIp?O&Zo)Ui*QJHSoZh?1hc^4.t,E_A6SEgM$rjcAHTRE<D=3"H;@pcNY/)[_dJbKN`:B4a:*H57*i1CFj*#R\_B
%B&F]'2p+sbL@h=b1aJM>du^NKdl<C%:\`-GC`5(tWg8Lb<M)i(e^p#G.QWcLZ.`i%W$VdfRAWsI'2?(/FYl5hSS046&YUX\`a4T+
%iY$!/pkehuS4?p>1.$(lC$$!rFf:&O&USON20^s;E<$]Y?.Q=l:p/:GJ"!%E3^cMpNoi*s=+[;4ogN81@j-4W$elR5?hm#%dImqc
%8pm^*70>OBPd^2k3&5ErKLZ>aV@.-Cjq[.sbs4YuR]M<M1p><RO9n0g5h6"AXD46X>P4IS;:1KE<mdC*N/%UM22nqJk\*=]'6n#T
%l=Kj%.T&q>ZZU80.NXJ:C6=\OUC&t1(.k\[i'd40;#ppR\e2b3D/.ld%tbtge@LM#?`8)lEh-&9r^Vn#32rB".S2*kO%\;2Q:dG#
%;E(+"hGX'>/o&:+Vt(kl$Y-/D%k;_>CuPpSFd'u"e>7$k:Y#>]W>im43$iOCRlDusXdbp()J?>$NpaH4NP3Yumb]:"j6<nFMq6NJ
%H?=!CB@*PHQaSdF5!:rBCq\.BhcUbCmWm4E2O>ej8:Y26a]`^.rB8\jXnS7S<O6I-D37+8h.#,qlD>[c>KFcA\I8r%n&trOl3kM0
%VO=tp[oj7W$!CpV\QQ^mA>N<KAjT!(MNZ%cX4*F/Mb4V;;-*c4+Z4.A0sHoBcIE(Egck$KSP"Qu,nsE4FL$]0>Ug`1"2\#4&Jn2A
%R^Rn`H`JUh(LHG]dQ"A%@o)L4r\BVb8kSeXTBn41fjE77^AqkAXj$dMRf+Nlqoa-UQhGO\;iJ2a^cdKo>jJJ5=t4P9;>;/+`]FtW
%bsa($I8U6L8d%d9;d[O(/srL#Bi7f-AeJg!;j+H6EMWL^%E#B0Z/CpPLY=W7Q^RDso4=e.V'TJ\9(8^[YOL'CTl*uu4o(gSWqAln
%F@Cf?1*rOH+d;=jDSo3hfgp@s7FT@a[\jOW,@!19f:e^Ue_"Rp$km_'gN7ZJj_MB5D$d$%B_nR@1u?YG;n;[\?79J>9k2YGPaJ,G
%9eU@GjX].r,?[RQ#.9PNNGf[Q2UmEifVfUP<GaO=X+%B'.N5VF.XJFWn^-2XP.!inWsqWpglsUjp"t1'V,$!fJl^$_Hg!s==/0NU
%#]IEn_<,f8a=5r@Q/D>2\V"!9XKM/cEX;<%"RduchHt$1^F]2f''B/ScML80pK(5\X1-qmR_?IpHXFnhrpoRWV<%Nsc<HZ>Z9^L8
%m,k:C@p1X\?Fhu@:?<\ogmNk$dnseEd9-AeQNMr_1To`Wag,S[*?&[@3C377j!bu;UQXW5kh?dc(F=k2Jh0npcNVNEQksn@Y-g3r
%>'b[0p&6H-r>"(6Wk5$gFYR,UhXQKUk[[ZCjaGcm>DYP1VoL[\=kEjWp$IShLK)S2O>keYA?s*._fQrK4W!,up#1Z/hrhp_j^E(^
%%DT*q`S6*hfC[M9o93;UX'L+#9Hn10+24gYB2S78aEY<nq.aJEZjRUJ2WM)KW1XKd[I$9a"k/p@.b#.Oo@tk)qh5*a7MKV-H;[4e
%f:Kh_]M93%<GaO9X+%B#.N4Js.WVkCdE$^k4NSNhFB'LK#`!M5]KVm@jsCcZ^mCp[URnnq=+6SDeHUtOG[K3[*WjK,H[FjK(f);&
%V6)E(e:ngUU_)cU\cdu%*P?9nYQ.Z]*D)TR&NBmNc"V%N[`$g_IaK/sU&j)Z,C7bn4;o0Ma%(MBGQ*D2\8C1Xm^L7=dno+[l,>F'
%A)gDS3?:q/5'6H@.S=s9h&6q-f4+-h!+]/pm5YAMi:;GOeXUi^ZYZMH%o*tX7T[%:XU)LRGMFN4lIMAHW$#'Jp'_<'(t%&$3,9//
%/`CZ$8SC2HEa(ZfEjsTcbTp.$3KmZAqE2.-5\)c\@o?E`gD9MBI^::R$!Cl-g*0i[0E@@Q%1g%=d&KWJ9@E"'WL4$mAoSkZ2<4:Q
%C[7(,;d5F'a1?-IH#6-9HtmG_A6E-N,kfBDA/2(V&8k]a>NlsMbX)E'`J%V\j3-)ZFXVW&Q3?^d[71!^r>&6Q&rP$I[?Z.2aKgt.
%>j1H>;A)Or@9%)5i!-<sF9^5t.,%i;"$r_'9B'&&<,5'Y'8Ep-YpAh77WtjC,f.W#3i-1S3NZJg6pMGBCV:@9EnVEE.(uG1\$i+^
%So2*fC1_&ZW_&_;XlasO=CiF,'.Q),)-4/ibcU`dJuEA(6EB=p!ldT[J9EPL-?O@'<Kc(!V!lj2,gfZIOu/3QQD?6:p*'%*Z6bp*
%D-Ipr88u=87PtWHSi+2Yns(ZG8lAG/e?mH/dOUoYK`XAr$ak6!Q]Y_B:q2$-8`:M(>I]Ug/X!n+'WGMeZ%U<QP+'m:k\.j^BCP$Q
%!7S`7CNpfV2M3n.j,-ra(4iVu@<3JomK5`QO[m!FE[VCeBlJ?r9^[Hc5N.F%\J)m9iU4g+/c\W-F5bAXR)mXXa`78'Ueuk@]oAr@
%"bgH/`_=h^Pn5JibK%I7["JP[r%T.'/=b8/)%2'&iH2RYN&TOOj)-Yk@&#2Gb;%'p)@lfT_l&(]7R=lDI_$ipAV24"_ModFZH.:]
%%PO=3rOs1:=q;-!2eQ7"=uopt.S)oMUWqaI]bQ(@4rLJre-Uh>Z)Rudr]?N=DNf%8F/NTn7UT2Y/gtP?=qD@/*b`>^m]as#^8uTH
%PpZ$iQs#WZprQWdM*^8*hOsj+^7ZsOe0Y).^uhg,&[dabBVle]K);)g@A-M7*!K@$jq^]sUEh*)q9+R,PnX?R28dZjV!F^WnJ(^H
%+:&Yti+5BVE)2Ehjf<^G[TZ.S#-m];pC"#M9`jJ"+8%[8WK#L`n0HkDWtk'HIhW&7NfPgt2J?Q:ULXq$5i^kZ0`]0HBV?`XkV9P*
%ZYd8YTYfnNh#m>rl:&>:<BTDHW@YW49=OOi1n/SP8ZE;mD->CIgHF%>ZB9qIA5<fNaS)@5+Zk\YJ8Df;C=9hj"]0>JW@58"U?u_C
%"UD6ulYo+C5L-2t"p"cS!j$>A[k/RMrF511)R(JB\QENj?s(,`?&2+I+ZgE3nO#^"1+,on3<op)SN@<(!M*$N+S5(!;:L0s*:3JY
%p6-j)'qD].i(uj'qfiR('27_lCZasL1m2pY;QYncg[\:oWe:#rLj%P,phgpm/"ksAqqT#]MV<6ci)"8nH_fXt,?=VKVeV\9!qhHc
%!muN4!muo_!f[Yg"QBN(p^52`e&#DGD34rJTh#WVM^;V_f$T5N-BJ;0UQcZL?#s+adRjrb#rE]cVjJt;ihl4>._4h-BViPULC+3_
%Z)h)/Zm][Ya3Y2Po)]Qu`.ud'_irI$o(Mhi$8*0l)S&/J*o<#6jGiJq,s\aVaZFNq#O\/WAf<Fd.Gi2V%ZY8hTiQ#gWgA1^Zp6I@
%.9+AWZOMm&btQ%Z1lDaZE7;[.gasI[C>6E'Pj@\3&+V#OP\Tq8#2X[8&[-?3bV@U#i\$r+8YW6n;+VnYShS_h$g=&B)e=O)&l>ZY
%(*YYQX6U$+^,AFD!J3)g2c/lm7<DuieCN&q.SAZK0)AhLLFFXa<KcmGFW#0`>0eDe%s>=38H>;3ep0_[iU3o@N#Z`L3_ub,UjMGj
%%>S"$MKJ!SgG-&iknK_0`:pif*ZCu#gWi0AEgcKu'MU<Dlqaul"m9U"4a!dY(2YZ%@a-M^i)rn?`A8hO%8X.D"e8PbE""*/.,;d5
%"c=RE;Lp#LS5]Ip\E"?sY`ind@7M,'\\=5i[[BP"9i$fkP"GnB`-<:k@`gP0eRh4]%RKqK7WaQg+d"<^Zq;>lHP).i_V2f[M-SDB
%b%fRNF\p`7KaI(DjU'Be70JgaAUq;g(n4]XN`abkf!EUKcIUMt<(sSlCn#gma0+/T9,W;9n=oH)lF&^f8Egnd,!cp9Zm?klUeroi
%o-N-R(I%!)>$\24kEKdi<rhNQetu2nJ2j-,QkgS_d%S_/i1jimU$^2L%9K%NX_M$!<k?9*/L7!r-&>fji<0T!AOAb"5abO^bAc4Q
%?JKHh)5<En#\B1+R;WRH7)^A^8n+quLeH.4[O>+f-a]G6&C@LXM^AX..dZKEg(nf.+jDS+Tf*C5J\]tE/!,qLaS*FWTJE$si7+!Q
%Bct&a^hG>C:<UfB&IP0n"[V><Qk97.Br<CbQ+-3^!2X*aX[o+H9S^%:de#d*B?(.>nE+!qC5]B-Q>U\cbX)BVN`jHBfeL[sE5p)F
%"e6R=0W]#XR9Og'"]:DDKiX>*"cPqUDu"\%K8qFg3eI<ko!rM\B%!\>RtjkcXZYZZ*[^;S;`6G;DOQr!GFJ_7PE:H#PFLW>-cJ\=
%;OO\fD74J`?Xs`\%ENi>HBG$m@ma;-YQ5V\`%g&SE#3_&,_8N8;T%R)$(%>S/ZH;-;22"q3HnY<8TO7+C22ndC"5&c\^RQ-T6$o1
%jrrn_X%Z+1SQ<3o\^Thm;sq#]L6Od%VDmU(X%c1.SQ8I[dM>QedOh&[K`jN!$b:N-Q_@jb:tU;88RYcP2RBmX2iFE)+cEIs2iAL`
%/S3A2\^8`YUa@i]B8Fk<U7,2Z$pl1U3\UW@Y0*gl1&)=0\l;J'n_q7Kam.)+UNI"$M[p4YbG9th\WK"Jb/efPU>tK!66S,@MN!9p
%.aq5W#'818cjN00*u=*mn32=&1^-;g5f-=MI]@pcWq-$n'Q/&P@0mAH>p1V[RG:bWQCa][C=:/LUQjhcFCgqp%]RRe90_qGCoiJ\
%d7WU8oSH=3M2s'FA<_Q?;.'/QJK\fj#BM(\aJ<EXJ8KU0!Tc"l@IZZ]dobh#_d+W_6,"i=#AuCt5]B0r'Y6uch=8Jk^lWuD,!jQi
%kmVROB`^=p#TZ?Mib][.;X4%5;*\R:)Qbu25]G1;E6^>cXALnDU]fWoFOhYLXV@a:Z%5E!nPr,+E=&T%Jp,o>E:!l.;VoPCC-kl3
%2[Hm6CECt#Tip57VXm5IW,2T>J\>*m0;ei9U(("35)(CQS)r2<68#%Yl=%LC[f.k69Chf87:7%uX<%oYPbN3il2g76mDB=](7Wt3
%D.S\_$'jVtjAo;F%h5]JR1"90-k'm[7cr]JM]a\[7;/(D,%*5_#F_#4"u2gP$a#RkSnS+0SJX<5<[Z9hj/<XZVD6]EGp@\$oW3n5
%FaDWWof>6OP#.^@2+b,Lc^FuDVk-UT;Q"0HD+dLUdP"@F>A1gOEXTQ?X_o!qcIJH<JC?OqNn$i;GB$gL+pjdj\O[1-TuI_j6d'4B
%Z(\3-8PL?'H[;,58Z[e$,`iU$#H?_blVJ2r*&%`GDpknmn%kbq:/%R0i@KVGUi+YN'I]KPCj7_W@9F-J'f<VMFQSc6e9UcXXc$*k
%Q;ALu8GJCi.#E.2DV_OK2CL]2ZS^,rQ&TBY)kC^$`l'ZM6>>jhRs5#Whn$VE\3Ep^lP5[GZ%hK7Y.UiQ!l?84qj"f&6D@#i=qohQ
%MtA2cS"-e<=IW>]PH5A/+HK<(Uh1K$rXdUm"0cdaJdgBpV($B,CIY93:NJ'L#Am>:8#G>+"G>(c<3m*hTRN:6Co)q`Oc5-g"4AOW
%/HHf";?ZKT88d`/rYRh./^#[Y1"M\F.TR.H,[@R=0H?#aBIgZ(lU,C-1n/_:8K=4O$>bR60sm>2-aY1$\UV>)UZ2b[BJtPG3FYr#
%VXpk:@n`3)Am34MRe*l;COaLQ?Ea;V5C:*;Vu5oSg7RrBf5#lYcX&4&3BqlH2NPE62s"\UBh8'QCO/q)okO$Cq:Y(V0=SnnAF?m0
%9f!++b$.8e=6ViSC.6HbW)irBZDqbRDq/bA77BQZ)lC*#(_&'0l`[hFeV9kHn/RW!jO3n!(N9@ag\jHmB!q8E`1iZb:aUpn-^SP2
%ktjuM^fRuE'%2_qUqg]HE+jLb;6M+H01\)kik$cBBm@l2))?=h7[E?3C7fR=:b>)j@`b@@iI-Wn,W8dGLQ_;":09#Ne1HncANQPO
%8e*h12FSLXnV)bhL1X9i)N+DWOfflMY*)4JQ_M8M*rJc(cG;jR!ME:Yi7Ye8aoI9,A_I9#>1snBDI>ao1-K$hHOGT9S_>hgZRh[7
%<,$Ohq&j+>A8rLJW[N[m5Uk<?jKq?-A=m9>-`<WqH-pG6_S\XK0nqPGZ'VA0K_47:B`fo(>\0dJ7RaWn8e=Y<&sLp@(pK1jQ5%tE
%=hErk8CN].h'[+@l4Y,&?C7Vc%ag.X\H=:1%Eq&:9\bg]'n$UK<b+2sNtjdNP)8u5Q?-3U3.p$4O/lB,>,V1fWk26R6E9HO=kR'9
%V6\1Q\k?VJF*3hldc]mJeZ+_3]@:[rFdK\s<8FCJ+]W`cktNI.W`:3BGH&hqDMg#Ym^4gUR0%2d$anW3Q]Y]D?atV&Ku1*pD<>`d
%DjEd[6P<QkDO)ps=Xs&B1SLQN77U$V1@^g+i;m5Z;L$:8eADk:NG(LPP].R4U@lb9MEW&,E6cUW,07XjfJFZu!_Q%i^?InfTTtKM
%cB2_r5g(SulC\q]7u&2ngGrk6.-eTuiut:OR&]`S?5+J06FQdTn=^LacipJu)O>b],Y3$OfG/=h]417L+YD'Fkf.YI2F`CqV-&:G
%:YW=jQn*u9VJ5"%)'gbURl>E:Ap$G03=*,*iC.uIk8tP>Pc6!Hk2:dkDte8P`q("RQRaK@b5l?k>k!XDFsMb+H[%1k]jDNg@AV5=
%ntkR00k9(aq1sBd[UNr,#PE-EDpL6\b=U!/<`"lY:8O*h-AZ0/N&HS27!+3rD7l?j(uCX6!q#+iC+Y:CCYm;bB-F*BlZ:e)'bp,k
%Pcm#\VP@f`#:!7uo0D$RJMrq'>L/06C_/LuBeuYpYAN9B0Q6(r?Cm%Q%!aY,i"R;9FL7H'.,)+06gI+eAe%q?;?hlgR03.d'9tLp
%jqQ$mFF]uBEseqfLu]^,Y8QWX'c/mT'UIfY9rcLG9_1-lo;gI5<6qaO)cJo7C)P:hr2M&%fCQ&/k?Q?:>0:nL^Ue9^k?%DIlM8se
%Uj@JI\Z&&*[?Tj#Iap2Sg7f=cFGgsU63:I`$b:N,/ORGAF(#/Wb6uLn[[Fg/^I]%Q#t\_D[9:.e@&^GAc%D$',Sb;<8!:"ZI*.aH
%5b3aI1/9i^j#XI8XN/sm?kT45_QL\/W3qGmNL1$Ni07i<MJ.AD,HO=rirD2O[WNr)$?o!oK\/R"EbV<9FX&d^<=,I),uF3?-V,bm
%JrN)h%T@0p,g9/go8gE6O-XlI^iU$@:nmWf2;J,=$"+W=pCl?eh`+Skp?b);nKesBD%NtU7Ist):s.5A/oBG88Q>#g4-YZsm6@6h
%*!fU;3hpS^Es*"ogR^FdVFZ,.Vc_CU!I.KV@e'@F"2f2^0EKMC_Q^%WAo?.;(.:SY(0X.F(,-dJ3/f<*IpkZ6(Kr,aY$LVmWdB[u
%>BT+ka&1ZRj=s_[.@EEN]h@L!h)=f:mPi7dVBO'fVDh,]\ou1f;Va:iVYOs.onon,&-_:?"&XuZ8'o?(<=7^e\op@Z_efd*EPFpT
%R"ceB9J;]N)-^"&RLL9S#\p[<gV<*;KuG8Imf3!aV602%Yih$4e/,*N)NIc&4OAXXB;hlV+EdlC)Yc7E:g9>T4t-.1W(A&QWqYSP
%SHP0u'-ei7H6_dIhNYa:idB/t)/,;Ced[]e)u`XU]j%Cp:-!&:^J2gIlSIOt&:cCcjL@ppF6e4`18OVZEp*"`ILPDm-,J-N.=%Te
%7(sDYfmEb"o)J.UerrB].bZPtTFJn4[!=21g@QLeN^P?=Mi#b!\dV<4_/jq4^=;(i^n#l-PM^gt^28,#f1DK7d&%&j"RgfaD:a$!
%Z9iIIF'gP>T</g?F+n\c`VO"**`#,$>Y\g'[>>hl92^4>SoVcdhI"64H[\>LY&&NOa;Td2XXuPB;jLPqO8)H@23blskgDjWK7bn?
%Ho9&_DX/X>l#n1PcaQf<g7#1/\/C>NpJ?i.J#qU'_q`3':.j3]Dc9QVr_K=a(3%9/gYWAuZFB51gd39RlI)M.6Lbn/\TuK\9kE3C
%]OAg'q3X-BZTOsV`o#E9P9$%]UjOJNY_87f_#Tgl_\0,Giqeti'1:.PS$!cP-=ag[`b`C9lS4&9n?am*U1O@o3L40ta"!/3"CqIk
%Gq=@N50;QLZ4IeRV!`[\T,JN7I"!QoV-gXHW?hRPLF_?YZJo7X^R[kOB$5%SR82adF)piYCbPt#dL".N:gq[GU1l0H;rOb.6n+EQ
%Ws/I6o!G8Kk6L$rR>GEKJN[S4Ja\`^=un1gdKWL:,h$$uCYj)@.Z/RlL/`90ApDJqM[:%'bR8*.ABjI63HHRU7V&Z']$l:43Hr=;
%o(]JQSX72>J*X,"m%[S3?T@M9d1#.G_(`&ZSK+.opqJ:#nNZq>&6-qM"mb&%cFTX*9W4pg+jk9e!jEmuJte44SGe`E]]l>A-lN:V
%(^]LtcMS\;1(lMFC%Wl;pji.b26EXiUsKuI=>R*W^)hAc0);pe+-Nc3V.k)ZrpE9%mlH_36MEmP(Q;,i.aVjkmtogFk2/L&#L]Kt
%'%OI)EmHIGQ=ZsWhhuVHQA42*)Oj]>FU@2kL?)=@\m,nf+s!Rc\VTkI*MOiT%+G*.EkM\qeWTr6Xob;U8#dA)NjShu/fo4?#5\e>
%L@,!E(Ne-obo'&Y[6;=&039T4))NOk<YW+f3Ljq27U]g^O(CI\*RD*.hBYOlq,l/@gK15n(t:LQaV\t0@l]@lAVTee;9GH5>ENF[
%angHGcLBsG3MCrOATSS%'7JdU4/KH#4C]J1+]GI8$-:JTgc>e<"E2)FHlEmD''PJ*^F`Dq#L8R%nYJ)?Z3$M$ih-7_[D[>HcIaWA
%-cNH3N.s_`n2:\1H:X\1Ng+l-e?BC;'-.8p<Kcf@X*>i1deR\iLoK[kVeN`oVl0JSh5C975NOet)r!?O6*):4PYOqCX5HOGo.__P
%USRDh#*-698sIUL8pD\Q\0gCOKQ=s!FZ_$#@@sbY:@<N:1AW'u16#%JN&mg][%=X<.Q`?YNi>g(RDWl%1[tnX-*3(O#.;[]36+C=
%'orYX4YOA1W23iV<,KTO1c&I2_!AEH76M3IMPQK?q<0H]V2Q8B*<[aSFU-^+XRNNP^ReC=s4mD816*esh#e77d6V-718X`^P]8!R
%#I$.qgcm=T4KOt#kWe?@c(B@O#/MdkY6`7K766Z&hm+H^eJ,=IqFPm$TOOig4^+%Z+Y1jjf$>l)pRX=oikZS,.5/A2cX!c$.0b]*
%\u*T1au#=jC\.h&jM\F=poU!:_jhEbR@glYE:KYs/Pk=(Wuf[Ur7:VJ/\\T6L++-#-d)[g@jr.8GoPrFra`S14$'=\-?\>c,P:GN
%[?h(<MM5O"-iE\5h8I29@jV2_i@i-CZ[iJ-`s?8#;c2%qMFV(I\$XC]MO?*,ge)7BIV32*aIU6OP7#9XN3<^W>OSG^:$R=0OKD9!
%5^ZV>3[Fk&mP:WUaH)5cb_+trU^6+4C9E;Y%&:q<&<gQ#V&TikZ>!uCXO7HNTM5qb-0_1c;3R^o._7qq8?>"gfccf[05+S/]acNF
%qG+i*PHBJT_)Y9"2`Nf(@j52OUHBk8rOXhYm*spN4/5B,U=:cKi*Po"=^iS5l^TYm)Q^tqVa0.b0iOEMLfFL'/bkC1'&Ye^1*p&F
%*PeY4%+je>A$AX[1GD4`,?>$c\fQHhknL9/(J_u[BN]u8D\Z[4q5phW`8nD,V'4drMal,/WarqU.!T$&Jg_C]-l!tsD4iBTEi!G<
%7[jGqZ%on+7f6@e2T%Q*-D2QoM#Z,E)bg?r=I#O[F]<pfLpJ2A<=S^W"TML+&0Q`DM/4TZ'%emE2W2.RE(&P`?uRW`V(m[P0%TOL
%<UM$#_C,MU9H_Q_W)*kl1[@j&W.N\/Bh.)\)b/'0'bd+tGm"Uca:[%Rs6mf(qs@aF6bG$^/qIiQ1AGQ$KOfC,L1M58<ege=4u!"a
%gt-25S\Y+QHN^Xh5q,oT9>DS?,XFV-8F]H&8J*n'IprQ&_IMf6&%W3.gS$s\S.[_.5G4H[SUu-^)[JIBIG0\mp`!9fa<>GDb0;-)
%56<j`Ke=5H@p9-<H*hG3L-jQ-Auqc"K2>\Bj$!P;!'VXrHjt\;j$!NA<jteuJ0=:D9V;tb&9kX8`nZ-$a=u.Z:0L4FcPTDb#kI:i
%H<``,pVP+*:r8oR0>&iL4r4:^j%XIk>R7>GWbDk2pS8Zq#h>9C*jK(S8:8C<\J(S81n5!#"Z3?l*hF.g7RD7P,Ya=LD&O,2WM^m7
%dR/8Qd=0?Tk(o$bTr_rI8)[fr0Th%9n3"rBaZ7;G6@*Ao,O#_E.>/HJaCPC5![%e2Kekak:MSf)(/Fb?9dllh,u`_92Up$*rA^=c
%qfl.+_'D?;'ai(F<D^?V5m#)T^&B3Cejk.T+s7PBhEL1:0:74f:"k(Plhu]MrJLbG4X_?DEKKtm#Y"B\*Y@piqY`;,T/(pL;4p&&
%/\4-Nb7kX^@-Rai,31D^Wt,s[o>XQR1C_9plh:1U,i5A>1@=s&AXKsi]c`Vbn+^D(YH[W#fEIW$IR@E6>gUhh5,=*"i"(#.rC%(E
%5Cb@`UMu_jUi!N4TNL4&#Oo&GY"T6VX[Z\4KF5(1-n#iskolb\hL9s:#l4eQ--DG:dkn>/-l0YK!Q:$ts$%V3MGl3Y)PZ1C2q[na
%$,7"qcVtVMk;<-Nr;F.'cg^IC^<E<Ac@$'!XF`MK!b[CVC[]1S\G[W@7hIE#L%ApT5<>uS41@.3b_iSri&FjGmn-`]3pR<n'0*!W
%E7%d:m#lhTO-U9QNon9(!IEhFqT"ZW,7E7QX/gI$]K4^En94_AFnP\-j/_qS\+f"/ifW9JNZ:'!kKS0G]8uh2hX'.QI_GLKbN^SW
%;lrW-]s.%chqR2)f8E-oC`_s3I<aNBh49U65J21>E;0B\HLp13@t0@sqL`/NF$*i[pab<Ii>Y!RgE6G9rYkg1?R7/s3--s2)->\]
%^"ki-/Ierfnr<-QS9skdi6D7Rf\3aepi+So[..Sn?uLC>qs3tArTt-+CH1_S;:FFfqVcWdG7OWD6d/)1L3f;-K%/]XrOpef]<UJ>
%n?8V#J%s[lh1e+2D=;C=^80(V5Ac3A5J"0!iUuujrf-<eRjf@*3'BiU]-+$W"Y0inIP5WAYFZV**ed,\DOkcOGopQ"i?6Eh2'rjN
%GTeY4Ab$I9Rlh)S93#c_H;W2.TufAQH2h!1#Nlt$6LXBOGs8V]s*!"L2Xb#2h'mTB%K;s6ZZl+;'1g8;8n]K_GI#)@`sM\C*m1kd
%YV)b>-j\Hf2AG*rA-,7<oH?0P9F1U2+%71ig:TeBpWp6mr^#tGc&:B8n</n4PAQml%'%01[#frB;?R&S+<:U;4QkeAo3L@J)u5!5
%q9T,eL1A1DLb]^h8,6=1o-P#.W^+'aMQ_rcn,(M\_4et41jT++P6XP&VHKAfSAk).E:!$OG[tJ1!pUkCn?@>g+hG+j=uqGo+qWN`
%c!("oO-U7cXk'2r3j`)JZ!)H%+[<u?g%qIU$Ncj*&@L1`?u<=pitu_%;]ggEIV?(uNRjfNqX3KD5d#i/U\0D%(*>:NU.19mMI:#&
%'KdL/.K.EXqpEj.U"MI`>DHhV4(\kpQ0mIXp\E]W[a^BN72rQJ_:i]3a4m!7%/mm^/KGh"X[BF;BXYWb[M1h(&r1)b4%K)i<im$.
%8)^RMaOF%<kn&[2juA!X0QnpLU?T8&I`n0;iH.DKE7I4D71B!)1pnN\e&`S6OtIj'SV,8.l'($24!]pLfFK=l%o2>e7`CJCP'etV
%d#XJ6%ZU(REW3usB6YOpVA[A,3;]6!ORDen`7$0E48ZXLZ[mLss6/)JLplFW>J`CSaF3's_$M2FkKKSpcm9g%cA.l._gGqtIhJmN
%PE>Af<]_^1/to&k,$M-Of?3cZW/!apGA-j`D;TR*/thJ0rS&@AJ%k:p`90OCS73IifEgOs;"3Ve`tF/_.HuD@/1CjeBgT9MaLIpj
%$Z$(lBcsmeEU-%(Da"Y*hP&'gj!N)3^VLu&Hf$c-P$"=uPA$`ilS&Zk<bVGZ_Ltu(`)g'9Wak\^:ckSV20oiT[AM<Hl4DUZoml/u
%LF2K:j;j]%mi4QLE63?<o"KNfia3]^a=.7QN!VF,W7Y8h'#EWc_*1XKZuNu<SZT#K(L]Wh-82'Pa]"3IU><c]USrr8UN^DD%ZT=h
%N1M%>aIRWjo_uq&bFd+)jWD3kPY`MD;g9JO/7OgQah$@CU$E[o(:&E.QI8'eLp9kU2rosMZs5fJ/P\%^5a8#nAtst=#X[:C-01gs
%5L4`ra@T.-D];4_9H,/rW+d/Z)NFob1ocMHD4%V*Te9"#0D+Xpp^9r%np[;&PZ1t&j<a+.i_aDmQs%!g9J7JXi[JD=K(K-`pIIEJ
%7+N,KJdt&;3id%^>GqblZY:Q@\3F_>D(S6Oa,oGpC8i24Ue*#t5flCmZD'[iEcTRk)WXZ%WmOF0K1U;FR&XR-,O,p3VgKG'Z;?C&
%?H.VN;at*3Lj4SV(2fj1D=_0tA6QAd>"D!$R__65>q>5<j+`sbV9?s$E@pEPX=Oa5rd5KR@Kelm.'GiEW8`uk<!$f%2CgU,?aEna
%7Xb5>;RgkO3(/2*!NKmHL9eA#[!$>f+a95cqpfWmW`pAu'Js2L]l$lW:n/Jc%5Pau<q3S8RM^sp/LlWLaSa$,(:D1-.l/Gk+jHK9
%R4u[#gVR7ODik/HTa2*+MZrH;2X]%JW$@83@7ZDBkGntgB1HP32+VhcNG?2I+KMk_bV5\haBFkpVHGsY>9q<W!"q>e'e+r+"XI3M
%Q&.eWJS^9"ANZ2XB\Gd2g!iCR=2^QK2%<C=MK['p3Z(c%6\?ab68`#`9aej2\!X^["=/ah/Q*-:18IU"$V9e!a(!eCY9lXPJHXKR
%Lh\(6d$H#Wk_39nEVc?5EL;6qenh:RAr`-_&Tc@oOWYXDIAO5AB\YrMk/L-uW`W@XOYR2lHIc7CLC.g#-%d3!d^5<:^nN=uEddY(
%e#GF$dC1MtW1%=IQ!P&<&HP<8&?SJ<d(#/e+<DY*5lAK9$ZBOij$#V^q>i%>#iV^p:_7ks,Fa.Uc3>YubnLNU+>d73"Yh,7<l5(E
%$[-<n+nloMnMP6)disOp/J_K_!)'dtM_uZ;$gULF!7igE:J?)g\h+b9HaP#RHU@gY"KFhkKmM%E*LVUrC8PD@DHcg8]#D<6,TnfU
%C9b_"aH-Gel9SA\Il55JZc5P7[6\T3KgLS\[#Tr!LT9R?UL=-0fhJLZ=%tJl:q)7CL]YM:6nK%56S5'mX%7XB1=jNP6=g5Lg)p\N
%rFp&NTWhQhnY#YXFRV_aPFG+o>"g?Y7;9*V<_Wt:9"11sR0"Xf67\3[)AejkKa#Q!+Dr>+l0?)5VuL@p@o(1Ds5o>JhC`nHj-&uQ
%&Ah)"8-KnMPc]nV"2kC/M.eG[eMK&uFc-BR-pU*de0=^_OWe"\!fV`s7W4NES._qKUYm"DQYjLO*.$oc_qCh2*I=D#H=pn$1n6L0
%5V3AY8uJ&cK`EBQ67\@()&L^?`.P!Jj'GH9.\\r56?r;-("!G)a0dD]:aVuQaNtWKTmHM9:_@3,_.b;<->C@'%A'S9/8WinEu/tW
%"G%sd6:96H!Mbc#AO'KcMW7OtMn$65Xc]_+e'?>T*R@oAVb0&C69-"<g/<]pf!V\b(5A)\0lm^+8.L>U/@%#bA4F/1&9S-(@2k2S
%r^fB2MVn:.OCm6KSZB7&H0D5Fm4kCXm5b]26[&KQ?9+6)ebC=ge'&l_/Rf57Ts+c!MqEYOL9r%B!Eir($I2X5#n;G*"0FopH.8[f
%NJ&i^*GBXF%Wu1F_.kCtURR6=e[0!gkn`m!:k7Y(W5UMB,E)+5pZb(E&doSc.c5C^:eiQYf`Q@%N,;^3h,`7.[]ONOkt&n67'W"2
%SKBFdlf5e>A*8*fUXV26\nYD*YB5[_=X_(Ubf!s[Q>tl?;L!^c%cS:>Mg10VL%@oH=uXY$Jq,G`(<SGef#[sBR`=Jh9f'[`[tqSN
%KHQ%iY9kM0;,EV]T:ejZ.W"-'<%SKgmMd04^c)O5%545:.ajob_%EIdXk*PcOIW[jBlF>l8@sef((/'j;[#o0j$j@(!':GAT)C\!
%;UY!*!0-jV`!+r'8>:3a,uI2]1BLF3-4_"4RV.EaBMKb3iO4HP\DJJ:6pd2B3E#6AKV0L&?7M32XB$7<o&SToB#Ed>Hth.I%Y=4A
%c5L$i9%qXPh[g-MZ"Co:l`^_"+03mcF*.uB/ZRl_8B?1oe=m!fBOn'/#iYn849C;/P0p]ie6cgnm8q0eJMe]DW*4%AC;nQ.>8dL$
%YOZ#i!4=B5.\1%oQLA<4'O%c[b.,STe"[4H74<A;Y46CF&l9@qHo)6s\Ys_XFjiG_e1DRD<3I(>1/VDo^2X.$ePX=*HNC'>.r-b>
%6R?ORGhZ1aXX2G>$]e$dD+T7`#3etMGUA,X8*2WNDQ=<^E7;\-dOilY7)JtBn*53F\W,pe!W@e%1#N3(TUXa_]-$-q!!*9q&B'C^
%JrLs7!TmR:,U^[J%uXth3lU?GYI&Yint6H.\2rU`X,=mFr%8@(d[&mQ/>F%>-Vudd^O/oO/W3%Ri%&j[#?PH-a?,G,HK'Z73$*/:
%a>30)LCo<7CE@(J!mYlZr$j]V[f36OJ&rUUMSk7FU/UWp-,(d2N5SW[Op2U,VCVl[fgPp25+l:?GB$KZ+c\]cQIp967h'"c'#nHX
%60q27BNb.XMp(#]/o(A@Z0Y[nJXXE^[:Rnc39]n;8Cm7RF1n#S0Z[4&R-P%s[lc3F$bENe(ik9uAgkR\7)3@U2ou5/US#a)P44&0
%,puOfjoeSI_NrE?#U^EbDidn!.>P1p<'#?NUKkA&P_X24;I:FdQ'Kf5H2PG\)=QYF,O:5UZQPP3C@uW]R',4LAf#l'm__<M@kRn-
%*oaji1lZ9AP2g--p0jLid(&H&E(0?6`*mCW1WoE*#aliM=8+\uMZq@>go)$2$et0IG"(A2&khUZ.Tf?4ZIJ#I(W?XTJ7AoRi_VDV
%E[]%Ng\^JcOYj.D(j2)HZdUf@Lhe3dFWWedY,K=&M</,#%=0P[%ccK),i/>[o0BB)l'D4oK-+XkI\+RY=0naLj&`B1hjt$iP?d3h
%*>r7eM-@pXNhBf%L-)Q:KoLrN&2ObT*)0WI?*fKbgq:Ec_E>hLpWKj9@rIX7Q$jY@aM#Xkd@!*4]Zqa/6qIM<q+7\AC(<&)ls+3h
%c!\-2-g!T*HAKY*rXsHJ.3TnYs'$=3UnDu?6_&jrQ?<&Y94$'DOb(.S2hs-=@ndb$$ohKhpjpAH+%QQV"DLN&99rGBP8C/jaMu48
%f!0$gVp@>)DNn9h)H8,KM`tHTD'dkR=@UJEHEtbI'=b":bJ^])9`o8<e!Ab4/>Ea#I4Y"58Q!LXlOY>IefWL`5aKi0b'.n:fiKRh
%\j8?ui\XHkA@J5d[Z3IHd!_E,\WZG-8L:R(#1c&8/@?cA7dWrGTGWecN4=mh?$V`K=iZZ8Ui"BBn,\^mBm[SCG.GP2+%F%'Xhts>
%9:E1\-p-#Fk=..2\\ZKBMNI^#kRf!hnf`%_OpK2#luj:;H3N^/R262gol0tW6+0G[30#g!?.)!-Xsj35@`].X!4dZ&,r^ok']ZJL
%OjgPA*:bScK5n2%cum#@:??d6IU%';1?f'glIMco@hTZ#RE)#3.r#PMZ0Y^oJPs4F]%gh.)FZZs_)Ccm6D;B>hu;lHT?ZhRo3nVJ
%,['j[C*IOeE\,ndlCpmFQWMY:Q53i^lRGeU%T=@p+=k85AQ*=mQ#heBV2_SECV0:nEkc=O_A%;OlZlZ<k!c8WDA!#a2@\EO_@^(^
%Q<%8=c-Ca..CPRn##mJ^VUVn@n"HWcT&nU,#U<N/0t09T,[m!;?\uSQTb4uKITI3_/aHY?O_eSaS)o]qiYLXeiDRD89=mu*P>TM2
%7^(`PhNB%)iOr\RO,]57O"E(HUU^f"@i2=-1AIn;&&15ENCPS0cYFLN4DMF14tO3lQGbfJ*ZFBpE@=g<47)8i5=SYim80scrfLF^
%5hD>mp!:/qLfb^mjSWL0I!*L409:GL6'"7mN8#S+Bo+-/92:X9VbH^*pLEVe%VRa.,f<mAXYf.DU#q^1j/!uKNcb;@M:'AnS3!Io
%%,*?kp2[^PXX*)k`o)bRG[p*ZRAXokKe1blnDuE/A)Q=O?Xo2WbNaVtbLOFif0KX6:>J+0nqQDeb<&"J;SI.7an`rYIa0li\oPN)
%Z\rm\Rh%L9\G==5Kl<Me["Hg.9r@dDNWPnu0hg0VLR6>#[cVslfc#2RP;Ur'R'!ng_edRT0]jf:(bhlXATe"4jm$*ml_*i!Vlie2
%]Oa-.F4"B,.3)#2LP'<V9juarZ^GC[`9%45#P4<5$h$-eBF1R=)U7N)#4AAE%V+ITQ-$V9L8O/BPAQ`12$K;Q>Z5&+MjjbuAZdJd
%W90Pcb#20*<&VuX?oOI]lnTEthSm@+CC)OYNb.O&V3?e%9rA"m6(PGd0kJ8,[d&6J7G2#pQ<\2DE%=1VDD8DTqjI7FqrI,m%^&>H
%hNn#2=jOq?<X$/O.*Dh\WhB*GXpTJ>lDgNO\ZQ;9k0[0phit]uk0*$^S!Vm]jLbi2I-:Bk0(h69cp^7H/1BeP&n8C#<<:^7d+(!"
%luGf,+#(Bs^Kaq:f#^?B3$$@X?/++B,[@UKcmG++ioMtb>WOGjGB[6S1uBa5'`iIq((ZpZZ-M92_TGcOR8e'2.);Na\oQ;f>o[;8
%"-,iE`dM!\\9kbIanIj[Jq-p((D!$I]$0*'J>1=t&BheA#-Ji:X_TXnVQG2,N!0+%kjBW_p\iLJ^$%[:]"R;/#?tsre?KJGbNbCa
%Q`Jkfrq"Za!o;I$pC*V=YeB88?7=!(0,<b9?Dub0]V)>&Gel!B*:j19RJG$kKl<Me["Hi$D[:]4Fmms#ei0#1$W,9"lr>H2aF+o4
%pqX<+?<8/$i7`BVX3S"im@+R#[;WJgf=ooi\G"/g`3jM9WRnje,d)Q:jgb$/C?!r+%(alpDt]cf,j1T>k.KC!:<nK\'^93?FUGIF
%qN(H.9>[/L'7Qk%XbB;?CJ-DgGPttHmASR=rK<UU[Gu51>C#R!.SJ=N=s!?O]9UD`fX3iMeun,>A*dA?qp;M-q6G;uccO/64K!hg
%Uh"=^kL/%;l^?$'<gF_>;Q3`]!YiMI/4DW<7f@q/5[B0c`b!E*/CtelF[2/<eFk!tq?I0OGu2/FaO4!ObZQnIj@IIO3f\ttqAeF@
%OSa"TJ<9ZLkQ)k$4i/?kp[,hK.UTWV^%,(oR$Q>hO*!Bnp%4T[9+Qo*+.t0s$W?e9?lJNi"3U0n`pD^ROnjOB?#Z,\$I:c<BEcrE
%Fr1Hc]Vj+/iU_lCDW*B]fe%U'f5M,Toee8CIEghnB/:Pfd.(e"lP+SO^i^b^al#3!*\QqnooT>0=5QC73b5=lZbH:]K""IHAFP%5
%=m%T^FoI()b^-->1Si^DCheE,ju&dAZLG'?]cG*[%hq%8>;+U=5ag`n@G1oQjq?Ck(afL2Go8g3<g6m(;VCH7!B3kAe%,t$T_M1J
%4q@0g60$`G:mf>,9NokH[S.>mQ!eX-h!c8t$Zddl[-sd(8aZlHd5JO](rf@8Q$"^3>j#DV^gU^KEgW52h"9_6%MSH%.guAtR+t2a
%N_/k`2;D6Q,^L!UJ'.E/[W<DUG<<:m._$SNTWB*_5V<R_TRn-65[?=MdC\>^'=\G<][lPsqiZ9KhFlB<q-F0:^$h39MuMQcI1sEn
%!+h_9+P-?(._'YP\o.;j%<DUd\A/Pgi%?U.4,ejYn2q)k_p>YKkMRKuFq3A6ER)Dl/C$7VQCVMpff@E0I:LF*Dt)J:o+#(RESeM^
%-GHRqGiIiMj!\4=I7V>XX,jE.e+A&(mfo#!/q[F&/lZd!!HgDsbqtH0Es).MEuD*5*5k/SOtm2I2uNkY:V8M@Ve$^b#eJVl=ajU_
%+2&ZF?E(#q00h-c/YI]bKEQQdE#<lCX-n6<8u/@Ah)o@c)'amAZMT)0%@Uhs4Uq`a0df`64K*cbV`;,(60C@j8Z]"O*/JaOKaM]A
%UtWD*&.EXO+?4p6"oRJ>_R1leFr1Ne49NW6&\MAg0#S]Altj=h`pJA%dp,Im@ElpD\(KI;K>-(%Q6PsL2n*Io&&Gg<%@#q-&BLX_
%Z.aJC"a]_p$nUE2)V@g0@:%rVn0cC![Nb3WRo<0+G]Umg95r0mP[k"bVRl=V[.^mL%1$0ElB.8cDd@->R(2UJ=DPLlEKdVl[@k1@
%Hs(L86OkePZ@q1U8"&[t^!:0L[TqJYp0e"PLO*R-Za;T2%T/L14-Y*j=N=>M[!R'tUS+kD<#hY_iV(@XO*V^8PXof'1K+1g.8U>_
%WR#]7l$`n-LUMb(nXO]OMAGBWH7hM,b0dm_9R0$)IoW?eLrgg".$lNU'l_mn*`X_:D-Irf3)iqDhUOtT8VU(_b:QY_9_9[De=8&T
%da&FDp<hl537LuDRVbeWULb@bLY"ql[c;gqWdrideGcR'eo()Fa6KI?CBt`r>?>V0-<D*jcOid%gBLVA;KXWmX,D#8Ab";.[-is@
%qR3r:o!Cr$K.Mk?M;r*ImnTt82n&3K"4sZXO%d/CH\n1j57K53j?V5o;$3nDj>'>3C79iN2T:B$f0/ee*+jJd6ddMb[n'--g9hHO
%ouU,TYn#b/\M`7djYV(=,qc+p8d!FBa?4A+J8TDc.s5qc+,[W8H]0ul5[A4l<O;"b^?Uk=0.kT(P,eQ)+!Kf^IL3Hrjl>SQcD'H)
%9W^NZ3d0=mMm@@JVj,B;X3@ZG?OW1.;@8c!AXAjp/3cPaS<HoMd<^s:5")fagQ;]L^?h3J3r#?dTr`s,o(,'1AghF,8ute\:@']-
%C)lHaQ!8R;Gd!X2X@=X9gpB44=cFh>ffOBrb0&Q+E9d`lee3)tM@q@..&e@cK'.;"r>6h<l5@41?;EOM8W<fm\oOdA4U?[\L9_`Z
%mks1H.''VLb7`j6S>!%>]adasGm%eqS!o6t6.$bCQ2so'lZM\dTQ&LhXG(8ch'tNTl_?(41"=^Wfn3On7%<=h/L6gpRS%PPap5VX
%SWUaHHn07W2'UB)_0EtCoi!$fd*E<HVUJQn22Y]\]#n<6J27jE_D+XqcAW0E7Y[OO7L#8Hb?Kn.8]f?)9Dt9CJ3Psb<\C_mjcLU6
%WK[fa)&R6%'1;[C;DOJV`]fYj@*Q*JA=?iHYGI_N04C>2pF/Knnh91pg<iB%]/>fZhoJfN19[+!A+X<DPO4s%m?YV4e+Wa)oN0:\
%E^MTG@e62nfnk/^S_Kt\b>c39r2.&O.%AM)d86]`orc]Rbjl[KVnOF[o[Vt_Nr%h9_.ajf%k*X38N918l8u!6l)7CdUskr-OS)[L
%I<1L&X$>j"?H^%TOdEU(B43rB]#]firDp,g]Vi>MYD[V1X<RJlg)VGoeq^_'6CFZ??'q&A-sSp>m82IbWs?(EED&4VHeC:,_b:Q*
%UCm0Th'TTl@QT"Q(!W1VLS4T0e:kbVH&S1u;IZdBqI@mRQ"isr5"=(\[j0M]55$U&g+HUC5Y6rJTXs@@etR1J-#sE;%sbDV_Lo:a
%CS2rB9K@ApNglheO@ecM#1>gjJ`a:c1U"B4Ou>>;:]`e^&oEepEs[3L0q;/NM=Rb.mW3&4*=_)o1@LXkl*1I(Pb?nu5fkiMfaEIr
%_[L,6P.&jKKMm^?9&Y8<Dfb%/*Xu(0q<[R!nMfocs0'u9lR%Zj8fmdbXaPFoQe]`f-\pCq8J^#0'C!d5<Pj&t:>]VsYs&5rg(:?I
%fHnj$GDr7T7`/1BV%!1")3AfrZ@oDFb,B<HWr_VP!kI'qZs>;WEaC68[a2O<FIDGYnhCIXf0d(Sm>pFB\Y#L(oNkSF41PLi['aCq
%o_W.J"B:(R-t?Z4+`2M-4&X7$O"^ij`Dedsi7kgr2-5JZBop0Q8_uI6Z?L>&k8(PCS]@[$\/rf+ijj^a]Q>>:N.mntooeJ:L2Me-
%&C*2Q[eCX5U<3<5e/r&dj]t)O`6R@HfhZ-Q!O>m!qB)YY0Celc)fMjMg5Y3%mCMuVg@Ff&IB-=EM8j,?PQ7_^*+?s75c[Hs27^aU
%ad!m-[3&10knhVI\^ji(qn"3GDKX]e@W[q=/\Iu_6_KB&Ed]e1(iA"f4\s0Ha3Pj&\t((EguDZ6a(PnPG]QZ`+V4G!-]t-.WlZL.
%[E53;oo6+A0["F3T-0>AT5rbrbAn(a+'f,oHL4%XCOCq9ATEGM[)P3t8V1d8f7<I+4oViP!a4fO,jWMK&7kl_)nfi@49VX+%sIjT
%e=rh!>md(OrP`8GKCO7%Trg]]WW"^(_]j0'/A&k\jo4O;Y4Pa*$tSVi7qVlqfSF=?8Igche!jn_Ytt%\>WIW`2\Kkh"Za1q;0gSQ
%pCn(56`bDH;(_tC4oW+t7=?./#`&*6k#t]3CV-2NaG$EWII!7nB)+pH:c=`)P:"lTe@>4b?g?"aCHC2Aj$*QE<3DYEk5&CV3u!ih
%mCO]k&0cu0<(K_2;N3+=bXM3MAJA/e`LQ!GkMEo_OuK1C/eE,n2e6+VPtgc]AbpOdB-X,XYbG?1i;+@g'.ZSklMGUt_3X/5pGaRJ
%D\ts!(]aQ^d&O95[<HYh]fgfCdTA'.GDtVrafGetJj'KC"rH$aOf#'2A1\b^85"0d+s0#=_-@n+mY>!SlaE%L"e<J^1fWSk>C/sj
%/Xgu_\O/1GDo]Md:>9gQ4Eo*c`FgbaXd+!^GSX"LF_BG$He/+D+_/'E[m4^1^\ZLD?[VCAQ[f#2]D#4s_mag-Z#Qf@n$="]f_Qgo
%8T"_i\!4s9e1GI7STgBM>WTH^Dc(pf:N!eG;2[>=S])1><j4teCi*8YGkaHSXm['%`Rt&u4Ug%kDk<8jNKmCY(Kj-3r;`I;<'i`e
%+pV:!p%=k]+4\sb'&mqhCL4D1,/e\NZ7$+n^<;f7qG&5)pb(1fdLb?KS>^<,.)=pMnQ`D:E.m\&V0[r:d49%8fdt#%I+cqgB2F7S
%ff3od8,.XHhs5DFM8*p!r2(&Y01!UHe;Y\X:->`75(pEkEbQDr.E(OD`3!WpTFdHRb:2jHN#/k"2o`?i,oQ;<"F4_#T%oWaI$\j'
%ZjoC9,?H,qq7UJae_M5+6brG[1`q)p>PL"tWL[B3>@Is,(j;&uXYSU.nCGBtO],Ej$<"H8qs>T*a;m%Z1!qZ.%m)103B'Lp?u1l7
%Oo/<JUC>L?NK/DF'^jn]JU9Q=Btpc';!]_T86;QY"5"@&%:HXQnmVFZ[kI_9gIHqud_iKej#s3irra9-TE"et?f1kTh7+I(kBE)<
%kRYQA=*";FFo;T$?ruS7^Ad9VrTsi-.fE0Ik9!XWnmd-Em8_#,cKW)U9;tZXVh[>d+0q_"D7MfBpX-F6IY]YoCOGXcfMI`nSh/A"
%<5$@YSop^k7:+^U9NONG.l1*B+\'u^RAp:>8g,9u$T4<OTeKDfR0q%9Jpo5<>h>8&"(A26aAblA[gVb8qrkMQW_]XDDQ9"XMVmEX
%kK25W@qrOu\rMF..+?=e?tq^*RN,PRX4rgW<"i_7%?Qtr+IEl6_7!0mR2QDg;p/)CWuG"SQ,;SdeNfM$!A[Ref^49<fKT0!AEoAX
%T:;fqL=pWErTU8,QW0X<TN\LA0&rU.[\Xd1=)t?+AP[#*N2cn6<<EAh69aTKC+rXT@A`>'5Jh<Qh(SFd!m(\a<"4qgR_WeWjMU]=
%D^SPW<;kTO]slU0:9+:]<%ZF,a1QYsQJJJ8`X5Xe!S[]gTW9VV=r&/Z1BOR7OJpkuV,EM\FDGV&<L^ineHH@c?MV)$@cbJ%C.!fW
%%4%rcYhK?WY^Q/u8_#1g5;cH=+E&l]5G+NHrK^D7gSMQ6psMof`&/"!l2iSZi_ahmB$eZ3;]6fKeGu#;!J3oe+*7lJR&Zi6;tYIi
%d__boa\`Ts*`X/r<"4qgR_WeWjMU]=D^SPW<;kTO/ZGtOF&`,&W&e;&4H6-$,k(AdUM;e,'ATNIp1uQTBnR='"(\D986"=)K5R@e
%;`,8$Wm6s]m6:r@6?8i9+AC;cRApS[G!S<.+8p@\oh!][:"?(APlI:RrQ2!a^LXfV=K-VYUj?su;7.ZXgYJfSPK]&)<)&0G2*e$R
%J=of]#Mh]UVJ7MQ<%W;;h$0Yt@9Oks2h\-`5b_utRp@?_[Z>l!WVWFUVl"3#Hn?e9:TFC^<5""/i\h0Og5VeP;1b3>D@tDuL1%&V
%%Wh)sB/C`=C'0<l%0Vk]51ioD+JLc:RAf4n3c@7JV(<;:s.)`m6VPmX\iGi[P=KP^"FUpTEtbq91"ssYoVWqtos21]_Z#Mf<j,[e
%L0irC"@lO6Pqb<l,K(E;+>Yi>O=91BAt]E-1_aPZQ8``*a6rK'`8nqd5a\DL1/S_;m=K`<55OZBlBA6?S#T,bfMac/qNFd!@2cUD
%=K,IV6OsRSRj@^^**Z!4^Ym,[KG[ViA>TP:-A?iOX_P[?%<\);o-LRhnk\jg?^u3AR&1U.Q8Yh6"PGJUo[la`-V6N]8]u,-n.ngu
%Sg=7aP2><R0IGjQdZSJqNoTBkP&ka*ktNor\FDC!`mOjTV#c0<+WjYk22J,(@A<!lhSS8`m="8fe0*TZib8LOW#9D`6+gBMkI$MP
%:SN;QU>G/CTBBnadh-_a7sn?5eFGr](-GA/X?P0+CaF"h7R"Z.#^G&gib8K\UlZ+m<@sT8Te=f9\86&hESd%?4N^"='k!>.N(Ma-
%DA$Ktm*T;j8Y7:,ga"JlB]D+ArcBD+jdiG\1qg*`VUI5f0)W,4NCVG$am70+f,-6.#08>)OEe.U#Lu-MVJ.I&1bFcF-N7^R<U+69
%#kKl<->EUo=XkJYO'Xo)qBY@h->GP/)pZk'V^(J3Lb+L[l#b%*4=o]P>$g)kh/HOQAo)?E9o'B=5UL5r?rG&NgHl>rC+.:o]ua3]
%DEPU<_QqK=*saY[5\=a4]3UL/gIK#L<..[;F&R5G(&:Red@F88)QKs.leUu:V<Yb`kWGBWP=K/mg!S>ng%KR_PQo())B_s95Yroj
%K5RB;;)Ke=<%VM;<GMWDRWh?B'4OX0TJ<hVX'$d`>CQ%KPGh9OIVPV6lO2_8R/58D[:C#.IS=&=/T$t!;[\uP`b[M>ei^-0BS7d0
%'50L&+Ga"9K57.`dkoQcRU.UTMMZhpe<FPr*XM?o5iub^]314+dmpU47"#^@Et`]@.'fC3rQ0jV?D?0tHthgpf!M<*W7RWU`oq0N
%9Iml_mgruDJBZLC6)BYR\qM%rePMX43aV@mB)ZY[ltLN.C*64#!1BhnlukZYC`iV!;Y<W3cV;q]P,9cX<IZ3m*j`m0Hc[899COrK
%)Kbk81;5TdEjj'(:\,2>PU2adl8-/u+^NNfI)Zs'=%V5c'r4Ka'U5[gLVE9SG4bJGAUU8EC[)\8KHX44jaD^:2ikg@X/#L+HgYG4
%PI[<S\_f%*Me(6CP3hLFmdJn=7.q7fC/)-'<37$@Pbp9M$Se&89\"k1<AW91e1(IMRMnlMVCtlUAn@[.C[)\8KHX1"JP=UK_Eb/s
%q7q@FV!=/DT:;k<.dP:"e?<@sc!E_1XiXV"WAPoYZBXKf+X/^uRG(JHC'HbV=p:R&;hLLloOXoNX=X!b:#/.$0Ee72OI=g!(he%K
%+*c,&9RS\hF#3KYAUQS<qK5c>fh7.$2;&=6[:WrHRaR]XNl_uEW]$*?R_d:D<WT_]e6o:7I@7)m.gu;\;n#RL%"YDfA?%O%#$N%l
%#MsML<M*7hgf45a=^Oq(IMGj-H\kTWP-#R$,9ojZ.HG;"-6n>FRS]bo#<!?o$C#<t%AIUcQ`(g*=m5%;\qMVB8?&%CU2!#'T[hG;
%i&u9^oh!\0:"=0Kp#W"7f28qf0-R@HA1L'uRZU$Q8oqEPP8V;<D(&7=K:PH5!cY9@_,P:J10&*j(AbS=DP9Z>!`^2\<,F#lZoXWd
%]]W%i5,nChWVXlF^781$3i^ct,t-:PCk\fk1U8E'C!IK'14tso%4/#d&1jgrJ87jgVJ=SHWEQX6d*FRl$WY%TW7jM6C-uF&e^8d&
%4a0fs8_)-]eSgcHjeV1n;71!h+fa+(.n%pVO[WtVF1)XD)8oKk-rDjSSOKX^E36+U<,MIE<?j#Pr>_e@X:bae<>.o&9rJt$FYk1b
%c^e$`;Y<sep"O&+3N;jT</j!e7b*rE`L%P]=ZT2!B8[uiKnu]725YP)-W-oE<!t:6W(C2?C<b$j^MX?_W!3>hdL%]t.gEUZFu.tO
%lQk\XTV%^Hh^n*:8^OXcB['jM"KfdHLnQ[NMpdjPC`t,]L`+oC@V>s-Ip*$6=Asi$g@Ss6euUFpF%tIWPqW?02NWdL:`*kg1`ptg
%SQ(#8olF()Rq7".WVUa:XZ9(2WdD/h@VX0/U+E-$>DU?/@\u&JR$tidU/h;n(0WChS$l#?R[JkYh6XRe'nh+7JMBe"KP`'NRI>QI
%P4V>ocV;i+QM'>bkuX!(ns9nZCU+[aC!F_n1o33:Lrg'7Q8Xt0R__am<WRHre0(2,I>OgY/W9QGWEZG6#:WF^8461Ng1ODb%h*nK
%M>AL_V^C]<bPH5lp$7E;F-meACUOu<Bk1aOQI;9T`+&u`:D7J*mD.#@<WSR'=ti[?[S5/=R>$+GZaWaGKRfnM0hDJ#D'm#cmsTAB
%oL[KW:"!sGp#RI`f9*H&0-QM0A1PUHRZU$Q8oqEPP8V:iD()YGK:l&C!'G%30MS%N9[c-V$iO7-[nn(RJYrrfU,E_ZTo.t5n$eLZ
%:SN;UU40GM0.0W3Ni4g^#naQl>9T`lN%@S"R^7^(bTJ6I6]%`Zlm-<\J8.df->M"rM-@6kd*FRl$WY%TR+af;C-uF&e^8d&4a0fs
%8_)-]eSgcHjeV1n:poC<+fa+(.n%pVO[WtVF1+%T;i%F,:nh\/4,[8Gi*''sW1*B:W^^/-J<mbMFa0i@21rouN->)s$Ltpq\!*ad
%U4-jOI_2[7-W.X=W&9&2Lt^:ZJ>eTn79N6([LeK;A3A*bGhRe@6QmO>CJ$9TS$l#>R[&SUY,PX(%YhdJ"u8sn$N$objoY"\PGh9O
%IVtm/Z`Gf-;88-i21#WA[3f*$U=P8S8lM1bKp^(,Anj\iW>Y%RC))879b!t7e!I%;Za.s(20B:,_@W["5c/9`@A)/uI,I/3;Y<W3
%cV;r.QM'@8lISiiB71XQ^eF2\s6oOYnppa@5,RG&*9Qlg:8t)#;!:mXb\>=c?tnMqAX>Ug:h]Cnmm$^&P2qV88oAZr,d"D##n.8I
%+ldinG:d4Xjn5J>!6"?0LJk=@-)\qVdSbh17FT,K@?Ee&^/(H&\h3N:"j=/iE;a8riAW\qn#Lb[W7=qakn3,Y4Z))t%s)L!_-:i!
%3iAju4P/2YS?!'`.E[h1/Wu6)&+V\qhChe7nXX@(bomYjC\d@<g"4FOX2KBg_o?7j+g'g3a'X=@'A]-+L9JS8H-V'$KZZG-0iD7^
%(#QksG!qWuVKR#JVTV0R'Pg>M-+MI=/<<sKFYE@G/<98+ja'F^*HpnkCNJP"n"WpoZ`Q6(m#jRsDH7X1lpG+_8>3[C)6ed(N1G>L
%n\b7_I75e"1b.O_S0)-6b9PP%X:*%r#IZJ]^f[JmE>gk\J\@mQ(rie$3#";HEph<Y;i/bE>DLL*!\pOm,tSc8J#D%VpUkk%.cXbZ
%Z._`.!.22=gEr&0h0)@E%\9cpZorH%>N[2NB.#:-InW4j]D%gTl-@*MNGrOWI;casWdGpRs82S0^]!2B>i5S=Qf%`3QNd0[5J@*7
%QiHX$qu8/'f[#$?LMu)Mc^4+Ws7).WJ+rrS0E8Z^Vg!Xck0%\Xqtcd8hgPBo?iR;Png"(jk<K"65Q9JO5Porp,XtT~>
%AI9_PrivateDataEnd
